{"version":3,"sources":["utils/data-manipulation.ts","utils/encryption.ts","pages/memory/vault/MemoryVaultSettingsMenu.tsx","google-integration/uploadFile.ts","pages/memory/vault/info/MemoryVaultSaveDataButton.tsx","google-integration/updateFileContent.ts","pages/memory/vault/info/MemoryVaultSaveKeyButton.tsx","pages/memory/vault/info/MemoryVaultInfo.tsx","pages/memory/vault/MemoryVault.tsx","pages/standard/StandardPage.tsx"],"names":["arraybuffer2stringUTF16","buf","String","fromCharCode","apply","Uint16Array","string2arraybufferUTF16","str","bufffer","ArrayBuffer","length","bufView","i","strLen","charCodeAt","arraybuffer2stringUTF8","Uint8Array","arraybuffer2base64UTF8","aUTF8CodeUnits","Array","prototype","forEach","call","_","idx","arr","btoa","buffer","btoaUTF8","base642arraybufferUTF8","str64","string2arraybufferUTF8","sBinaryString","atob","aBinaryView","atobUTF8","arraybuffer2base64UTF16","aUTF16CodeUnits","btoaUTF16","base642arraybufferUTF16","atobUTF16","plainText","key","a","iv","window","crypto","getRandomValues","subtle","importKey","name","cryptoKey","encrypt","cypher","data","split","encryptedMessage","decrypt","decryptedData","createKey","generateKey","exportKey","exportedKey","isKeyValid","test","useDataAsStore","decodedData","overrides","useState","store","setStore","title","useEffect","normalizeRoot","updateNodes","nodes","newNodes","node","newStore","rootNode","updated","Date","useDataDecryption","initialData","encryptionKey","setDecryptedData","hasFailed","setHasFailed","then","catch","encryptData","onComplete","denormalizeRoot","MemoryVaultSettingsMenu","onDelete","ref","useRef","isOpen","setIsOpen","onClick","anchorEl","current","open","onClose","DeleteItem","React","style","minWidth","fontSize","color","aria-labelledby","aria-describedby","id","autoFocus","uploadFile","config","encryptedData","form","FormData","append","Blob","JSON","stringify","mimeType","parents","appProperties","withKey","undefined","type","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","setRequestHeader","gapi","auth","getToken","access_token","responseType","send","MemoryVaultSaveDataButton","useDecodedDataContext","googleResourceId","theme","useTheme","anchorRef","isShowingPopover","setIsShowingPopover","useGoogleAuthContext","isSignedIn","currentUser","get","Button","size","Menu","MenuItem","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","ListItemIcon","CloudDownload","Typography","Divider","navigator","clipboard","writeText","FileCopy","icon","googleDrive","width","height","spacing","Tooltip","placement","HelpOutline","fileId","updateFileContent","MemoryVaultSaveKeyButton","MeetingRoom","MemoryVaultInfo","Card","maxWidth","variant","CardHeader","CardContent","Grid","container","item","xs","gutterBottom","date2HumanValue","created","CardActions","MemoryVault","vaultData","children","isReadOnly","draggableData","useDraggableItemsProvider","Provider","value","position","padding","right","top","nodeKey","ADD_PROPOSAL","gql","QUERY","ProposedAPISection","standardProposal","version","SUGGESTED_PROPOSAL","description","MakeAProposalSection","isCreating","setIsCreating","setTitle","useMutation","addProposal","fullWidth","variables","proposal","marginTop","margin","flexDirection","alignItems","label","onChange","e","target","marginBottom","AllProposalsSection","proposals","history","useHistory","map","uuid","push","StandardPage","useQuery","user"],"mappings":"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","file":"static/js/9.bfc1d298.chunk.js","sourcesContent":["/**\n * ArrayBuffer to String UTF 16 and 8 helpers\n */\nexport function arraybuffer2stringUTF16(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}\n\nexport function string2arraybufferUTF16(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\nexport function arraybuffer2stringUTF8(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint8Array(buf) as any);\n}\n\nexport function string2arraybufferUTF8(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\n/**\n * Base 64 <-> array buffer UTF 16 and 8\n */\nexport function arraybuffer2base64UTF8(buf: ArrayBuffer): string {\n  return btoaUTF8(arraybuffer2stringUTF8(buf));\n}\n\nexport function base642arraybufferUTF8(str64: string): ArrayBuffer {\n  return string2arraybufferUTF8(atobUTF8(str64));\n}\n\nexport function arraybuffer2base64UTF16(buf: ArrayBuffer): string {\n  return btoaUTF16(arraybuffer2stringUTF16(buf));\n}\n\nexport function base642arraybufferUTF16(str64: string): ArrayBuffer {\n  return string2arraybufferUTF16(atobUTF16(str64));\n}\n\n/**\n * Base 64  <-> String UTF 16 and 8\n */\n\nfunction btoaUTF16(str: string): string {\n  const aUTF16CodeUnits = new Uint16Array(str.length);\n  Array.prototype.forEach.call(aUTF16CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF16CodeUnits.buffer));\n}\n\nfunction atobUTF16(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF16(aBinaryView.buffer);\n}\n\nfunction btoaUTF8(str: string): string {\n  const aUTF8CodeUnits = new Uint8Array(str.length);\n  Array.prototype.forEach.call(aUTF8CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF8CodeUnits.buffer));\n}\n\nfunction atobUTF8(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF8(aBinaryView.buffer);\n}\n","/**\n * Set of methods used to encrypt and decrypt the data, all operating on base 64\n * TODO: remove redundant conversions for more direct mappings.\n */\n\nimport { Store, TNode, denormalizeRoot, normalizeRoot } from \"./normalization\";\nimport {\n  arraybuffer2base64UTF16,\n  arraybuffer2base64UTF8,\n  arraybuffer2stringUTF16,\n  base642arraybufferUTF16,\n  base642arraybufferUTF8,\n  string2arraybufferUTF16,\n} from \"./data-manipulation\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * Encrypts the data together with iv on base 64 format\n * @param {string} plainText: plain UTF 16 text\n * @param {string} key: encrypted on base 64 format\n */\nexport async function encrypt(plainText: string, key: string): Promise<string> {\n  const iv = window.crypto.getRandomValues(new Uint8Array(12));\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const cypher = await window.crypto.subtle.encrypt(\n    { name: \"AES-GCM\", iv: iv },\n    cryptoKey,\n    string2arraybufferUTF16(plainText),\n  );\n\n  // join iv and message\n  return `${arraybuffer2base64UTF8(iv)}!${arraybuffer2base64UTF16(cypher)}`;\n}\n\n/**\n * Decrypts the data to plain text\n * @param {string} data: encrypted on base 64 format\n * @param {string} key: encrypted on base 64 format\n */\nexport async function decrypt(data: string, key: string): Promise<string> {\n  // split iv from message\n  const [iv, encryptedMessage] = data.split(\"!\");\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const decryptedData = await window.crypto.subtle.decrypt(\n    { name: \"AES-GCM\", iv: base642arraybufferUTF8(iv) },\n    cryptoKey,\n    base642arraybufferUTF16(encryptedMessage),\n  );\n  return arraybuffer2stringUTF16(decryptedData);\n}\n\n/**\n * Creates an unique base 64 key for all encryptions\n */\nexport async function createKey(): Promise<string> {\n  const key = await window.crypto.subtle.generateKey(\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const exportedKey = await window.crypto.subtle.exportKey(\"raw\", key);\n  return arraybuffer2base64UTF16(exportedKey);\n}\n\nexport function isKeyValid(key: string): boolean {\n  const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  return base64regex.test(key) && key.length === 44;\n}\n\nexport function useDataAsStore(\n  decodedData: string | null,\n  overrides: {\n    title?: string;\n  },\n): {\n  store: Store;\n  updateNodes: (nodes: TNode[]) => void;\n} | null {\n  const [store, setStore] = useState<Store | null>(null);\n  const { title } = overrides;\n  useEffect(() => {\n    if (decodedData === null) {\n      return;\n    }\n    setStore(normalizeRoot(decodedData, { title }));\n  }, [decodedData, title]);\n\n  if (store === null) {\n    return null;\n  }\n\n  return {\n    store,\n    updateNodes: (nodes: TNode[]) => {\n      const newNodes = { ...store.nodes };\n      nodes.forEach((node) => (newNodes[node.key] = node));\n      const newStore = {\n        rootNode: {\n          ...store.rootNode,\n          updated: new Date(),\n        },\n        nodes: newNodes,\n      };\n      setStore(newStore);\n    },\n  };\n}\n\nexport function useDataDecryption(initialData: string, encryptionKey: string) {\n  const [decryptedData, setDecryptedData] = useState<string | null>(null);\n  const [hasFailed, setHasFailed] = useState<boolean>(false);\n  useEffect(() => {\n    const isDecryptedAlready = initialData[0] === \"{\";\n    if (isDecryptedAlready) {\n      setDecryptedData(initialData);\n      setHasFailed(false);\n    } else {\n      decrypt(initialData, encryptionKey)\n        .then((data) => {\n          setDecryptedData(data);\n          setHasFailed(false);\n        })\n        .catch(() => {\n          setHasFailed(true);\n          setDecryptedData(\"{}\");\n        });\n    }\n  }, [initialData, encryptionKey]);\n  return { decryptedData, hasFailed };\n}\n\nexport function useDataEncryption(store: Store, encryptionKey: string) {\n  const [encryptedData, setEncryptedData] = useState<string | null>(null);\n  useEffect(() => {\n    encryptData(store, encryptionKey, setEncryptedData);\n  }, [store, encryptionKey]);\n  return encryptedData;\n}\n\nexport function encryptData(\n  store: Store,\n  encryptionKey: string,\n  onComplete: (encryptedData: string) => void,\n) {\n  const plainText = denormalizeRoot(store);\n  encrypt(plainText, encryptionKey).then(onComplete);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { Delete, MoreHoriz } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\ntype Props = {\n  onDelete: () => void;\n};\n\nexport default function MemoryVaultSettingsMenu({ onDelete }: Props) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton onClick={() => setIsOpen(true)} ref={ref}>\n        <MoreHoriz />\n      </IconButton>\n      <Menu anchorEl={ref.current} open={isOpen} onClose={() => setIsOpen(false)}>\n        <DeleteItem\n          onDelete={() => {\n            onDelete();\n            setIsOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n\nfunction DeleteItem({ onDelete }: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <div>\n      <MenuItem onClick={() => setIsOpen(true)}>\n        <ListItemIcon style={{ minWidth: 36 }}>\n          <Delete fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Delete</Typography>\n      </MenuItem>\n      <Dialog\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete this item?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This action can not be undone, are you sure you want to procced?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsOpen(false)} color=\"primary\">\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              onDelete();\n              setIsOpen(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function uploadFile(\n  store: Store,\n  encryptionKey: string,\n  config: { withKey: boolean },\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const form = new FormData();\n    form.append(\n      \"metadata\",\n      new Blob(\n        [\n          JSON.stringify({\n            name: store.rootNode.title,\n            mimeType: \"text/plain;charset=base64\",\n            parents: [\"appDataFolder\"],\n            appProperties: {\n              title: store.rootNode.title,\n              encryptionKey: config.withKey ? encryptionKey : undefined,\n            },\n          }),\n        ],\n        { type: \"application/json\" },\n      ),\n    );\n    form.append(\"file\", new Blob([encryptedData], { type: \"text/plain\" }));\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"POST\",\n      \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\",\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.responseType = \"json\";\n    xhr.send(form);\n  });\n}\n","import {\n  Button,\n  Divider,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { CloudDownload, FileCopy, HelpOutline } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport { denormalizeRoot } from \"../../../../utils/normalization\";\nimport { encryptData } from \"../../../../utils/encryption\";\nimport googleDrive from \"@iconify-icons/mdi/google-drive\";\nimport updateFileContent from \"../../../../google-integration/updateFileContent\";\nimport uploadFile from \"../../../../google-integration/uploadFile\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\nimport { useGoogleAuthContext } from \"../../../../google-integration/useGoogleAuthProvider\";\n\nexport default function MemoryVaultSaveDataButton() {\n  const { store, encryptionKey, googleResourceId } = useDecodedDataContext();\n  const theme = useTheme();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  const auth = useGoogleAuthContext();\n  const isSignedIn = auth?.currentUser.get()?.isSignedIn() === true;\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Data\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        open={isShowingPopover}\n        onClose={() => setIsShowingPopover(false)}\n      >\n        {encryptionKey && (\n          <MenuItem\n            onClick={() => {\n              setIsShowingPopover(false);\n              encryptData(store, encryptionKey, (data) => {\n                const element = document.createElement(\"a\");\n                element.setAttribute(\n                  \"href\",\n                  \"data:text/plain;charset=base64,\" + encodeURIComponent(data),\n                );\n                element.setAttribute(\"download\", \"data.ish\");\n                element.style.display = \"none\";\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n              });\n            }}\n          >\n            <ListItemIcon style={{ minWidth: 36 }}>\n              <CloudDownload fontSize=\"small\" color=\"action\" />\n            </ListItemIcon>\n            <Typography>Download</Typography>\n          </MenuItem>\n        )}\n        <Divider />\n        {encryptionKey && (\n          <MenuItem\n            onClick={() => {\n              setIsShowingPopover(false);\n              encryptData(store, encryptionKey, (data) => {\n                navigator.clipboard.writeText(data).then(() => {\n                  setIsShowingPopover(false);\n                });\n              });\n            }}\n          >\n            <ListItemIcon style={{ minWidth: 36 }}>\n              <FileCopy fontSize=\"small\" color=\"action\" />\n            </ListItemIcon>\n            <Typography>Copy</Typography>\n          </MenuItem>\n        )}\n        <MenuItem\n          onClick={() => {\n            navigator.clipboard.writeText(denormalizeRoot(store)).then(() => {\n              setIsShowingPopover(false);\n            });\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <FileCopy fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Copy as JSON</Typography>\n        </MenuItem>\n        {isSignedIn && (\n          <>\n            <Divider />\n            {encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  uploadFile(store, encryptionKey, { withKey: false });\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>{googleResourceId ? \"Save as copy\" : \"Save\"}</Typography>\n              </MenuItem>\n            )}\n            {encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  uploadFile(store, encryptionKey, { withKey: true });\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>\n                  {googleResourceId ? \"Save with key as copy\" : \"Save with key\"}\n                </Typography>\n                <span style={{ width: theme.spacing(1) }} />\n                <Tooltip\n                  title=\"This option is not recommended as it relies on your Google account not being compromised, prefer saving your key offline for extra safety\"\n                  placement=\"bottom\"\n                >\n                  <HelpOutline fontSize=\"inherit\" />\n                </Tooltip>\n              </MenuItem>\n            )}\n            {googleResourceId && encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  updateFileContent(store, encryptionKey, googleResourceId);\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>Update</Typography>\n                <span style={{ width: theme.spacing(1) }} />\n              </MenuItem>\n            )}\n          </>\n        )}\n      </Menu>\n    </>\n  );\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function updateFileContent(\n  store: Store,\n  encryptionKey: string,\n  fileId: string,\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"json\";\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"PATCH\",\n      `https://www.googleapis.com/upload/drive/v3/files/${fileId}?uploadType=media`,\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.send(encryptedData);\n  });\n}\n","import { Button, ListItemIcon, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { CloudDownload, MeetingRoom } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultSaveKeyButton() {\n  const { encryptionKey } = useDecodedDataContext();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  if (!encryptionKey) {\n    return null;\n  }\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Key\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        open={isShowingPopover}\n        onClose={() => setIsShowingPopover(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            setIsShowingPopover(false);\n            const element = document.createElement(\"a\");\n            element.setAttribute(\n              \"href\",\n              `data:text/plain;charset=base64,${encryptionKey}`,\n            );\n            element.setAttribute(\"download\", \"key.ish\");\n            element.style.display = \"none\";\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <CloudDownload fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Download</Typography>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            navigator.clipboard.writeText(encryptionKey).then(() => {\n              setIsShowingPopover(false);\n            });\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <MeetingRoom fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Copy</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nimport MemoryVaultSaveDataButton from \"./MemoryVaultSaveDataButton\";\nimport MemoryVaultSaveKeyButton from \"./MemoryVaultSaveKeyButton\";\nimport React from \"react\";\nimport { date2HumanValue } from \"../cards/Date/DateNodeCardView\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultInfo() {\n  const { store } = useDecodedDataContext();\n  return (\n    <Card style={{ maxWidth: 400 }} variant=\"outlined\">\n      <CardHeader title={store.rootNode.title} />\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Created</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n              {date2HumanValue(store.rootNode.created)}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Last Updated</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n              {date2HumanValue(store.rootNode.updated)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <MemoryVaultSaveKeyButton />\n        <MemoryVaultSaveDataButton />\n      </CardActions>\n    </Card>\n  );\n}\n","import { Paper, useTheme } from \"@material-ui/core\";\nimport { useDataAsStore, useDataDecryption } from \"../../../utils/encryption\";\nimport useDraggableItemsProvider, {\n  DraggableItemsContext,\n} from \"../useDraggableItemsContext\";\n\nimport CardView from \"./cards/CardView\";\nimport { DecodedDataContext } from \"../useDecodedDataContext\";\nimport MemoryVaultInfo from \"./info/MemoryVaultInfo\";\nimport MemoryVaultSettingsMenu from \"./MemoryVaultSettingsMenu\";\nimport React from \"react\";\nimport { Store } from \"../../../utils/normalization\";\n\nexport type VaultData = {\n  title: string;\n  encryptionKey: string;\n  initialData: string;\n};\n\ntype Props = {\n  vaultData: VaultData;\n  children?(store: Store): void;\n  isReadOnly?: boolean;\n  onDelete: () => void;\n};\n\nexport default function MemoryVault({\n  vaultData: { title, encryptionKey, initialData },\n  children,\n  isReadOnly = false,\n  onDelete,\n}: Props) {\n  const theme = useTheme();\n  const draggableData = useDraggableItemsProvider();\n  const { decryptedData } = useDataDecryption(initialData, encryptionKey);\n  const data = useDataAsStore(decryptedData, { title });\n  if (!data) {\n    return null;\n  }\n  const { store, updateNodes } = data;\n  return (\n    <DraggableItemsContext.Provider value={draggableData}>\n      <DecodedDataContext.Provider\n        value={{\n          store,\n          encryptionKey,\n          updateNodes: isReadOnly ? null : updateNodes,\n        }}\n      >\n        <Paper style={{ position: \"relative\", padding: theme.spacing(3) }}>\n          <div\n            style={{\n              position: \"absolute\",\n              right: theme.spacing(1),\n              top: theme.spacing(1),\n            }}\n          >\n            <MemoryVaultSettingsMenu onDelete={onDelete} />\n          </div>\n          <MemoryVaultInfo />\n          <div style={{ height: theme.spacing(3) }} />\n          <CardView nodeKey={store.rootNode.value} />\n          {children && children(store)}\n        </Paper>\n      </DecodedDataContext.Provider>\n    </DraggableItemsContext.Provider>\n  );\n}\n","import { Button, Paper, TextField, Typography, useTheme } from \"@material-ui/core\";\nimport React, { FunctionComponent, useState } from \"react\";\nimport { denormalizeRoot, normalizeRoot } from \"../../utils/normalization\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\n\nimport CardView from \"../memory/vault/cards/CardView\";\nimport { DecodedDataContext } from \"../memory/useDecodedDataContext\";\nimport MemoryVault from \"../memory/vault/MemoryVault\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ADD_PROPOSAL = gql`\n  mutation Adding($proposal: String!) {\n    addProposal(proposal: $proposal) {\n      uuid\n    }\n  }\n`;\ntype StandardPageResponse = {\n  user?: {\n    uuid: string;\n  };\n  standardProposal: {\n    version: string;\n    data: string;\n  };\n  proposals: Array<{ uuid: string }>;\n};\nconst QUERY = gql`\n  query StandardPage {\n    user {\n      uuid\n    }\n    standardProposal {\n      version\n      data\n    }\n    proposals {\n      uuid\n    }\n  }\n`;\n\nconst StandardPage: FunctionComponent<{}> = () => {\n  const { data } = useQuery<StandardPageResponse>(QUERY);\n  if (data == null) {\n    return null;\n  }\n  const { standardProposal, proposals } = data;\n  return (\n    <div>\n      <ProposedAPISection standardProposal={standardProposal} />\n      {data.user?.uuid != null && <MakeAProposalSection />}\n      <AllProposalsSection proposals={proposals} />\n    </div>\n  );\n};\n\ntype ProposedAPISectionProps = {\n  standardProposal: {\n    version: string;\n    data: string;\n  };\n};\nfunction ProposedAPISection({ standardProposal }: ProposedAPISectionProps) {\n  const store = normalizeRoot(standardProposal.data, {});\n  return (\n    <DecodedDataContext.Provider value={{ store, updateNodes: null }}>\n      <Paper style={{ position: \"relative\", padding: 24 }}>\n        <Typography variant=\"h2\">Proposed API {standardProposal.version}</Typography>\n        <CardView nodeKey={store.rootNode.value} />\n      </Paper>\n    </DecodedDataContext.Provider>\n  );\n}\n\nconst SUGGESTED_PROPOSAL = {\n  \"?Parent field\": {\n    \"Proposed Field\": {\n      type: \"text\",\n      description: \"# in markdown\",\n      \"?subfields\": [\"more fields\"],\n    },\n  },\n};\nconst DUMMY_KEY = \"1Qd1fIUBT6KuzgM9mQOIkk8k77mkXz/4BGMnttcdY1c=\";\nfunction MakeAProposalSection() {\n  const [isCreating, setIsCreating] = useState(false);\n  const theme = useTheme();\n  const [title, setTitle] = useState(\"\");\n  const [addProposal] = useMutation(ADD_PROPOSAL);\n  if (!isCreating) {\n    return (\n      <Paper\n        style={{\n          padding: theme.spacing(2),\n          margin: `${theme.spacing(2)}px auto`,\n          maxWidth: 380,\n        }}\n      >\n        <div\n          style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n        >\n          <Typography variant=\"h5\">Start</Typography>\n        </div>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          autoFocus\n          style={{ marginBottom: theme.spacing(2) }}\n        />\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setIsCreating(true)}\n        >\n          Make new proposal\n        </Button>\n      </Paper>\n    );\n  }\n  return (\n    <MemoryVault\n      vaultData={{\n        title,\n        encryptionKey: DUMMY_KEY,\n        initialData: JSON.stringify(SUGGESTED_PROPOSAL),\n      }}\n      onDelete={() => setIsCreating(false)}\n    >\n      {(store) => (\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            addProposal({ variables: { proposal: denormalizeRoot(store) } });\n            setIsCreating(false);\n            setTitle(\"\");\n          }}\n          style={{ marginTop: theme.spacing(2) }}\n        >\n          Make new proposal\n        </Button>\n      )}\n    </MemoryVault>\n  );\n}\ntype AllProposalsSectionProps = {\n  proposals: Array<{ uuid: string }>;\n};\nfunction AllProposalsSection({ proposals }: AllProposalsSectionProps) {\n  const history = useHistory();\n  return (\n    <Paper style={{ position: \"relative\", padding: 24 }}>\n      <Typography variant=\"h2\">All Proposals</Typography>\n      <ul>\n        {proposals.map(({ uuid }) => (\n          <li key={uuid}>\n            Proposal {uuid}:\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => history.push(`/minder/proposal/${uuid}`)}\n            >\n              Check it out\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </Paper>\n  );\n}\n\nexport default StandardPage;\n"],"sourceRoot":""}