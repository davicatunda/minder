{"version":3,"sources":["Proposal.tsx"],"names":["PROPOSAL","gql","Proposal","text","proposalId","useParams","data","useQuery","variables","uuid","proposal","test","replace","store","normalizeRoot","Provider","value","updateNodes","style","position","padding","variant","nodeKey","rootNode"],"mappings":"iWAcA,IAAMA,EAAWC,cAAH,KAqCCC,UA9ByB,WAAO,IAmB/BC,EAlBRC,EAAeC,cAAfD,WACEE,EAASC,mBAA2BP,EAAU,CACpDQ,UAAW,CAAEC,KAAML,KADbE,KAGR,GAAY,MAARA,IAcUH,EAdcG,EAAKI,SAASJ,MAenC,gBAAgBK,KACrBR,EACGS,QAAQ,kBAAmB,KAC3BA,QACC,kEACA,KAEDA,QAAQ,uBAAwB,MArBnC,OAAO,KAET,IAAMC,EAAQC,YAAcR,EAAKI,SAASJ,KAAM,IAChD,OACE,cAAC,IAAmBS,SAApB,CAA6BC,MAAO,CAAEH,QAAOI,YAAa,MAA1D,SACE,eAAC,IAAD,CAAOC,MAAO,CAAEC,SAAU,WAAYC,QAAS,IAA/C,UACE,eAAC,IAAD,CAAYC,QAAQ,KAApB,uBAAoCjB,KACpC,cAAC,IAAD,CAAUkB,QAAST,EAAMU,SAASP","file":"static/js/10.d756d909.chunk.js","sourcesContent":["import { Paper, Typography } from \"@material-ui/core\";\nimport React, { FunctionComponent } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport CardView from \"./card-items/CardView\";\nimport { DecodedDataContext } from \"./card-items/useDecodedDataContext\";\nimport { normalizeRoot } from \"./utils/normalization\";\nimport { useParams } from \"react-router-dom\";\n\ntype ProposalResponse = {\n  proposal: {\n    data: string;\n  };\n};\nconst PROPOSAL = gql`\n  query Proposal($uuid: String!) {\n    proposal(uuid: $uuid) {\n      data\n    }\n  }\n`;\nconst Proposal: FunctionComponent<{}> = () => {\n  let { proposalId } = useParams<{ proposalId: string }>();\n  const { data } = useQuery<ProposalResponse>(PROPOSAL, {\n    variables: { uuid: proposalId },\n  });\n  if (data == null || !isJSON(data.proposal.data)) {\n    return null;\n  }\n  const store = normalizeRoot(data.proposal.data, {});\n  return (\n    <DecodedDataContext.Provider value={{ store, updateNodes: null }}>\n      <Paper style={{ position: \"relative\", padding: 24 }}>\n        <Typography variant=\"h3\">Proposals {proposalId}</Typography>\n        <CardView nodeKey={store.rootNode.value} />\n      </Paper>\n    </DecodedDataContext.Provider>\n  );\n};\n\nfunction isJSON(text: String) {\n  return /^[\\],:{}\\s]*$/.test(\n    text\n      .replace(/\\\\[\"\\\\/bfnrtu]/g, \"@\")\n      .replace(\n        /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g,\n        \"]\",\n      )\n      .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\"),\n  );\n}\nexport default Proposal;\n"],"sourceRoot":""}