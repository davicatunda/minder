{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","icons/SVGWrapper.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","icons/CreateIcon.tsx","components/Button.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ButtonIcon.tsx","icons/RemoveIcon.tsx","row-items/StringRowItem.tsx","row-items/BooleanRowItem.tsx","row-items/NumberRowItem.tsx","row-items/DateRowItem.tsx","row-items/NullRowItem.tsx","row-items/RowItemName.tsx","icons/AddIcon.tsx","row-items/DataAsList.tsx","Standard.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","SVGWrapper","fontSize","children","style","fill","width","height","display","transition","flexShrink","focusable","viewBox","aria-hidden","role","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","CreateIcon","size","d","buttonStyle","border","padding","minWidth","boxSizing","boxShadow","borderRadius","alignItems","color","fontWeight","lineHeight","textTransform","letterSpacing","backgroundColor","cursor","disableButtonStyle","Button","props","disabled","onClick","_toConsumableArray","arrayLikeToArray","iter","ButtonIcon","background","margin","RemoveIcon","StringRowItem","setValue","useState","isEditing","setIsEditing","type","onChange","e","target","onBlur","ref","input","focus","onKeyDown","key","onMouseDown","BooleanRowItem","checked","NumberRowItem","isNaN","Number","date2value","date","year","getFullYear","month","getMonth","padStart","day","getDate","DateRowItem","split","Date","value2date","date2HumanValue","NullRowItem","isSelectingType","setIsSelectingType","commonStyle","marginRight","RowItemName","setName","isValid","temporaryName","setTemporaryName","saveName","AddIcon","listStyle","paddingLeft","borderLeft","listItemStyle","DataAsList","node","setParentValue","keys","map","index","newNode","reduce","accumulator","currentKey","newValue","assign","nodeAsArray","values","filter","v","RegExp","isDate","lastField","reverse","find","ADD_PROPOSAL","gql","QUERY","SUGGESTED_PROPOSAL","description","Standard","history","useHistory","useMutation","addProposal","proposalData","setProposalData","data","useQuery","latestStandard","proposals","version","JSON","parse","str","user","uuid","variables","proposal","stringify"],"mappings":"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","file":"static/js/4.2e4f4e19.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  fontSize: number;\n  children: ReactNode;\n};\nconst SVGWrapper: FunctionComponent<Props> = ({ fontSize, children }) => (\n  <svg\n    style={{\n      fill: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\",\n      display: \"inline-block\",\n      transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n      flexShrink: 0,\n      fontSize: fontSize ?? \"1.5rem\",\n    }}\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n  >\n    {children}\n  </svg>\n);\n\nexport default SVGWrapper;\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst CreateIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n  </SVGWrapper>\n);\n\nexport default CreateIcon;\n","import React, { ReactNode, FunctionComponent, CSSProperties } from \"react\";\n\nexport const buttonStyle: CSSProperties = {\n  border: 0,\n  padding: \"6px 16px\",\n  minWidth: 64,\n  boxSizing: \"border-box\",\n  boxShadow: `\n    0px 3px 1px -2px rgba(0,0,0,0.2),\n    0px 2px 2px 0px rgba(0,0,0,0.14),\n    0px 1px 5px 0px rgba(0,0,0,0.12)\n  `,\n  borderRadius: 4,\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  color: \"#fff\",\n  fontWeight: 500,\n  lineHeight: 1.75,\n  textTransform: \"uppercase\",\n  fontSize: \"0.875rem\",\n  letterSpacing: \"0.02857em\",\n  backgroundColor: \"#1976d2\",\n  cursor: \"pointer\",\n};\nconst disableButtonStyle: CSSProperties = {\n  ...buttonStyle,\n  backgroundColor: \"#e0e0e0\",\n  cursor: \"not-allowed\",\n  color: \"rgba(0, 0, 0, 0.4)\",\n};\ntype Props = {\n  onClick?: () => void;\n  children: ReactNode;\n  disabled?: boolean;\n};\nconst Button: FunctionComponent<Props> = (props) => {\n  if (props.disabled === true) {\n    return (\n      <button style={disableButtonStyle} disabled>\n        {props.children}\n      </button>\n    );\n  }\n  return (\n    <button onClick={props.onClick} style={buttonStyle}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick?(): void;\n  onMouseDown?(): void;\n};\nconst ButtonIcon: FunctionComponent<Props> = (props) => (\n  <button\n    {...props}\n    style={{\n      background: \"none\",\n      border: 0,\n      padding: 0,\n      margin: 0,\n      cursor: \"pointer\",\n    }}\n  />\n);\n\nexport default ButtonIcon;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst RemoveIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n  </SVGWrapper>\n);\nexport default RemoveIcon;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: string;\n  setValue(value: string | undefined): void;\n};\nconst StringRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{ minWidth: 40, display: \"inline-block\", cursor: \"pointer\" }}\n      >\n        {value === \"\" ? \"?\" : value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"text\"\n        name={name}\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default StringRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: boolean;\n  setValue(value: boolean | undefined): void;\n};\nconst BooleanRowItem: FunctionComponent<Props> = ({\n  name,\n  value,\n  setValue,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value ? \"yes\" : \"no\"}\n      </span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"checkbox\"\n        checked={value}\n        name={name}\n        onChange={(e) => setValue(!value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onBlur={() => setIsEditing(false)}\n        style={{ cursor: \"pointer\" }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default BooleanRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: number;\n  setValue(value: number | undefined): void;\n};\nconst NumberRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"number\"\n        name={name}\n        onChange={(e) =>\n          !isNaN(Number(e.target.value)) && setValue(Number(e.target.value))\n        }\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NumberRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: Date;\n  setValue(value: Date | undefined): void;\n};\nconst DateRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)}>{date2HumanValue(value)}</span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"date\"\n        name={name}\n        onBlur={() => setIsEditing(false)}\n        onChange={(e) => setValue(value2date(e.target.value))}\n        value={date2value(value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nfunction date2value(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\n\nfunction date2HumanValue(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${month}-${day}-${year}`;\n}\n\nfunction value2date(value: string): Date {\n  const [year, month, day] = value.split(\"-\");\n  return new Date(Number(year), Number(month) - 1, Number(day));\n}\n\nexport default DateRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport CreateIcon from \"../icons/CreateIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport { Value } from \"../row-items/DataAsList\";\n\ntype Props = {\n  name: string;\n  setValue(value: Value): void;\n};\nconst NullRowItem: FunctionComponent<Props> = (props) => {\n  const [isSelectingType, setIsSelectingType] = useState(false);\n  if (isSelectingType) {\n    return (\n      <>\n        <button onClick={() => props.setValue(false)}>checkbox</button>\n        <button onClick={() => props.setValue(0)}>number</button>\n        <button onClick={() => props.setValue(\"\")}>text</button>\n        <button onClick={() => props.setValue(new Date())}>date</button>\n        <button onClick={() => props.setValue([])}>list</button>\n        <button onClick={() => props.setValue({})}>object</button>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <ButtonIcon onClick={() => setIsSelectingType(true)}>\n        <CreateIcon size={20} />\n      </ButtonIcon>\n      <ButtonIcon onMouseDown={() => props.setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NullRowItem;\n","import React, { useState, FunctionComponent, CSSProperties } from \"react\";\n\ntype Props = {\n  name: string;\n  setName(temporaryName: string): void;\n  isValid(temporaryName: string): boolean;\n};\nconst commonStyle: CSSProperties = {\n  marginRight: 12,\n  width: 120,\n  boxSizing: \"border-box\",\n};\nconst RowItemName: FunctionComponent<Props> = ({ name, setName, isValid }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [temporaryName, setTemporaryName] = useState(name);\n  const saveName = () => {\n    if (isValid(temporaryName)) {\n      setName(temporaryName);\n      setIsEditing(false);\n    }\n  };\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{\n          fontWeight: \"bold\",\n          cursor: \"pointer\",\n          lineHeight: \"28px\",\n          ...commonStyle,\n        }}\n      >\n        {temporaryName === \"\" ? \"?\" : temporaryName}\n      </span>\n    );\n  }\n\n  return (\n    <input\n      type=\"text\"\n      name={temporaryName}\n      style={commonStyle}\n      onChange={(e) => setTemporaryName(e.target.value)}\n      value={temporaryName}\n      onBlur={saveName}\n      ref={(input) => {\n        input && input.focus();\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          saveName();\n        }\n      }}\n    />\n  );\n};\n\nexport default RowItemName;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst AddIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n  </SVGWrapper>\n);\nexport default AddIcon;\n","import React, { CSSProperties } from \"react\";\nimport StringRowItem from \"./StringRowItem\";\nimport BooleanRowItem from \"./BooleanRowItem\";\nimport NumberRowItem from \"./NumberRowItem\";\nimport DateRowItem from \"./DateRowItem\";\nimport NullRowItem from \"./NullRowItem\";\nimport RowItemName from \"./RowItemName\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport AddIcon from \"../icons/AddIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\nexport type Value =\n  | number\n  | boolean\n  | string\n  | Date\n  | void\n  | TreeNode[]\n  | TreeNode;\ntype TreeNode = {\n  [key: string]: Value;\n};\n\nconst listStyle: CSSProperties = {\n  listStyle: \"none\",\n  paddingLeft: 12,\n  borderLeft: \"1px solid #00000030\",\n  margin: \"4px 0 8px 0\",\n};\nconst listItemStyle: CSSProperties = {\n  padding: 4,\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\ntype Props<T> = {\n  node: T;\n  setParentValue: (newNode: T | undefined) => void;\n};\nconst DataAsList: <T extends TreeNode>(props: Props<T>) => JSX.Element = (\n  props,\n) => {\n  const { node, setParentValue } = props;\n  return (\n    <ul style={listStyle}>\n      {Object.keys(node).map((key: string, index) => (\n        <li style={listItemStyle} key={key}>\n          {!(node instanceof Array) && (\n            <RowItemName\n              name={key}\n              setName={(name) => {\n                const newNode = Object.keys(node).reduce(\n                  (accumulator: TreeNode, currentKey) => {\n                    const isKeyBeingRenamed = currentKey === key;\n                    if (isKeyBeingRenamed) {\n                      accumulator[name] = node[currentKey];\n                    } else {\n                      accumulator[currentKey] = node[currentKey];\n                    }\n                    return accumulator;\n                  },\n                  {},\n                );\n                // @ts-ignore missing support for renames\n                setParentValue(newNode);\n              }}\n              isValid={(name) => name === key || node[name] === undefined}\n            />\n          )}\n          {(function () {\n            const value = node[key];\n            const setValue: (newValue: typeof value) => void = (newValue) => {\n              const newNode = Object.assign({}, node, { [key]: newValue });\n              if (node instanceof Array) {\n                const nodeAsArray = Object.values(newNode);\n                return setParentValue(\n                  // @ts-ignore losing array<T> type\n                  nodeAsArray.filter((v) => v !== undefined),\n                );\n              }\n              return setParentValue(newNode);\n            };\n\n            switch (typeof value) {\n              case \"string\":\n                if (isDate(value)) {\n                  return (\n                    <DateRowItem\n                      name={key}\n                      value={new Date(value)}\n                      setValue={setValue}\n                    />\n                  );\n                }\n                return (\n                  <StringRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"number\":\n                return (\n                  <NumberRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"boolean\":\n                return (\n                  <BooleanRowItem\n                    name={key}\n                    value={value}\n                    setValue={setValue}\n                  />\n                );\n              case \"object\":\n              default:\n                if (value instanceof Date) {\n                  return null;\n                }\n                if (value == null) {\n                  return <NullRowItem name={key} setValue={setValue} />;\n                }\n                // @ts-ignore DataAsList should take array\n                return <DataAsList node={value} setParentValue={setValue} />;\n            }\n          })()}\n        </li>\n      ))}\n      <li style={listItemStyle}>\n        <ButtonIcon\n          onClick={() => {\n            if (node instanceof Array) {\n              // @ts-ignore losing array<T> type\n              return setParentValue([...node, null]);\n            }\n            const lastField = Object.keys(node)\n              .reverse()\n              .find((key) => RegExp(/field:[0-9]+/).test(key));\n            const index = lastField ? Number(lastField.split(\":\")[1]) : 0;\n            return setParentValue({ ...node, [`field:${index + 1}`]: null });\n          }}\n        >\n          <AddIcon size={20} />\n        </ButtonIcon>\n        {Object.keys(node).length === 0 && (\n          <ButtonIcon onClick={() => setParentValue(undefined)}>\n            <RemoveIcon size={20} />\n          </ButtonIcon>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nfunction isDate(value: string): boolean {\n  const regex = RegExp(\n    /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,\n  );\n  return regex.test(value);\n}\n\nexport default DataAsList;\n","import React, { useState, FunctionComponent } from \"react\";\nimport DataAsList from \"./row-items/DataAsList\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport Button from \"./components/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ADD_PROPOSAL = gql`\n  mutation Adding($proposal: String!) {\n    addProposal(proposal: $proposal) {\n      uuid\n    }\n  }\n`;\ntype StandardPageResponse = {\n  user?: {\n    uuid: string,\n  }\n  latestStandard: {\n    version: string;\n    data: string;\n  };\n  proposals: Array<{ uuid: string }>;\n};\nconst QUERY = gql`\n  query StandardPage {\n    user {\n      uuid\n    }\n    latestStandard {\n      version\n      data\n    }\n    proposals {\n      uuid\n    }\n  }\n`;\nconst SUGGESTED_PROPOSAL = {\n  \"?Parent field\": {\n    \"Proposed Field\": {\n      type: \"text\",\n      description: \"# in markdown\",\n      \"?subfields\": [\"more fields\"],\n    },\n  },\n};\nconst Standard: FunctionComponent<{}> = () => {\n  const history = useHistory();\n  const [addProposal] = useMutation(ADD_PROPOSAL);\n  const [proposalData, setProposalData] = useState(SUGGESTED_PROPOSAL);\n  const { data } = useQuery<StandardPageResponse>(QUERY);\n  if (data == null) {\n    return null;\n  }\n  const { latestStandard, proposals } = data;\n  return (\n    <div>\n      <h2> Proposed API {latestStandard.version}</h2>\n      <DataAsList\n        node={JSON.parse(latestStandard.data)}\n        // @ts-ignore workaround\n        setParentValue={(str: Object) => null}\n      />\n      {data.user?.uuid != null && (\n        <>\n          <h2> Make a Proposal </h2>\n          <DataAsList\n            // @ts-ignore workaround\n            node={proposalData}\n            // @ts-ignore workaround\n            setParentValue={setProposalData}\n          />\n          <Button\n            onClick={() => {\n              addProposal({\n                variables: { proposal: JSON.stringify(proposalData) },\n              });\n            }}\n          >\n            Send\n        </Button>\n        </>\n      )}\n      <h2> All Proposals </h2>\n      <ul>\n        {proposals.map(({ uuid }) => (\n          <li key={uuid}>\n            Proposal {uuid}:\n            <Button onClick={() => history.push(`/minder/proposal/${uuid}`)}>\n              Check it out\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Standard;\n"],"sourceRoot":""}