{"version":3,"sources":["utils/normalization.ts","utils/data-manipulation.ts","utils/encryption.ts","pages/home/HomePage.tsx"],"names":["RefinedType","normalizeRoot","decodedData","overrides","parsedDate","JSON","parse","title","created","Date","updated","nodes","rootNodeValue","recursivelyAddNodes","rootNode","value","key","parentKey","data","node","uuid","Array","children","map","child","type","List","RegExp","test","isDate","date","String","Number","Boolean","Null","fields","Object","keys","name","getNode","denormalizeRoot","store","stringify","recursivelyDenormalizeNode","nodeKey","toISOString","childKey","object","forEach","field","defaultNodeValue","parentNode","arraybuffer2stringUTF16","buf","fromCharCode","apply","Uint16Array","string2arraybufferUTF16","str","bufffer","ArrayBuffer","length","bufView","i","strLen","charCodeAt","arraybuffer2stringUTF8","Uint8Array","arraybuffer2base64UTF8","aUTF8CodeUnits","prototype","call","_","idx","arr","btoa","buffer","btoaUTF8","base642arraybufferUTF8","str64","string2arraybufferUTF8","sBinaryString","atob","aBinaryView","atobUTF8","arraybuffer2base64UTF16","aUTF16CodeUnits","btoaUTF16","base642arraybufferUTF16","atobUTF16","plainText","a","iv","window","crypto","getRandomValues","subtle","importKey","cryptoKey","encrypt","cypher","split","encryptedMessage","decrypt","decryptedData","createKey","generateKey","exportKey","exportedKey","isKeyValid","useDataAsStore","useState","setStore","useEffect","updateNodes","newNodes","newStore","useDataDecryption","initialData","encryptionKey","setDecryptedData","hasFailed","setHasFailed","then","catch","encryptData","onComplete","QUERY","gql","HomePage","history","useHistory","path","localStorage","getItem","removeItem","push","useGithubPagesHasNoRouting","theme","useTheme","useQuery","style","backgroundColor","palette","secondary","light","dark","maxWidth","height","spacing","variant","color","gutterBottom","fontWeight","fontSize","verticalAlign","container","item","xs","sm","md","display","size","onClick","standardProposal","position","top","src","process","alt","padding","flexDirection","alignItems","width","subheader","completedItem","index","paddingLeft","primary","todoItem","flexGrow","href","step","paddingRight"],"mappings":"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","file":"static/js/10.e0c67355.chunk.js","sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nexport type StoreKey = string;\ntype NodesStore = {\n  [key: string]: TNode;\n};\nexport type Store = {\n  rootNode: RootNode;\n  nodes: NodesStore;\n};\nexport type TNode =\n  | TObjectNode\n  | TListNode\n  | TDateNode\n  | TStringNode\n  | TBooleanNode\n  | TNumberNode\n  | TNullNode;\n\nexport interface TNodeWithKeys<T extends RefinedType> {\n  type: T;\n  key: StoreKey;\n  parentKey: StoreKey;\n}\nexport type TObjectField = {\n  name: string;\n  value: StoreKey;\n  parentKey: StoreKey;\n};\nexport interface TObjectNode extends TNodeWithKeys<RefinedType.Object> {\n  fields: TObjectField[];\n}\nexport interface TListNode extends TNodeWithKeys<RefinedType.List> {\n  children: StoreKey[];\n}\nexport interface TDateNode extends TNodeWithKeys<RefinedType.Date> {\n  date: Date;\n}\nexport interface TStringNode extends TNodeWithKeys<RefinedType.String> {\n  value: string;\n}\nexport interface TBooleanNode extends TNodeWithKeys<RefinedType.Boolean> {\n  value: boolean;\n}\nexport interface TNumberNode extends TNodeWithKeys<RefinedType.Number> {\n  value: number;\n}\nexport interface TNullNode extends TNodeWithKeys<RefinedType.Null> {}\n\nexport enum RefinedType {\n  List = \"List\",\n  Object = \"Object\",\n  Number = \"Number\",\n  Boolean = \"Boolean\",\n  String = \"String\",\n  Date = \"Date\",\n  Null = \"Null\",\n}\n\nexport type RootNode = {\n  title: string;\n  created: Date;\n  updated: Date;\n  value: StoreKey;\n};\n\nexport function normalizeRoot(\n  decodedData: string,\n  overrides: {\n    title?: string;\n  },\n): Store {\n  const parsedDate = JSON.parse(decodedData);\n  const {\n    title,\n    created = new Date(),\n    updated = new Date(),\n    ...values\n  } = parsedDate;\n  const nodes = {};\n  const rootNodeValue = recursivelyAddNodes(nodes, \"ROOT\", values);\n  const store: Store = {\n    rootNode: {\n      title: overrides.title ?? title ?? \"Primary\",\n      created: new Date(created),\n      updated: new Date(updated),\n      value: rootNodeValue.key,\n    },\n    nodes,\n  };\n  return store;\n}\n\nfunction recursivelyAddNodes(\n  nodes: NodesStore,\n  parentKey: StoreKey,\n  data: any,\n): TNode {\n  const node = getNode(nodes, parentKey, data);\n  nodes[node.key] = node;\n  return node;\n}\n\nfunction getNode(nodes: NodesStore, parentKey: StoreKey, value: any): TNode {\n  const key = uuid();\n  if (value instanceof Array) {\n    const childrenNodes = value.map((child: any) =>\n      recursivelyAddNodes(nodes, parentKey, child),\n    );\n    const children = childrenNodes.map((node) => node.key);\n    return { type: RefinedType.List, key, parentKey, children };\n  }\n  switch (typeof value) {\n    case \"string\": {\n      if (isDate(value)) {\n        const date = new Date(value);\n        return { type: RefinedType.Date, key, parentKey, date };\n      } else {\n        return { type: RefinedType.String, key, parentKey, value };\n      }\n    }\n    case \"number\":\n      return { type: RefinedType.Number, key, parentKey, value };\n    case \"boolean\":\n      return { type: RefinedType.Boolean, key, parentKey, value };\n    case \"object\":\n    default: {\n      if (value == null) {\n        return { type: RefinedType.Null, key, parentKey };\n      } else {\n        const fields = Object.keys(value).map((name) => ({\n          name,\n          value: recursivelyAddNodes(nodes, key, value[name]).key,\n          parentKey: key,\n        }));\n        return { type: RefinedType.Object, key, parentKey, fields };\n      }\n    }\n  }\n}\n\nexport function denormalizeRoot(store: Store): string {\n  return JSON.stringify({\n    title: store.rootNode.title,\n    created: store.rootNode.created,\n    updated: store.rootNode.updated,\n    ...recursivelyDenormalizeNode(store.nodes, store.rootNode.value),\n  });\n}\n\nexport function recursivelyDenormalizeNode(\n  nodes: NodesStore,\n  nodeKey: StoreKey,\n): any {\n  const node = nodes[nodeKey];\n  switch (node.type) {\n    case RefinedType.Boolean:\n      return node.value;\n    case RefinedType.Date:\n      return node.date.toISOString();\n    case RefinedType.List:\n      return node.children.map((childKey) =>\n        recursivelyDenormalizeNode(nodes, childKey),\n      );\n    case RefinedType.Null:\n      return null;\n    case RefinedType.Number:\n      return node.value;\n    case RefinedType.Object:\n      const object: { [name: string]: any } = {};\n      node.fields.forEach((field) => {\n        object[field.name] = recursivelyDenormalizeNode(nodes, field.value);\n      });\n      return object;\n    case RefinedType.String:\n      return node.value;\n  }\n}\n\nexport function defaultNodeValue(\n  type: RefinedType,\n  parentNode: TObjectNode | TListNode,\n): TNode {\n  const key = uuid();\n  const parentKey = parentNode.key;\n  switch (type) {\n    case RefinedType.List:\n      return { type, parentKey, key, children: [] };\n    case RefinedType.Boolean:\n      return { type, parentKey, key, value: true };\n    case RefinedType.Date:\n      return { type, parentKey, key, date: new Date() };\n    case RefinedType.Null:\n      return { type, parentKey, key };\n    case RefinedType.Number:\n      return { type, parentKey, key, value: 0 };\n    case RefinedType.Object:\n      return { type, parentKey, key, fields: [] };\n    case RefinedType.String:\n      return { type, parentKey, key, value: \"\" };\n  }\n}\n\nfunction isDate(value: string): boolean {\n  const regex = RegExp(\n    /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,\n  );\n  return regex.test(value);\n}\n","/**\n * ArrayBuffer to String UTF 16 and 8 helpers\n */\nexport function arraybuffer2stringUTF16(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}\n\nexport function string2arraybufferUTF16(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\nexport function arraybuffer2stringUTF8(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint8Array(buf) as any);\n}\n\nexport function string2arraybufferUTF8(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\n/**\n * Base 64 <-> array buffer UTF 16 and 8\n */\nexport function arraybuffer2base64UTF8(buf: ArrayBuffer): string {\n  return btoaUTF8(arraybuffer2stringUTF8(buf));\n}\n\nexport function base642arraybufferUTF8(str64: string): ArrayBuffer {\n  return string2arraybufferUTF8(atobUTF8(str64));\n}\n\nexport function arraybuffer2base64UTF16(buf: ArrayBuffer): string {\n  return btoaUTF16(arraybuffer2stringUTF16(buf));\n}\n\nexport function base642arraybufferUTF16(str64: string): ArrayBuffer {\n  return string2arraybufferUTF16(atobUTF16(str64));\n}\n\n/**\n * Base 64  <-> String UTF 16 and 8\n */\n\nfunction btoaUTF16(str: string): string {\n  const aUTF16CodeUnits = new Uint16Array(str.length);\n  Array.prototype.forEach.call(aUTF16CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF16CodeUnits.buffer));\n}\n\nfunction atobUTF16(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF16(aBinaryView.buffer);\n}\n\nfunction btoaUTF8(str: string): string {\n  const aUTF8CodeUnits = new Uint8Array(str.length);\n  Array.prototype.forEach.call(aUTF8CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF8CodeUnits.buffer));\n}\n\nfunction atobUTF8(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF8(aBinaryView.buffer);\n}\n","/**\n * Set of methods used to encrypt and decrypt the data, all operating on base 64\n * TODO: remove redundant conversions for more direct mappings.\n */\n\nimport { Store, TNode, denormalizeRoot, normalizeRoot } from \"./normalization\";\nimport {\n  arraybuffer2base64UTF16,\n  arraybuffer2base64UTF8,\n  arraybuffer2stringUTF16,\n  base642arraybufferUTF16,\n  base642arraybufferUTF8,\n  string2arraybufferUTF16,\n} from \"./data-manipulation\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * Encrypts the data together with iv on base 64 format\n * @param {string} plainText: plain UTF 16 text\n * @param {string} key: encrypted on base 64 format\n */\nexport async function encrypt(plainText: string, key: string): Promise<string> {\n  const iv = window.crypto.getRandomValues(new Uint8Array(12));\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const cypher = await window.crypto.subtle.encrypt(\n    { name: \"AES-GCM\", iv: iv },\n    cryptoKey,\n    string2arraybufferUTF16(plainText),\n  );\n\n  // join iv and message\n  return `${arraybuffer2base64UTF8(iv)}!${arraybuffer2base64UTF16(cypher)}`;\n}\n\n/**\n * Decrypts the data to plain text\n * @param {string} data: encrypted on base 64 format\n * @param {string} key: encrypted on base 64 format\n */\nexport async function decrypt(data: string, key: string): Promise<string> {\n  // split iv from message\n  const [iv, encryptedMessage] = data.split(\"!\");\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const decryptedData = await window.crypto.subtle.decrypt(\n    { name: \"AES-GCM\", iv: base642arraybufferUTF8(iv) },\n    cryptoKey,\n    base642arraybufferUTF16(encryptedMessage),\n  );\n  return arraybuffer2stringUTF16(decryptedData);\n}\n\n/**\n * Creates an unique base 64 key for all encryptions\n */\nexport async function createKey(): Promise<string> {\n  const key = await window.crypto.subtle.generateKey(\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const exportedKey = await window.crypto.subtle.exportKey(\"raw\", key);\n  return arraybuffer2base64UTF16(exportedKey);\n}\n\nexport function isKeyValid(key: string): boolean {\n  const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  return base64regex.test(key) && key.length === 44;\n}\n\nexport function useDataAsStore(\n  decodedData: string | null,\n  overrides: {\n    title?: string;\n  },\n): {\n  store: Store;\n  updateNodes: (nodes: TNode[]) => void;\n} | null {\n  const [store, setStore] = useState<Store | null>(null);\n  const { title } = overrides;\n  useEffect(() => {\n    if (decodedData === null) {\n      return;\n    }\n    setStore(normalizeRoot(decodedData, { title }));\n  }, [decodedData, title]);\n\n  if (store === null) {\n    return null;\n  }\n\n  return {\n    store,\n    updateNodes: (nodes: TNode[]) => {\n      const newNodes = { ...store.nodes };\n      nodes.forEach((node) => (newNodes[node.key] = node));\n      const newStore = {\n        rootNode: {\n          ...store.rootNode,\n          updated: new Date(),\n        },\n        nodes: newNodes,\n      };\n      setStore(newStore);\n    },\n  };\n}\n\nexport function useDataDecryption(initialData: string, encryptionKey: string) {\n  const [decryptedData, setDecryptedData] = useState<string | null>(null);\n  const [hasFailed, setHasFailed] = useState<boolean>(false);\n  useEffect(() => {\n    const isDecryptedAlready = initialData[0] === \"{\";\n    if (isDecryptedAlready) {\n      setDecryptedData(initialData);\n      setHasFailed(false);\n    } else {\n      decrypt(initialData, encryptionKey)\n        .then((data) => {\n          setDecryptedData(data);\n          setHasFailed(false);\n        })\n        .catch(() => {\n          setHasFailed(true);\n          setDecryptedData(\"{}\");\n        });\n    }\n  }, [initialData, encryptionKey]);\n  return { decryptedData, hasFailed };\n}\n\nexport function useDataEncryption(store: Store, encryptionKey: string) {\n  const [encryptedData, setEncryptedData] = useState<string | null>(null);\n  useEffect(() => {\n    encryptData(store, encryptionKey, setEncryptedData);\n  }, [store, encryptionKey]);\n  return encryptedData;\n}\n\nexport function encryptData(\n  store: Store,\n  encryptionKey: string,\n  onComplete: (encryptedData: string) => void,\n) {\n  const plainText = denormalizeRoot(store);\n  encrypt(plainText, encryptionKey).then(onComplete);\n}\n","import {\n  Autorenew,\n  Build,\n  CheckBox,\n  CheckBoxOutlineBlank,\n  Lock,\n  SubdirectoryArrowRight,\n} from \"@material-ui/icons\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport { createKey } from \"../../utils/encryption\";\nimport { useHistory } from \"react-router-dom\";\n\ntype HomePageResponse = {\n  standardProposal: {\n    data: string;\n  };\n};\nconst QUERY = gql`\n  query HomePage {\n    standardProposal {\n      data\n    }\n  }\n`;\nexport default function HomePage() {\n  useGithubPagesHasNoRouting();\n  const theme = useTheme();\n  const history = useHistory();\n  const { data } = useQuery<HomePageResponse>(QUERY);\n\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor:\n            theme.palette.type === \"light\"\n              ? theme.palette.secondary.light\n              : theme.palette.secondary.dark,\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <div style={{ height: theme.spacing(8) }} />\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n            gutterBottom\n            style={{ fontWeight: \"bold\" }}\n          >\n            Your long term memory vault{\" \"}\n            <span style={{ fontSize: 48, verticalAlign: \"bottom\" }}>\n              <Lock fontSize=\"inherit\" />\n            </span>\n          </Typography>\n          <div style={{ height: theme.spacing(2) }} />\n          <Grid container spacing={4}>\n            <Grid item xs={12} sm={12} md={4}>\n              <Typography\n                variant=\"h5\"\n                color=\"textSecondary\"\n                display=\"block\"\n                gutterBottom\n              >\n                Store anything you might want to remember on a fully encrypted\n                platform.\n              </Typography>\n              <div style={{ height: theme.spacing(2) }} />\n              <Typography\n                variant=\"h5\"\n                color=\"textSecondary\"\n                display=\"block\"\n                gutterBottom\n              >\n                Imagine all the things that you need to remember, for example,\n                medical history, previous addresses, favorite restaurants from your\n                home town. Chances are that some are long forgotten. Luckily for you\n                all these things can be stored and shared on Minder with the safety\n                of a fully encrypted platform.\n              </Typography>\n              <div style={{ height: theme.spacing(2) }} />\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  createKey().then((key) => {\n                    const value =\n                      data?.standardProposal?.data ??\n                      '{\"Personal\":{},\"Community\":{},\"Education\":{},\"Work\":{},\"Health\":{}}';\n                    history.push(\n                      `minder/memories?title=Demo&key=${key}&data=${value}&readOnly=false`,\n                    );\n                  });\n                }}\n              >\n                Try it\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={12} md={8}>\n              <img\n                style={{ maxWidth: \"110%\", position: \"relative\", top: -12 }}\n                src={process.env.PUBLIC_URL + \"/Demo.png\"}\n                alt=\"demo of the product\"\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n      <div style={{ height: theme.spacing(16) }} />\n      <Container maxWidth=\"md\">\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={6} style={{ display: \"grid\" }}>\n            <Paper\n              variant=\"outlined\"\n              style={{\n                padding: theme.spacing(3),\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <Typography\n                variant=\"h4\"\n                style={{ display: \"flex\", alignItems: \"center\" }}\n                gutterBottom\n              >\n                <Autorenew fontSize=\"large\" color=\"primary\" />\n                <span style={{ width: theme.spacing(2) }} />\n                Progress\n              </Typography>\n              <div style={{ height: theme.spacing(1) }} />\n              <Typography variant=\"body1\" gutterBottom>\n                I'm the only developer so I'm taking my time.\n              </Typography>\n              <List\n                subheader={\n                  <ListSubheader style={{ padding: 0 }}>GOALS</ListSubheader>\n                }\n              >\n                {[\n                  \"encryption client to client layer\",\n                  \"initial CRUD operations\",\n                ].map((completedItem, index) => (\n                  <ListItem style={{ paddingLeft: 0 }} key={index}>\n                    <ListItemIcon>\n                      <CheckBox />\n                    </ListItemIcon>\n                    <ListItemText primary={completedItem} />\n                  </ListItem>\n                ))}\n                {[\n                  \"build User Voted Standard for the recommend fields everyone should have\",\n                  \"create partial copies of your data into shareable units for 3rd parties to consume\",\n                  \"Based on standard create a backend backed by graphql for automatization\",\n                ].map((todoItem, index) => (\n                  <ListItem style={{ paddingLeft: 0 }} key={index}>\n                    <ListItemIcon>\n                      <CheckBoxOutlineBlank />\n                    </ListItemIcon>\n                    <ListItemText primary={todoItem} />\n                  </ListItem>\n                ))}\n              </List>\n              <div style={{ height: theme.spacing(2), flexGrow: 1 }} />\n              <Divider />\n              <div style={{ height: theme.spacing(2) }} />\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                href=\"https://github.com/davicatunda/minder\"\n              >\n                Support\n              </Button>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} style={{ display: \"grid\" }}>\n            <Paper\n              variant=\"outlined\"\n              style={{\n                padding: theme.spacing(3),\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <Typography\n                variant=\"h4\"\n                style={{ display: \"flex\", alignItems: \"center\" }}\n                gutterBottom\n              >\n                <Build fontSize=\"large\" color=\"primary\" />\n                <span style={{ width: theme.spacing(2) }} />\n                Usage\n              </Typography>\n              <div style={{ height: theme.spacing(1) }} />\n              <Typography variant=\"body1\" gutterBottom>\n                I'm the only user so there is only one way.\n              </Typography>\n              <List\n                subheader={\n                  <ListSubheader style={{ padding: 0 }}>STEPS</ListSubheader>\n                }\n              >\n                {[\n                  \"Create or upload your encryption key and data\",\n                  \"Consult your data, add new items, reorder them\",\n                  \"Save your key and encrypted data on somewhere safe\",\n                  \"Live your life, and come back whenever your memory fails you\",\n                ].map((step, index) => (\n                  <ListItem style={{ paddingLeft: 0 }} key={index}>\n                    <ListItemIcon style={{ paddingRight: 0 }}>\n                      <SubdirectoryArrowRight />\n                    </ListItemIcon>\n                    <ListItemText primary={step} />\n                  </ListItem>\n                ))}\n              </List>\n              <div style={{ height: theme.spacing(2), flexGrow: 1 }} />\n              <Divider />\n              <div style={{ height: theme.spacing(2) }} />\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                onClick={() => {\n                  createKey().then((key) => {\n                    const value =\n                      data?.standardProposal?.data ??\n                      '{\"Personal\":{},\"Community\":{},\"Education\":{},\"Work\":{},\"Health\":{}}';\n                    history.push(\n                      `minder/memories?title=Demo&key=${key}&data=${value}&readOnly=false`,\n                    );\n                  });\n                }}\n              >\n                Try it\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n      <div style={{ height: theme.spacing(10) }} />\n    </div>\n  );\n}\n\nfunction useGithubPagesHasNoRouting(): void {\n  const history = useHistory();\n  useEffect(() => {\n    const path = localStorage.getItem(\"path\");\n    if (path) {\n      localStorage.removeItem(\"path\");\n      history.push(path);\n    }\n  });\n}\n"],"sourceRoot":""}