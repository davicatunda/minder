{"version":3,"sources":["utils/data-manipulation.ts","utils/encryption.ts","pages/memory/vault/MemoryVaultSettingsMenu.tsx","google-integration/uploadFile.ts","pages/memory/vault/info/MemoryVaultSaveDataButton.tsx","google-integration/updateFileContent.ts","pages/memory/vault/info/MemoryVaultSaveKeyButton.tsx","pages/memory/vault/info/MemoryVaultInfo.tsx","pages/memory/vault/MemoryVault.tsx","pages/memory/google-vault/GoogleMemoryVault.tsx","pages/memory/vault/create/DragAndDrop.tsx","pages/memory/vault/create/inputs/readFile.ts","pages/memory/vault/create/inputs/MemoryVaultKeyInput.tsx","pages/memory/vault/create/MemoryVaultPreview.tsx","pages/memory/vault/create/inputs/MemoryVaultTitleInput.tsx","pages/memory/google-vault/GoogleMemoryVaultCreatingState.tsx","pages/memory/google-vault/GoogleMemoryVaultLoadingState.tsx","pages/memory/google-vault/GoogleMemoryCard.tsx","google-integration/deleteFile.ts","pages/memory/useStandardProposal.ts","pages/memory/navbar/LeftNavAddCardItem.tsx","pages/memory/vault/CardNavBarItem.tsx","pages/memory/navbar/LeftNavCardItem.tsx","pages/memory/google-vault/GoogleCardNavBarItem.tsx","pages/memory/navbar/LeftNavGoogleItem.tsx","pages/memory/vault/create/inputs/MemoryVaultDataInput.tsx","pages/memory/vault/create/MemoryVaultCreateForm.tsx","pages/memory/vault/create/MemoryVaultCreatingState.tsx","pages/memory/vault/MemoryVaultLoadingState.tsx","pages/memory/vault/MemoryCard.tsx","google-integration/useGoogleFilesList.ts","google-integration/useEnforceScope.ts","pages/memory/useCardsFromGoogleDrive.ts","pages/memory/MemoryPage.tsx","pages/memory/useCardsFromUrl.ts"],"names":["arraybuffer2stringUTF16","buf","String","fromCharCode","apply","Uint16Array","string2arraybufferUTF16","str","bufffer","ArrayBuffer","length","bufView","i","strLen","charCodeAt","arraybuffer2stringUTF8","Uint8Array","arraybuffer2base64UTF8","aUTF8CodeUnits","Array","prototype","forEach","call","_","idx","arr","btoa","buffer","btoaUTF8","base642arraybufferUTF8","str64","string2arraybufferUTF8","sBinaryString","atob","aBinaryView","atobUTF8","arraybuffer2base64UTF16","aUTF16CodeUnits","btoaUTF16","base642arraybufferUTF16","atobUTF16","plainText","key","a","iv","window","crypto","getRandomValues","subtle","importKey","name","cryptoKey","encrypt","cypher","data","split","encryptedMessage","decrypt","decryptedData","createKey","generateKey","exportKey","exportedKey","isKeyValid","test","useDataAsStore","decodedData","overrides","useState","store","setStore","title","useEffect","normalizeRoot","updateNodes","nodes","newNodes","node","newStore","rootNode","updated","Date","useDataDecryption","initialData","encryptionKey","setDecryptedData","hasFailed","setHasFailed","then","catch","encryptData","onComplete","denormalizeRoot","MemoryVaultSettingsMenu","onDelete","ref","useRef","isOpen","setIsOpen","onClick","anchorEl","current","open","onClose","DeleteItem","React","style","minWidth","fontSize","color","aria-labelledby","aria-describedby","id","autoFocus","uploadFile","config","encryptedData","form","FormData","append","Blob","JSON","stringify","mimeType","parents","appProperties","withKey","undefined","type","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","setRequestHeader","gapi","auth","getToken","access_token","responseType","send","MemoryVaultSaveDataButton","useDecodedDataContext","googleResourceId","theme","useTheme","anchorRef","isShowingPopover","setIsShowingPopover","useGoogleAuthContext","isSignedIn","currentUser","get","Button","size","Menu","MenuItem","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","ListItemIcon","CloudDownload","Typography","Divider","navigator","clipboard","writeText","FileCopy","icon","googleDrive","width","height","spacing","Tooltip","placement","HelpOutline","fileId","updateFileContent","MemoryVaultSaveKeyButton","MeetingRoom","MemoryVaultInfo","Card","maxWidth","variant","CardHeader","CardContent","Grid","container","item","xs","gutterBottom","date2HumanValue","created","CardActions","MemoryVault","vaultData","children","isReadOnly","draggableData","useDraggableItemsProvider","Provider","value","position","padding","right","top","nodeKey","GoogleMemoryVault","resourceId","Paper","CardView","DragAndDrop","onDrop","event","preventDefault","dataTransfer","files","onDragOver","onDragEnter","readFile","file","onDone","reader","FileReader","onloadend","result","readAsText","MemoryVaultKeyInput","setEncryptionKey","TextField","margin","error","required","fullWidth","label","autoComplete","onChange","e","target","InputProps","endAdornment","InputAdornment","arrow","IconButton","aria-label","Cached","MemoryVaultPreview","titleWithFallback","flex","overflow","zIndex","backgroundColor","palette","background","default","opacity","left","bottom","alignItems","justifyContent","component","MemoryVaultTitleInput","setTitle","GoogleMemoryVaultCreatingState","onSubmit","md","xl","minHeight","flexDirection","flexGrow","align","flexShrink","flexBasis","disabled","startIcon","Add","GoogleMemoryVaultLoadingState","GoogleMemoryCard","card","setGoogleCards","deleteCard","client","drive","delete","old","filter","c","changeCardVaultData","useCallback","newVaultData","map","oldCard","isCreating","newCard","QUERY","gql","useStandardProposal","onCompleted","useQuery","standardProposal","LeftNavAddCardItem","addCard","uuid","List","ListItem","button","ListItemText","primary","oneLineStyle","whiteSpace","textOverflow","CardNavBarItem","toogleCardVisibility","Drafts","Mail","primaryTypographyProps","LeftNavCardItem","setCards","selectedCard","oldCards","GoogleCardNavBarItem","LeftNavGoogleItem","isDownloading","setIsDownloading","alt","DataOptions","MemoryVaultDataInput","setInitialData","expanded","setExpanded","STANDARD","dataOption","selectDataOption","setEncryptedData","aria-expanded","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","FormLabel","RadioGroup","CUSTOM","EMPTY","FormControlLabel","control","Radio","version","textTransform","outlineWidth","outlineStyle","outlineColor","secondary","main","GetApp","Done","hidden","MemoryVaultCreateForm","MemoryVaultCreatingState","MemoryVaultLoadingState","MemoryCard","useGoogleFilesList","onFetch","hasScope","scope","user","hasGrantedScopes","grant","useEnforceScope","GOOGLE_SCOPES","list","spaces","fields","pageSize","response","filetoListItem","MemoryPage","googleCards","listItems","useCardsFromGoogleDrive","cards","search","useLocation","params","queryString","parse","cardFromUrl","readOnly","join","useCardsFromUrl","createdCards","leftNavSections","bodyCards","leftNavStyle","borderRightColor","divider","borderRightWidth","borderRightStyle","bodyStyle","sm","lg","child","index"],"mappings":"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","file":"static/js/8.944503ce.chunk.js","sourcesContent":["/**\n * ArrayBuffer to String UTF 16 and 8 helpers\n */\nexport function arraybuffer2stringUTF16(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}\n\nexport function string2arraybufferUTF16(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\nexport function arraybuffer2stringUTF8(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint8Array(buf) as any);\n}\n\nexport function string2arraybufferUTF8(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\n/**\n * Base 64 <-> array buffer UTF 16 and 8\n */\nexport function arraybuffer2base64UTF8(buf: ArrayBuffer): string {\n  return btoaUTF8(arraybuffer2stringUTF8(buf));\n}\n\nexport function base642arraybufferUTF8(str64: string): ArrayBuffer {\n  return string2arraybufferUTF8(atobUTF8(str64));\n}\n\nexport function arraybuffer2base64UTF16(buf: ArrayBuffer): string {\n  return btoaUTF16(arraybuffer2stringUTF16(buf));\n}\n\nexport function base642arraybufferUTF16(str64: string): ArrayBuffer {\n  return string2arraybufferUTF16(atobUTF16(str64));\n}\n\n/**\n * Base 64  <-> String UTF 16 and 8\n */\n\nfunction btoaUTF16(str: string): string {\n  const aUTF16CodeUnits = new Uint16Array(str.length);\n  Array.prototype.forEach.call(aUTF16CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF16CodeUnits.buffer));\n}\n\nfunction atobUTF16(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF16(aBinaryView.buffer);\n}\n\nfunction btoaUTF8(str: string): string {\n  const aUTF8CodeUnits = new Uint8Array(str.length);\n  Array.prototype.forEach.call(aUTF8CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF8CodeUnits.buffer));\n}\n\nfunction atobUTF8(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF8(aBinaryView.buffer);\n}\n","/**\n * Set of methods used to encrypt and decrypt the data, all operating on base 64\n * TODO: remove redundant conversions for more direct mappings.\n */\n\nimport { Store, TNode, denormalizeRoot, normalizeRoot } from \"./normalization\";\nimport {\n  arraybuffer2base64UTF16,\n  arraybuffer2base64UTF8,\n  arraybuffer2stringUTF16,\n  base642arraybufferUTF16,\n  base642arraybufferUTF8,\n  string2arraybufferUTF16,\n} from \"./data-manipulation\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * Encrypts the data together with iv on base 64 format\n * @param {string} plainText: plain UTF 16 text\n * @param {string} key: encrypted on base 64 format\n */\nexport async function encrypt(plainText: string, key: string): Promise<string> {\n  const iv = window.crypto.getRandomValues(new Uint8Array(12));\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const cypher = await window.crypto.subtle.encrypt(\n    { name: \"AES-GCM\", iv: iv },\n    cryptoKey,\n    string2arraybufferUTF16(plainText),\n  );\n\n  // join iv and message\n  return `${arraybuffer2base64UTF8(iv)}!${arraybuffer2base64UTF16(cypher)}`;\n}\n\n/**\n * Decrypts the data to plain text\n * @param {string} data: encrypted on base 64 format\n * @param {string} key: encrypted on base 64 format\n */\nexport async function decrypt(data: string, key: string): Promise<string> {\n  // split iv from message\n  const [iv, encryptedMessage] = data.split(\"!\");\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const decryptedData = await window.crypto.subtle.decrypt(\n    { name: \"AES-GCM\", iv: base642arraybufferUTF8(iv) },\n    cryptoKey,\n    base642arraybufferUTF16(encryptedMessage),\n  );\n  return arraybuffer2stringUTF16(decryptedData);\n}\n\n/**\n * Creates an unique base 64 key for all encryptions\n */\nexport async function createKey(): Promise<string> {\n  const key = await window.crypto.subtle.generateKey(\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const exportedKey = await window.crypto.subtle.exportKey(\"raw\", key);\n  return arraybuffer2base64UTF16(exportedKey);\n}\n\nexport function isKeyValid(key: string): boolean {\n  const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  return base64regex.test(key) && key.length === 44;\n}\n\nexport function useDataAsStore(\n  decodedData: string | null,\n  overrides: {\n    title?: string;\n  },\n): {\n  store: Store;\n  updateNodes: (nodes: TNode[]) => void;\n} | null {\n  const [store, setStore] = useState<Store | null>(null);\n  const { title } = overrides;\n  useEffect(() => {\n    if (decodedData === null) {\n      return;\n    }\n    setStore(normalizeRoot(decodedData, { title }));\n  }, [decodedData, title]);\n\n  if (store === null) {\n    return null;\n  }\n\n  return {\n    store,\n    updateNodes: (nodes: TNode[]) => {\n      const newNodes = { ...store.nodes };\n      nodes.forEach((node) => (newNodes[node.key] = node));\n      const newStore = {\n        rootNode: {\n          ...store.rootNode,\n          updated: new Date(),\n        },\n        nodes: newNodes,\n      };\n      setStore(newStore);\n    },\n  };\n}\n\nexport function useDataDecryption(initialData: string, encryptionKey: string) {\n  const [decryptedData, setDecryptedData] = useState<string | null>(null);\n  const [hasFailed, setHasFailed] = useState<boolean>(false);\n  useEffect(() => {\n    const isDecryptedAlready = initialData[0] === \"{\";\n    if (isDecryptedAlready) {\n      setDecryptedData(initialData);\n      setHasFailed(false);\n    } else {\n      decrypt(initialData, encryptionKey)\n        .then((data) => {\n          setDecryptedData(data);\n          setHasFailed(false);\n        })\n        .catch(() => {\n          setHasFailed(true);\n          setDecryptedData(\"{}\");\n        });\n    }\n  }, [initialData, encryptionKey]);\n  return { decryptedData, hasFailed };\n}\n\nexport function useDataEncryption(store: Store, encryptionKey: string) {\n  const [encryptedData, setEncryptedData] = useState<string | null>(null);\n  useEffect(() => {\n    encryptData(store, encryptionKey, setEncryptedData);\n  }, [store, encryptionKey]);\n  return encryptedData;\n}\n\nexport function encryptData(\n  store: Store,\n  encryptionKey: string,\n  onComplete: (encryptedData: string) => void,\n) {\n  const plainText = denormalizeRoot(store);\n  encrypt(plainText, encryptionKey).then(onComplete);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { Delete, MoreHoriz } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\ntype Props = {\n  onDelete: () => void;\n};\n\nexport default function MemoryVaultSettingsMenu({ onDelete }: Props) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton onClick={() => setIsOpen(true)} ref={ref}>\n        <MoreHoriz />\n      </IconButton>\n      <Menu anchorEl={ref.current} open={isOpen} onClose={() => setIsOpen(false)}>\n        <DeleteItem\n          onDelete={() => {\n            onDelete();\n            setIsOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n\nfunction DeleteItem({ onDelete }: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <div>\n      <MenuItem onClick={() => setIsOpen(true)}>\n        <ListItemIcon style={{ minWidth: 36 }}>\n          <Delete fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Delete</Typography>\n      </MenuItem>\n      <Dialog\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete this item?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This action can not be undone, are you sure you want to procced?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsOpen(false)} color=\"primary\">\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              onDelete();\n              setIsOpen(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function uploadFile(\n  store: Store,\n  encryptionKey: string,\n  config: { withKey: boolean },\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const form = new FormData();\n    form.append(\n      \"metadata\",\n      new Blob(\n        [\n          JSON.stringify({\n            name: store.rootNode.title,\n            mimeType: \"text/plain;charset=base64\",\n            parents: [\"appDataFolder\"],\n            appProperties: {\n              title: store.rootNode.title,\n              encryptionKey: config.withKey ? encryptionKey : undefined,\n            },\n          }),\n        ],\n        { type: \"application/json\" },\n      ),\n    );\n    form.append(\"file\", new Blob([encryptedData], { type: \"text/plain\" }));\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"POST\",\n      \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\",\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.responseType = \"json\";\n    xhr.send(form);\n  });\n}\n","import {\n  Button,\n  Divider,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { CloudDownload, FileCopy, HelpOutline } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\nimport { Icon } from \"@iconify/react\";\nimport { denormalizeRoot } from \"../../../../utils/normalization\";\nimport { encryptData } from \"../../../../utils/encryption\";\nimport googleDrive from \"@iconify-icons/mdi/google-drive\";\nimport updateFileContent from \"../../../../google-integration/updateFileContent\";\nimport uploadFile from \"../../../../google-integration/uploadFile\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\nimport { useGoogleAuthContext } from \"../../../../google-integration/useGoogleAuthProvider\";\n\nexport default function MemoryVaultSaveDataButton() {\n  const { store, encryptionKey, googleResourceId } = useDecodedDataContext();\n  const theme = useTheme();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  const auth = useGoogleAuthContext();\n  const isSignedIn = auth?.currentUser.get()?.isSignedIn() === true;\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Data\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        open={isShowingPopover}\n        onClose={() => setIsShowingPopover(false)}\n      >\n        {encryptionKey && (\n          <MenuItem\n            onClick={() => {\n              setIsShowingPopover(false);\n              encryptData(store, encryptionKey, (data) => {\n                const element = document.createElement(\"a\");\n                element.setAttribute(\n                  \"href\",\n                  \"data:text/plain;charset=base64,\" + encodeURIComponent(data),\n                );\n                element.setAttribute(\"download\", \"data.ish\");\n                element.style.display = \"none\";\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n              });\n            }}\n          >\n            <ListItemIcon style={{ minWidth: 36 }}>\n              <CloudDownload fontSize=\"small\" color=\"action\" />\n            </ListItemIcon>\n            <Typography>Download</Typography>\n          </MenuItem>\n        )}\n        <Divider />\n        {encryptionKey && (\n          <MenuItem\n            onClick={() => {\n              setIsShowingPopover(false);\n              encryptData(store, encryptionKey, (data) => {\n                navigator.clipboard.writeText(data).then(() => {\n                  setIsShowingPopover(false);\n                });\n              });\n            }}\n          >\n            <ListItemIcon style={{ minWidth: 36 }}>\n              <FileCopy fontSize=\"small\" color=\"action\" />\n            </ListItemIcon>\n            <Typography>Copy</Typography>\n          </MenuItem>\n        )}\n        <MenuItem\n          onClick={() => {\n            navigator.clipboard.writeText(denormalizeRoot(store)).then(() => {\n              setIsShowingPopover(false);\n            });\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <FileCopy fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Copy as JSON</Typography>\n        </MenuItem>\n        {isSignedIn && (\n          <>\n            <Divider />\n            {encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  uploadFile(store, encryptionKey, { withKey: false });\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>{googleResourceId ? \"Save as copy\" : \"Save\"}</Typography>\n              </MenuItem>\n            )}\n            {encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  uploadFile(store, encryptionKey, { withKey: true });\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>\n                  {googleResourceId ? \"Save with key as copy\" : \"Save with key\"}\n                </Typography>\n                <span style={{ width: theme.spacing(1) }} />\n                <Tooltip\n                  title=\"This option is not recommended as it relies on your Google account not being compromised, prefer saving your key offline for extra safety\"\n                  placement=\"bottom\"\n                >\n                  <HelpOutline fontSize=\"inherit\" />\n                </Tooltip>\n              </MenuItem>\n            )}\n            {googleResourceId && encryptionKey && (\n              <MenuItem\n                onClick={() => {\n                  setIsShowingPopover(false);\n                  updateFileContent(store, encryptionKey, googleResourceId);\n                }}\n              >\n                <ListItemIcon style={{ minWidth: 36 }}>\n                  <Icon icon={googleDrive} width={20} height={20} />\n                </ListItemIcon>\n                <Typography>Update</Typography>\n                <span style={{ width: theme.spacing(1) }} />\n              </MenuItem>\n            )}\n          </>\n        )}\n      </Menu>\n    </>\n  );\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function updateFileContent(\n  store: Store,\n  encryptionKey: string,\n  fileId: string,\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"json\";\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"PATCH\",\n      `https://www.googleapis.com/upload/drive/v3/files/${fileId}?uploadType=media`,\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.send(encryptedData);\n  });\n}\n","import { Button, ListItemIcon, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { CloudDownload, MeetingRoom } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultSaveKeyButton() {\n  const { encryptionKey } = useDecodedDataContext();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  if (!encryptionKey) {\n    return null;\n  }\n  return (\n    <>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Key\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        open={isShowingPopover}\n        onClose={() => setIsShowingPopover(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            setIsShowingPopover(false);\n            const element = document.createElement(\"a\");\n            element.setAttribute(\n              \"href\",\n              `data:text/plain;charset=base64,${encryptionKey}`,\n            );\n            element.setAttribute(\"download\", \"key.ish\");\n            element.style.display = \"none\";\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <CloudDownload fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Download</Typography>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            navigator.clipboard.writeText(encryptionKey).then(() => {\n              setIsShowingPopover(false);\n            });\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <MeetingRoom fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Copy</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nimport MemoryVaultSaveDataButton from \"./MemoryVaultSaveDataButton\";\nimport MemoryVaultSaveKeyButton from \"./MemoryVaultSaveKeyButton\";\nimport React from \"react\";\nimport { date2HumanValue } from \"../cards/Date/DateNodeCardView\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultInfo() {\n  const { store } = useDecodedDataContext();\n  return (\n    <Card style={{ maxWidth: 400 }} variant=\"outlined\">\n      <CardHeader title={store.rootNode.title} />\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Created</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n              {date2HumanValue(store.rootNode.created)}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Last Updated</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n              {date2HumanValue(store.rootNode.updated)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <MemoryVaultSaveKeyButton />\n        <MemoryVaultSaveDataButton />\n      </CardActions>\n    </Card>\n  );\n}\n","import { Paper, useTheme } from \"@material-ui/core\";\nimport { useDataAsStore, useDataDecryption } from \"../../../utils/encryption\";\nimport useDraggableItemsProvider, {\n  DraggableItemsContext,\n} from \"../useDraggableItemsContext\";\n\nimport CardView from \"./cards/CardView\";\nimport { DecodedDataContext } from \"../useDecodedDataContext\";\nimport MemoryVaultInfo from \"./info/MemoryVaultInfo\";\nimport MemoryVaultSettingsMenu from \"./MemoryVaultSettingsMenu\";\nimport React from \"react\";\nimport { Store } from \"../../../utils/normalization\";\n\nexport type VaultData = {\n  title: string;\n  encryptionKey: string;\n  initialData: string;\n};\n\ntype Props = {\n  vaultData: VaultData;\n  children?(store: Store): void;\n  isReadOnly?: boolean;\n  onDelete: () => void;\n};\n\nexport default function MemoryVault({\n  vaultData: { title, encryptionKey, initialData },\n  children,\n  isReadOnly = false,\n  onDelete,\n}: Props) {\n  const theme = useTheme();\n  const draggableData = useDraggableItemsProvider();\n  const { decryptedData } = useDataDecryption(initialData, encryptionKey);\n  const data = useDataAsStore(decryptedData, { title });\n  if (!data) {\n    return null;\n  }\n  const { store, updateNodes } = data;\n  return (\n    <DraggableItemsContext.Provider value={draggableData}>\n      <DecodedDataContext.Provider\n        value={{\n          store,\n          encryptionKey,\n          updateNodes: isReadOnly ? null : updateNodes,\n        }}\n      >\n        <Paper style={{ position: \"relative\", padding: theme.spacing(3) }}>\n          <div\n            style={{\n              position: \"absolute\",\n              right: theme.spacing(1),\n              top: theme.spacing(1),\n            }}\n          >\n            <MemoryVaultSettingsMenu onDelete={onDelete} />\n          </div>\n          <MemoryVaultInfo />\n          <div style={{ height: theme.spacing(3) }} />\n          <CardView nodeKey={store.rootNode.value} />\n          {children && children(store)}\n        </Paper>\n      </DecodedDataContext.Provider>\n    </DraggableItemsContext.Provider>\n  );\n}\n","import { Paper, useTheme } from \"@material-ui/core\";\nimport { useDataAsStore, useDataDecryption } from \"../../../utils/encryption\";\nimport useDraggableItemsProvider, {\n  DraggableItemsContext,\n} from \"../useDraggableItemsContext\";\n\nimport CardView from \"../vault/cards/CardView\";\nimport { DecodedDataContext } from \"../useDecodedDataContext\";\nimport MemoryVaultInfo from \"../vault/info/MemoryVaultInfo\";\nimport MemoryVaultSettingsMenu from \"../vault/MemoryVaultSettingsMenu\";\nimport React from \"react\";\nimport { VaultData } from \"../vault/MemoryVault\";\n\nexport default function GoogleMemoryVault({\n  vaultData: { title, encryptionKey, initialData },\n  resourceId,\n  onDelete,\n}: {\n  vaultData: VaultData;\n  resourceId: string;\n  onDelete: () => void;\n}) {\n  const theme = useTheme();\n  const draggableData = useDraggableItemsProvider();\n  const { decryptedData } = useDataDecryption(initialData, encryptionKey);\n  const data = useDataAsStore(decryptedData, { title });\n  if (!data) {\n    return null;\n  }\n  const { store, updateNodes } = data;\n  return (\n    <DraggableItemsContext.Provider value={draggableData}>\n      <DecodedDataContext.Provider\n        value={{ store, updateNodes, googleResourceId: resourceId, encryptionKey }}\n      >\n        <Paper style={{ position: \"relative\", padding: theme.spacing(3) }}>\n          <div\n            style={{\n              position: \"absolute\",\n              right: theme.spacing(1),\n              top: theme.spacing(1),\n            }}\n          >\n            <MemoryVaultSettingsMenu onDelete={onDelete} />\n          </div>\n          <MemoryVaultInfo />\n          <div style={{ height: theme.spacing(3) }} />\n          <CardView nodeKey={store.rootNode.value} />\n        </Paper>\n      </DecodedDataContext.Provider>\n    </DraggableItemsContext.Provider>\n  );\n}\n","import { ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  onDrop(file: File | null | undefined): void;\n};\nexport default function DragAndDrop({ children, onDrop }: Props) {\n  return (\n    <div\n      onDrop={(event) => {\n        event.preventDefault();\n        onDrop(event.dataTransfer.files[0]);\n      }}\n      onDragOver={(event) => {\n        event.preventDefault();\n      }}\n      onDragEnter={(event) => {\n        event.preventDefault();\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","export default function readFile(\n  file: File | null | undefined,\n  onDone: (reuslt: string) => void,\n) {\n  if (!file) return;\n  const reader = new FileReader();\n  reader.onloadend = () => {\n    if (typeof reader.result === \"string\") {\n      onDone(reader.result);\n    }\n  };\n  reader.readAsText(file);\n}\n","import { IconButton, InputAdornment, TextField, Tooltip } from \"@material-ui/core\";\nimport { createKey, isKeyValid } from \"../../../../../utils/encryption\";\n\nimport { Cached } from \"@material-ui/icons\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport React from \"react\";\nimport readFile from \"./readFile\";\n\ntype Props = {\n  encryptionKey: string;\n  setEncryptionKey: (encryptionKey: string) => void;\n};\nexport default function MemoryVaultKeyInput({\n  encryptionKey,\n  setEncryptionKey,\n}: Props) {\n  return (\n    <DragAndDrop onDrop={(file) => readFile(file, setEncryptionKey)}>\n      <TextField\n        variant=\"outlined\"\n        margin=\"dense\"\n        error={encryptionKey.length > 0 && !isKeyValid(encryptionKey)}\n        required\n        fullWidth\n        label=\"Encryption Key\"\n        type=\"password\"\n        autoComplete=\"current-encryption-key\"\n        value={encryptionKey}\n        onChange={(e) => setEncryptionKey(e.target.value)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Tooltip title=\"Generate key\" arrow>\n                <IconButton\n                  aria-label=\"generate encryption Key\"\n                  onClick={() => createKey().then(setEncryptionKey)}\n                >\n                  <Cached fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </DragAndDrop>\n  );\n}\n","import { Paper, Typography, useTheme } from \"@material-ui/core\";\nimport { useDataAsStore, useDataDecryption } from \"../../../../utils/encryption\";\n\nimport CardView from \"../cards/CardView\";\nimport { DecodedDataContext } from \"../../useDecodedDataContext\";\nimport MemoryVaultInfo from \"../info/MemoryVaultInfo\";\nimport MemoryVaultSettingsMenu from \"../MemoryVaultSettingsMenu\";\nimport React from \"react\";\n\ntype CreatingPreviewVaultData = {\n  title: string;\n  encryptionKey: string;\n  initialData: string;\n  onDelete: () => void;\n};\n\nexport default function MemoryVaultPreview({\n  title,\n  encryptionKey,\n  initialData,\n  onDelete,\n}: CreatingPreviewVaultData) {\n  const theme = useTheme();\n  const { decryptedData, hasFailed } = useDataDecryption(initialData, encryptionKey);\n  const titleWithFallback = title === \"\" ? \"Title\" : title;\n  const data = useDataAsStore(decryptedData, {\n    title: titleWithFallback,\n  });\n  if (!data) {\n    return null;\n  }\n  const { store } = data;\n  return (\n    <DecodedDataContext.Provider value={{ store, updateNodes: null, encryptionKey }}>\n      <Paper\n        style={{\n          flex: 1,\n          position: \"relative\",\n          overflow: \"hidden\",\n          padding: theme.spacing(3),\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            zIndex: 2,\n          }}\n        >\n          <MemoryVaultSettingsMenu onDelete={onDelete} />\n        </div>\n        <div\n          style={{\n            backgroundColor: theme.palette.background.default,\n            opacity: 0.8,\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography variant=\"h3\">Preview</Typography>\n        </div>\n        <MemoryVaultInfo />\n        <div style={{ height: theme.spacing(3) }} />\n        {!hasFailed ? (\n          <CardView nodeKey={store.rootNode.value} />\n        ) : (\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Data mismatch\n          </Typography>\n        )}\n      </Paper>\n    </DecodedDataContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ntype Props = {\n  title: string;\n  setTitle: (title: string) => void;\n};\nexport default function MemoryVaultTitleInput({ title, setTitle }: Props) {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      label=\"Title\"\n      autoComplete=\"title\"\n      value={title}\n      onChange={(e) => setTitle(e.target.value)}\n      autoFocus={title.length === 0}\n    />\n  );\n}\n","import { Button, Grid, Paper, Typography, useTheme } from \"@material-ui/core\";\n\nimport { Add } from \"@material-ui/icons\";\nimport MemoryVaultKeyInput from \"../vault/create/inputs/MemoryVaultKeyInput\";\nimport MemoryVaultPreview from \"../vault/create/MemoryVaultPreview\";\nimport MemoryVaultTitleInput from \"../vault/create/inputs/MemoryVaultTitleInput\";\nimport React from \"react\";\nimport { VaultData } from \"../vault/MemoryVault\";\nimport { useDataDecryption } from \"../../../utils/encryption\";\n\ntype Props = {\n  vaultData: VaultData;\n  onDelete: () => void;\n  onChange: (vaultData: VaultData) => void;\n  onSubmit: () => void;\n};\nexport default function GoogleMemoryVaultCreatingState({\n  vaultData,\n  onDelete,\n  onChange,\n  onSubmit,\n}: Props) {\n  const theme = useTheme();\n  const { title, encryptionKey, initialData } = vaultData;\n  const { hasFailed } = useDataDecryption(initialData, encryptionKey);\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={4} xl={3} style={{ display: \"flex\", minHeight: 500 }}>\n        <Paper\n          style={{\n            padding: theme.spacing(2),\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexGrow: 1,\n          }}\n        >\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom align=\"center\">\n            Open\n          </Typography>\n          <div style={{ height: theme.spacing(2) }} />\n          <MemoryVaultTitleInput\n            title={vaultData.title}\n            setTitle={(title: string) => onChange({ ...vaultData, title })}\n          />\n          <MemoryVaultKeyInput\n            encryptionKey={encryptionKey}\n            setEncryptionKey={(encryptionKey) =>\n              onChange({ ...vaultData, encryptionKey })\n            }\n          />\n\n          <div style={{ flexGrow: 1, flexShrink: 0, flexBasis: theme.spacing(2) }} />\n          {encryptionKey !== \"\" && hasFailed && (\n            <Typography variant=\"body2\" color=\"error\" align=\"center\">\n              Key and data don't match\n            </Typography>\n          )}\n          <Button\n            fullWidth\n            variant=\"contained\"\n            disabled={hasFailed || encryptionKey.length === 0}\n            color=\"primary\"\n            size=\"medium\"\n            startIcon={<Add />}\n            onClick={onSubmit}\n          >\n            Open\n          </Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={8} xl={9} style={{ display: \"flex\" }}>\n        <MemoryVaultPreview\n          title={title}\n          encryptionKey={encryptionKey}\n          initialData={initialData}\n          onDelete={onDelete}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, Grid, Paper, Typography, useTheme } from \"@material-ui/core\";\n\nimport { Add } from \"@material-ui/icons\";\nimport MemoryVaultSettingsMenu from \"../vault/MemoryVaultSettingsMenu\";\nimport React from \"react\";\n\ntype Props = {\n  onDelete: () => void;\n};\nexport default function GoogleMemoryVaultLoadingState({ onDelete }: Props) {\n  const theme = useTheme();\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={4} xl={3} style={{ display: \"flex\", minHeight: 500 }}>\n        <Paper\n          style={{\n            padding: theme.spacing(2),\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexGrow: 1,\n          }}\n        >\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom align=\"center\">\n            Open\n          </Typography>\n          <div style={{ flexGrow: 1, flexShrink: 0, flexBasis: theme.spacing(2) }} />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            disabled={true}\n            color=\"primary\"\n            size=\"medium\"\n            startIcon={<Add />}\n          >\n            Open\n          </Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={8} xl={9} style={{ display: \"flex\" }}>\n        <Paper\n          style={{\n            flex: 1,\n            position: \"relative\",\n            overflow: \"hidden\",\n            padding: theme.spacing(3),\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              right: theme.spacing(1),\n              top: theme.spacing(1),\n              zIndex: 2,\n            }}\n          >\n            <MemoryVaultSettingsMenu onDelete={onDelete} />\n          </div>\n          <div\n            style={{\n              backgroundColor: theme.palette.background.default,\n              opacity: 0.8,\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              zIndex: 1,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          ></div>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { Dispatch, SetStateAction, useCallback } from \"react\";\n\nimport { GoogleCardListItem } from \"../MemoryPage\";\nimport GoogleMemoryVault from \"./GoogleMemoryVault\";\nimport GoogleMemoryVaultCreatingState from \"./GoogleMemoryVaultCreatingState\";\nimport GoogleMemoryVaultLoadingState from \"./GoogleMemoryVaultLoadingState\";\nimport { VaultData } from \"../vault/MemoryVault\";\nimport deleteFile from \"../../../google-integration/deleteFile\";\n\ntype GoogleMemoryCardProps = {\n  card: GoogleCardListItem;\n  setGoogleCards: Dispatch<SetStateAction<GoogleCardListItem[]>>;\n};\nexport default function GoogleMemoryCard({\n  card,\n  setGoogleCards,\n}: GoogleMemoryCardProps) {\n  const deleteCard = () => {\n    deleteFile(card.resourceId).then(() => {\n      setGoogleCards((old) => old.filter((c) => card.resourceId !== c.resourceId));\n    });\n  };\n  const createCard = () => {\n    const newCard = { ...card, isCreating: false, isReadOnly: false };\n    setGoogleCards((old) =>\n      old.map((c) => (card.resourceId === c.resourceId ? newCard : c)),\n    );\n  };\n  const changeCardVaultData = useCallback(\n    (newVaultData: VaultData) => {\n      setGoogleCards((old) =>\n        old.map((oldCard) =>\n          oldCard.resourceId === card.resourceId\n            ? { ...oldCard, vaultData: newVaultData }\n            : oldCard,\n        ),\n      );\n    },\n    [card.resourceId, setGoogleCards],\n  );\n  if (card.vaultData.initialData === \"\") {\n    return card.isOpen ? (\n      <GoogleMemoryVaultLoadingState onDelete={deleteCard} />\n    ) : null;\n  } else if (card.isCreating) {\n    return (\n      <GoogleMemoryVaultCreatingState\n        vaultData={card.vaultData}\n        onChange={changeCardVaultData}\n        onDelete={deleteCard}\n        onSubmit={createCard}\n      />\n    );\n  } else {\n    return (\n      <GoogleMemoryVault\n        vaultData={card.vaultData}\n        onDelete={deleteCard}\n        resourceId={card.resourceId}\n      />\n    );\n  }\n}\n","export default function deleteFile(fileId: string) {\n  return gapi.client.drive.files.delete({ fileId });\n}\n","import { gql, useQuery } from \"@apollo/client\";\n\ntype MemoryPageResponse = {\n  standardProposal: {\n    version: string;\n    data: string;\n  };\n};\n\nconst QUERY = gql`\n  query MemoryPage {\n    standardProposal {\n      version\n      data\n    }\n  }\n`;\nexport default function useStandardProposal(\n  onCompleted?: (data: MemoryPageResponse) => void,\n) {\n  const { data } = useQuery<MemoryPageResponse>(QUERY, { onCompleted });\n  return data?.standardProposal;\n}\n","import { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nimport { Add } from \"@material-ui/icons\";\nimport { CardListItem } from \"../MemoryPage\";\nimport React from \"react\";\nimport useStandardProposal from \"../useStandardProposal\";\nimport { v4 as uuid } from \"uuid\";\n\ntype Props = {\n  addCard: (card: CardListItem) => void;\n};\n\nexport default function LeftNavAddCardItem({ addCard }: Props) {\n  const standardProposal = useStandardProposal();\n  const card = {\n    vaultData: {\n      title: \"\",\n      encryptionKey: \"\",\n      initialData: standardProposal?.data ?? \"\",\n    },\n    id: uuid(),\n    isOpen: true,\n    isCreating: standardProposal?.data != null,\n    isReadOnly: true,\n  };\n\n  return (\n    <List component=\"nav\">\n      <ListItem button onClick={() => addCard(card)}>\n        <ListItemIcon>\n          <Add />\n        </ListItemIcon>\n        <ListItemText primary=\"Open\" />\n      </ListItem>\n    </List>\n  );\n}\n","import { Drafts, Mail } from \"@material-ui/icons\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport React, { CSSProperties } from \"react\";\n\nimport { CardListItem } from \"../MemoryPage\";\n\nconst oneLineStyle: CSSProperties = {\n  whiteSpace: \"nowrap\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n};\n\ntype Props = {\n  card: CardListItem;\n  toogleCardVisibility: (card: CardListItem) => void;\n};\n\nexport default function CardNavBarItem({ card, toogleCardVisibility }: Props) {\n  return (\n    <ListItem button key={card.id} onClick={() => toogleCardVisibility(card)}>\n      <ListItemIcon>{card.isOpen ? <Drafts /> : <Mail />}</ListItemIcon>\n      <ListItemText\n        primary={card.vaultData.title}\n        primaryTypographyProps={{ style: oneLineStyle }}\n      />\n    </ListItem>\n  );\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\n\nimport { CardListItem } from \"../MemoryPage\";\nimport CardNavBarItem from \"../vault/CardNavBarItem\";\n\ntype LeftNavCardItemProps = {\n  card: CardListItem;\n  setCards: Dispatch<SetStateAction<CardListItem[]>>;\n};\nexport default function LeftNavCardItem({ card, setCards }: LeftNavCardItemProps) {\n  const toogleCardVisibility = (selectedCard: CardListItem) =>\n    setCards((oldCards) =>\n      oldCards.map((oldCard) =>\n        selectedCard.id === oldCard.id\n          ? { ...oldCard, isOpen: !oldCard.isOpen }\n          : oldCard,\n      ),\n    );\n  return <CardNavBarItem card={card} toogleCardVisibility={toogleCardVisibility} />;\n}\n","import { Drafts, Mail } from \"@material-ui/icons\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport React, { CSSProperties } from \"react\";\n\nimport { GoogleCardListItem } from \"../MemoryPage\";\nimport { Icon } from \"@iconify/react\";\nimport googleDrive from \"@iconify-icons/mdi/google-drive\";\n\nconst oneLineStyle: CSSProperties = {\n  whiteSpace: \"nowrap\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n};\n\ntype Props = {\n  card: GoogleCardListItem;\n  onClick: () => void;\n};\n\nexport default function GoogleCardNavBarItem({ card, onClick }: Props) {\n  return (\n    <ListItem button key={card.resourceId} onClick={onClick}>\n      <ListItemIcon>\n        {card.isOpen ? <Drafts /> : <Mail />}\n        <Icon icon={googleDrive} width={12} height={12} />\n      </ListItemIcon>\n      <ListItemText\n        primary={card.vaultData.title}\n        primaryTypographyProps={{ style: oneLineStyle }}\n      />\n    </ListItem>\n  );\n}\n","import React, { Dispatch, SetStateAction, useState } from \"react\";\n\nimport { GoogleCardListItem } from \"../MemoryPage\";\nimport GoogleCardNavBarItem from \"../google-vault/GoogleCardNavBarItem\";\n\ntype LeftNavGoogleItemProps = {\n  card: GoogleCardListItem;\n  setGoogleCards: Dispatch<SetStateAction<GoogleCardListItem[]>>;\n};\nexport default function LeftNavGoogleItem({\n  card,\n  setGoogleCards,\n}: LeftNavGoogleItemProps) {\n  const [isDownloading, setIsDownloading] = useState(false);\n  const onClick = () => {\n    if (card.vaultData.initialData === \"\" && !isDownloading) {\n      setIsDownloading(true);\n      gapi.client.drive.files\n        .get({ fileId: card.resourceId, alt: \"media\" })\n        .then(({ body }: { body: string }) => {\n          setIsDownloading(false);\n          setGoogleCards((oldCards) =>\n            oldCards.map((oldCard) =>\n              card.resourceId === oldCard.resourceId\n                ? {\n                    ...oldCard,\n                    vaultData: { ...oldCard.vaultData, initialData: body },\n                  }\n                : oldCard,\n            ),\n          );\n        });\n    }\n    setGoogleCards((oldCards) =>\n      oldCards.map((oldCard) =>\n        card.resourceId === oldCard.resourceId\n          ? { ...oldCard, isOpen: !oldCard.isOpen }\n          : oldCard,\n      ),\n    );\n  };\n  return <GoogleCardNavBarItem card={card} onClick={onClick} />;\n}\n","import {\n  Button,\n  Collapse,\n  FormControlLabel,\n  FormLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport {\n  Done,\n  ExpandLess,\n  ExpandMore,\n  GetApp,\n  HelpOutline,\n} from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\n\nimport DragAndDrop from \"../DragAndDrop\";\nimport readFile from \"./readFile\";\nimport useStandardProposal from \"../../../useStandardProposal\";\n\nenum DataOptions {\n  STANDARD = \"STANDARD\",\n  EMPTY = \"EMPTY\",\n  CUSTOM = \"CUSTOM\",\n}\n\ntype Props = {\n  setInitialData: (initialData: string) => void;\n};\nexport default function MemoryVaultDataInput({ setInitialData }: Props) {\n  const theme = useTheme();\n  const [expanded, setExpanded] = useState(false);\n  const [dataOption, selectDataOption] = useState<DataOptions>(DataOptions.STANDARD);\n  const [encryptedData, setEncryptedData] = useState<string | null>(null);\n\n  const standardProposal = useStandardProposal(({ standardProposal }) => {\n    if (dataOption === DataOptions.STANDARD) {\n      setInitialData(standardProposal.data);\n    }\n  });\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography variant=\"body1\">Data Options</Typography>\n        <IconButton\n          onClick={() => setExpanded((e) => !e)}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          {expanded ? <ExpandLess /> : <ExpandMore />}\n        </IconButton>\n      </div>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <FormLabel component=\"legend\">Initial Data</FormLabel>\n        <RadioGroup\n          aria-label=\"Initial data\"\n          value={dataOption}\n          onChange={(event) => {\n            const dataOption: DataOptions = (event.target as HTMLInputElement)\n              .value as DataOptions;\n            selectDataOption(dataOption);\n            switch (dataOption) {\n              case DataOptions.CUSTOM:\n                return setInitialData(encryptedData ?? \"\");\n              case DataOptions.EMPTY:\n                return setInitialData(\"{}\");\n              case DataOptions.STANDARD:\n                return setInitialData(standardProposal?.data ?? \"\");\n            }\n          }}\n        >\n          <FormControlLabel\n            value={DataOptions.STANDARD}\n            control={<Radio size=\"small\" />}\n            label={`Standard v${standardProposal?.version ?? \"*\"}`}\n          />\n          <FormControlLabel\n            value={DataOptions.EMPTY}\n            control={<Radio size=\"small\" />}\n            label=\"Empty\"\n          />\n          <FormControlLabel\n            value={DataOptions.CUSTOM}\n            control={<Radio size=\"small\" />}\n            label={\n              <span\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                My own <span style={{ width: theme.spacing(1) }} />\n                <Tooltip\n                  title=\"Your encrypted data or a strigfied json\"\n                  placement=\"top\"\n                >\n                  <HelpOutline fontSize=\"inherit\" />\n                </Tooltip>\n              </span>\n            }\n          />\n        </RadioGroup>\n        {DataOptions.CUSTOM === dataOption && (\n          <DragAndDrop\n            onDrop={(file) =>\n              readFile(file, (data) => {\n                setEncryptedData(data);\n                if (dataOption === DataOptions.CUSTOM) {\n                  setInitialData(data);\n                }\n              })\n            }\n          >\n            <Button\n              component=\"label\"\n              fullWidth\n              style={{\n                textTransform: \"none\",\n                outlineWidth: 2,\n                outlineStyle: \"dashed\",\n                outlineColor: theme.palette.secondary.main,\n              }}\n              startIcon={encryptedData === null ? <GetApp /> : <Done />}\n            >\n              <input\n                hidden\n                type=\"file\"\n                onChange={(e) =>\n                  readFile(e.target.files?.[0], (data) => {\n                    setEncryptedData(data);\n                    if (dataOption === DataOptions.CUSTOM) {\n                      setInitialData(data);\n                    }\n                  })\n                }\n              />\n              {encryptedData === null ? (\n                <Typography variant=\"body1\">Drag or upload your data</Typography>\n              ) : (\n                <Typography variant=\"body1\">Done</Typography>\n              )}\n            </Button>\n          </DragAndDrop>\n        )}\n      </Collapse>\n    </>\n  );\n}\n","import { Button, Paper, Typography, useTheme } from \"@material-ui/core\";\n\nimport { Add } from \"@material-ui/icons\";\nimport MemoryVaultDataInput from \"./inputs/MemoryVaultDataInput\";\nimport MemoryVaultKeyInput from \"./inputs/MemoryVaultKeyInput\";\nimport MemoryVaultTitleInput from \"./inputs/MemoryVaultTitleInput\";\nimport React from \"react\";\nimport { VaultData } from \"../MemoryVault\";\nimport { useDataDecryption } from \"../../../../utils/encryption\";\n\ntype Props = {\n  vaultData: VaultData;\n  onChange: (vaultData: VaultData) => void;\n  onSubmit: () => void;\n};\n\nexport default function MemoryVaultCreateForm({\n  vaultData,\n  onChange,\n  onSubmit,\n}: Props) {\n  const theme = useTheme();\n  const { hasFailed } = useDataDecryption(\n    vaultData.initialData,\n    vaultData.encryptionKey,\n  );\n  return (\n    <Paper\n      style={{\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1,\n      }}\n    >\n      <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom align=\"center\">\n        Open\n      </Typography>\n      <div style={{ height: theme.spacing(2) }} />\n      <MemoryVaultTitleInput\n        title={vaultData.title}\n        setTitle={(title) => onChange({ ...vaultData, title })}\n      />\n      <MemoryVaultKeyInput\n        encryptionKey={vaultData.encryptionKey}\n        setEncryptionKey={(encryptionKey) =>\n          onChange({ ...vaultData, encryptionKey })\n        }\n      />\n      <MemoryVaultDataInput\n        setInitialData={(initialData) => onChange({ ...vaultData, initialData })}\n      />\n      <div style={{ flexGrow: 1, flexShrink: 0, flexBasis: theme.spacing(2) }} />\n      {vaultData.initialData !== \"\" && vaultData.encryptionKey !== \"\" && hasFailed && (\n        <Typography variant=\"body2\" color=\"error\" align=\"center\">\n          Key and data don't match\n        </Typography>\n      )}\n      <Button\n        fullWidth\n        variant=\"contained\"\n        disabled={hasFailed || vaultData.encryptionKey.length === 0}\n        color=\"primary\"\n        size=\"medium\"\n        startIcon={<Add />}\n        onClick={() => {\n          onSubmit();\n        }}\n      >\n        Open\n      </Button>\n    </Paper>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport MemoryVaultCreateForm from \"./MemoryVaultCreateForm\";\nimport MemoryVaultPreview from \"./MemoryVaultPreview\";\nimport React from \"react\";\nimport { VaultData } from \"../MemoryVault\";\n\ntype Props = {\n  vaultData: VaultData;\n  onDelete: () => void;\n  onSubmit: () => void;\n  onChange: (vaultData: VaultData) => void;\n};\n\nexport default function MemoryVaultCreatingState({\n  vaultData,\n  onDelete,\n  onSubmit,\n  onChange,\n}: Props) {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={4} xl={3} style={{ display: \"flex\", minHeight: 500 }}>\n        <MemoryVaultCreateForm\n          vaultData={vaultData}\n          onChange={onChange}\n          onSubmit={onSubmit}\n        />\n      </Grid>\n      <Grid item xs={12} md={8} xl={9} style={{ display: \"flex\" }}>\n        <MemoryVaultPreview {...vaultData} onDelete={onDelete} />\n      </Grid>\n    </Grid>\n  );\n}\n","import { Tooltip, Typography } from \"@material-ui/core\";\n\nimport React from \"react\";\nimport { VaultData } from \"./MemoryVault\";\nimport useStandardProposal from \"../useStandardProposal\";\n\ntype Props = {\n  vaultData: VaultData;\n  onChange: (vaultData: VaultData) => void;\n};\n\nexport default function MemoryVaultLoadingState({ vaultData, onChange }: Props) {\n  useStandardProposal(({ standardProposal }) => {\n    onChange({ ...vaultData, initialData: standardProposal.data });\n  });\n  return (\n    <Tooltip\n      title=\"This app uses a free tier Heroku Dyno and will sleep after 30 minutes of inactivity\"\n      arrow\n    >\n      <Typography variant=\"body1\" display=\"inline\">\n        Warming up the server just for you...\n      </Typography>\n    </Tooltip>\n  );\n}\n","import MemoryVault, { VaultData } from \"./MemoryVault\";\nimport React, { Dispatch, SetStateAction } from \"react\";\n\nimport { CardListItem } from \"../MemoryPage\";\nimport MemoryVaultCreatingState from \"./create/MemoryVaultCreatingState\";\nimport MemoryVaultLoadingState from \"./MemoryVaultLoadingState\";\n\ntype MemoryCardProps = {\n  card: CardListItem;\n  setCards: Dispatch<SetStateAction<CardListItem[]>>;\n};\nexport default function MemoryCard({ card, setCards }: MemoryCardProps) {\n  const deleteCard = () => {\n    setCards((old) => old.filter((c) => card.id !== c.id));\n  };\n  const createCard = () => {\n    const newCard = { ...card, isCreating: false, isReadOnly: false };\n    setCards((old) => old.map((c) => (card.id === c.id ? newCard : c)));\n  };\n  const changeCardVaultData = (newVaultData: VaultData) => {\n    setCards((old) =>\n      old.map((oldCard) =>\n        oldCard.id === card.id ? { ...oldCard, vaultData: newVaultData } : oldCard,\n      ),\n    );\n  };\n  if (!card.isCreating && card.vaultData.initialData === \"\") {\n    return (\n      <MemoryVaultLoadingState\n        vaultData={card.vaultData}\n        onChange={changeCardVaultData}\n      />\n    );\n  } else if (card.isCreating) {\n    return (\n      <MemoryVaultCreatingState\n        vaultData={card.vaultData}\n        onSubmit={createCard}\n        onDelete={deleteCard}\n        onChange={changeCardVaultData}\n      />\n    );\n  } else {\n    return (\n      <MemoryVault\n        vaultData={card.vaultData}\n        isReadOnly={card.isReadOnly}\n        onDelete={deleteCard}\n      />\n    );\n  }\n}\n","import { GOOGLE_SCOPES } from \"./googleConfiguration\";\nimport { useEffect } from \"react\";\nimport useEnforceScope from \"./useEnforceScope\";\nimport { useGoogleAuthContext } from \"./useGoogleAuthProvider\";\n\nexport function useGoogleFilesList(\n  onFetch: (files: gapi.client.drive.File[]) => void,\n) {\n  const auth = useGoogleAuthContext();\n  useEffect(() => {\n    if (auth === null || !auth.isSignedIn.get()) {\n      onFetch([]);\n    }\n  }, [auth, onFetch]);\n\n  const hasScope = useEnforceScope(GOOGLE_SCOPES);\n  useEffect(() => {\n    if (!hasScope) {\n      return;\n    }\n    gapi.client.drive.files\n      .list({\n        spaces: \"appDataFolder\",\n        fields: \"nextPageToken, files(id, appProperties)\",\n        pageSize: 100,\n      })\n      .then((response) => {\n        onFetch(response.result.files ?? []);\n      });\n  }, [hasScope, onFetch]);\n}\n","import { useGoogleAuthContext } from \"./useGoogleAuthProvider\";\n\nexport default function useEnforceScope(scope: string) {\n  const auth = useGoogleAuthContext();\n  const user = auth?.currentUser.get();\n  if (!user || !user.isSignedIn()) {\n    return false;\n  }\n  const hasScope = user.hasGrantedScopes(scope);\n  if (!hasScope) {\n    user.grant({ scope });\n  }\n  return hasScope;\n}\n","import { Dispatch, SetStateAction, useCallback } from \"react\";\n\nimport { GoogleCardListItem } from \"./MemoryPage\";\nimport { useGoogleFilesList } from \"../../google-integration/useGoogleFilesList\";\n\nexport default function useCardsFromGoogleDrive(\n  setGoogleCards: Dispatch<SetStateAction<GoogleCardListItem[]>>,\n): void {\n  const onFetch = useCallback(\n    (files: gapi.client.drive.File[]): void => {\n      const listItems = files.map(filetoListItem);\n      setGoogleCards(listItems);\n    },\n    [setGoogleCards],\n  );\n  useGoogleFilesList(onFetch);\n}\n\nfunction filetoListItem(file: gapi.client.drive.File): GoogleCardListItem {\n  return {\n    resourceId: file.id ?? \"\",\n    vaultData: {\n      title: file.appProperties?.title ?? \"\",\n      encryptionKey: file.appProperties?.encryptionKey ?? \"\",\n      initialData: \"\",\n    },\n    isCreating: true,\n    isOpen: false,\n  };\n}\n","import { Divider, Grid, List, useTheme } from \"@material-ui/core\";\nimport React, { CSSProperties, useState } from \"react\";\n\nimport GoogleMemoryCard from \"./google-vault/GoogleMemoryCard\";\nimport LeftNavAddCardItem from \"./navbar/LeftNavAddCardItem\";\nimport LeftNavCardItem from \"./navbar/LeftNavCardItem\";\nimport LeftNavGoogleItem from \"./navbar/LeftNavGoogleItem\";\nimport MemoryCard from \"./vault/MemoryCard\";\nimport { VaultData } from \"./vault/MemoryVault\";\nimport useCardsFromGoogleDrive from \"./useCardsFromGoogleDrive\";\nimport useCardsFromUrl from \"./useCardsFromUrl\";\n\nexport type CardListItem = {\n  vaultData: VaultData;\n  id: string;\n  isOpen: boolean;\n  isCreating: boolean;\n  isReadOnly: boolean;\n};\nexport type GoogleCardListItem = {\n  vaultData: VaultData;\n  resourceId: string;\n  isCreating: boolean;\n  isOpen: boolean;\n};\n\nexport default function MemoryPage() {\n  const theme = useTheme();\n  const [googleCards, setGoogleCards] = useState<GoogleCardListItem[]>([]);\n  useCardsFromGoogleDrive(setGoogleCards);\n\n  const [cards, setCards] = useState<CardListItem[]>([]);\n  useCardsFromUrl(setCards);\n\n  const createdCards = cards.filter((card) => !card.isCreating);\n  const leftNavSections = [\n    <LeftNavAddCardItem\n      key=\"PreviewCardNavBar\"\n      addCard={(newCard) => setCards((oldCards) => [newCard, ...oldCards])}\n    />,\n    createdCards.length > 0 && (\n      <List component=\"nav\" key=\"CardNavBar\">\n        {createdCards.map((card) => (\n          <LeftNavCardItem key={card.id} card={card} setCards={setCards} />\n        ))}\n      </List>\n    ),\n    googleCards.length > 0 && (\n      <List component=\"nav\" key=\"GoogleCardsNavBar\">\n        {googleCards.map((card) => (\n          <LeftNavGoogleItem\n            key={card.resourceId}\n            card={card}\n            setGoogleCards={setGoogleCards}\n          />\n        ))}\n      </List>\n    ),\n  ];\n\n  const bodyCards = [\n    ...cards.map((card) => (\n      <div style={{ display: card.isOpen ? \"initial\" : \"none\" }} key={card.id}>\n        <MemoryCard card={card} setCards={setCards} />\n        <div style={{ height: theme.spacing(2) }} />\n      </div>\n    )),\n    ...googleCards.map((card) => (\n      <div\n        style={{ display: card.isOpen ? \"initial\" : \"none\" }}\n        key={card.resourceId}\n      >\n        <GoogleMemoryCard card={card} setGoogleCards={setGoogleCards} />\n        <div style={{ height: theme.spacing(2) }} />\n      </div>\n    )),\n  ];\n\n  const leftNavStyle: CSSProperties = {\n    borderRightColor: theme.palette.divider,\n    borderRightWidth: 1,\n    borderRightStyle: \"solid\",\n  };\n  const bodyStyle: CSSProperties = { padding: theme.spacing(2) };\n  return (\n    <Grid container style={{ flex: 1 }}>\n      <Grid item xs={12} sm={4} md={3} lg={2} style={leftNavStyle}>\n        {leftNavSections.map((child, index) =>\n          index === leftNavSections.length - 1\n            ? child\n            : [child, <Divider key={`LeftNavSection-${index}`} />],\n        )}\n      </Grid>\n      <Grid item xs={12} sm={8} md={9} lg={10} style={bodyStyle}>\n        {bodyCards}\n      </Grid>\n    </Grid>\n  );\n}\n","import { Dispatch, SetStateAction, useEffect } from \"react\";\n\nimport { CardListItem } from \"./MemoryPage\";\nimport queryString from \"query-string\";\nimport { useLocation } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\n\ntype RouteParams = {\n  title?: string;\n  key?: string;\n  data?: string;\n  readOnly?: string;\n};\n\n/**\n * Read the url params and initialize the appropriated cards\n * @param setCards\n */\nexport default function useCardsFromUrl(\n  setCards: Dispatch<SetStateAction<CardListItem[]>>,\n): void {\n  const { search } = useLocation();\n\n  useEffect(() => {\n    const params: RouteParams = queryString.parse(search);\n    if (params.key == null && params.data == null) {\n      return;\n    }\n    const isCreating = params.key == null || params.data == null;\n    const cardFromUrl = {\n      id: uuid(),\n      isOpen: true,\n      isReadOnly: isCreating ? true : params.readOnly !== \"false\",\n      isCreating,\n      vaultData: {\n        title: params.title ?? \"\",\n        encryptionKey: params.key ? params.key.split(\" \").join(\"+\") : \"\",\n        initialData: params.data ? params.data.split(\" \").join(\"+\") : \"\",\n      },\n    };\n\n    setCards((old) => [cardFromUrl, ...old]);\n  }, [search, setCards]);\n}\n"],"sourceRoot":""}