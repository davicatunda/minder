{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","pages/proposal/ProposalPage.tsx"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","PROPOSAL","gql","ProposalPage","text","proposalId","useParams","data","useQuery","variables","uuid","proposal","test","replace","title","store","normalizeRoot","s2","Provider","updateNodes","css","position","padding","variant","nodeKey","rootNode"],"mappings":"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","file":"static/js/11.d3cf6558.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { Container, Paper, Typography } from \"@material-ui/core\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport BreadcrumbPaths from \"../memory/vault/BreadcrumbPaths\";\nimport BreadcrumbsProvider from \"../memory/vault/BreadcrumbsProvider\";\nimport CardView from \"../memory/vault/cards/CardView\";\nimport { DecodedDataContext } from \"../memory/useDecodedDataContext\";\nimport React from \"react\";\nimport { VerticalSpace } from \"../core/Spacing\";\nimport { css } from \"@emotion/css\";\nimport { normalizeRoot } from \"../../utils/normalization\";\nimport { useParams } from \"react-router-dom\";\n\ntype ProposalResponse = {\n  proposal: {\n    data: string;\n  };\n};\nconst PROPOSAL = gql`\n  query Proposal($uuid: String!) {\n    proposal(uuid: $uuid) {\n      data\n    }\n  }\n`;\nexport default function ProposalPage() {\n  const { proposalId } = useParams<{ proposalId: string }>();\n  const { data } = useQuery<ProposalResponse>(PROPOSAL, {\n    variables: { uuid: proposalId },\n  });\n  if (data == null || !isJSON(data.proposal.data)) {\n    return null;\n  }\n  const title = `Proposals ${proposalId}`;\n  const store = normalizeRoot(data.proposal.data, { title });\n  return (\n    <Container maxWidth=\"md\">\n      <VerticalSpace s2 />\n      <BreadcrumbsProvider>\n        <DecodedDataContext.Provider value={{ store, updateNodes: null }}>\n          <Paper className={css({ position: \"relative\", padding: 24 })}>\n            <BreadcrumbPaths />\n            <Typography variant=\"h3\"></Typography>\n            <CardView nodeKey={store.rootNode.value} />\n          </Paper>\n        </DecodedDataContext.Provider>\n      </BreadcrumbsProvider>\n    </Container>\n  );\n}\n\nfunction isJSON(text: String) {\n  return /^[\\],:{}\\s]*$/.test(\n    text\n      .replace(/\\\\[\"\\\\/bfnrtu]/g, \"@\")\n      .replace(\n        /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g,\n        \"]\",\n      )\n      .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\"),\n  );\n}\n"],"sourceRoot":""}