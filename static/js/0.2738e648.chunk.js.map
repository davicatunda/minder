{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../OperationData.js","../QueryData.js","../useBaseQuery.js","../useDeepMemo.js","../useQuery.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/defineToJSON.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/jsutils/defineToStringTag.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/parser.mjs","../Cache.js","../index.js","../RenderPromises.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../parser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@apollo/client/node_modules/graphql-tag/src/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","_super","QueryData","_a","onNewData","_this","call","previousData","runLazy","runLazyQuery","lazyOptions","getQueryResult","result","observableQueryFields","skip","data","undefined","error","loading","called","currentObservable","currentResult","getCurrentResult","partial","networkStatus","errors","length","ApolloError","graphQLErrors","assign","getLastResult","fetchPolicy","partialRefetch","keys","refetch","resetQueryStoreErrors","obsRefetch","variables","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","query","removeQuerySubscription","updateObservableQuery","startQuerySubscription","getExecuteSsrResult","getExecuteResult","executeLazy","ready","fetchData","ssr","Promise","resolve","afterExecute","_b","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","addQueryPromise","prepareObservableQueryOptions","Query","displayName","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","currentSubscription","subscribe","next","previousResult","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","resetLastResults","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","key","ref","useDeepMemo","queryResult","useQuery","devAssert","condition","message","Boolean","Error","defineToJSON","classObject","fn","arguments","toString","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","i","push","printPrefixedLines","map","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","loc","_locations","_positions","reduce","list","pos","_extensions","originalExtensions","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","create","output","_i2","_error$nodes2","_i4","_error$locations2","printError","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","Source","toStringTag","get","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","kind","readToken","Tok","end","prev","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","dedentBlockStringValue","readBlockString","charCode","a","b","c","d","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parse","Parser","parseDocument","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","args","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","endToken","Cache","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","info","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","getOwnPropertyDescriptors","DocumentType","cache","operationName","Mutation","Subscription","cached","fragments","queries","mutations","subscriptions","_defineProperty","_unsupportedIterableToArray","o","minLen","n","from","test","_arrayLikeToArray","arr2","require","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","doc","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","valueType","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","console","warn","processFragments","gql","literals","default","module","exports","_toConsumableArray","arrayLikeToArray","iter"],"mappings":"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","file":"static/js/0.2738e648.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport { parser, operationName } from '../parser/parser';\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\nexport { OperationData };\n//# sourceMappingURL=OperationData.js.map","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { ApolloError } from '../../errors/ApolloError';\nimport { NetworkStatus } from '../../core/networkStatus';\nimport { DocumentType } from '../parser/parser';\nimport { OperationData } from './OperationData';\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getQueryResult = function () {\n            var result = _this.observableQueryFields();\n            var options = _this.getOptions();\n            if (options.skip) {\n                result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n            }\n            else if (_this.currentObservable) {\n                var currentResult = _this.currentObservable.getCurrentResult();\n                var data = currentResult.data, loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n                var error = currentResult.error;\n                if (errors && errors.length > 0) {\n                    error = new ApolloError({ graphQLErrors: errors });\n                }\n                result = __assign(__assign({}, result), { data: data,\n                    loading: loading,\n                    networkStatus: networkStatus,\n                    error: error, called: true });\n                if (loading) {\n                }\n                else if (error) {\n                    Object.assign(result, {\n                        data: (_this.currentObservable.getLastResult() || {})\n                            .data\n                    });\n                }\n                else {\n                    var fetchPolicy = _this.currentObservable.options.fetchPolicy;\n                    var partialRefetch = options.partialRefetch;\n                    if (partialRefetch &&\n                        partial &&\n                        (!data || Object.keys(data).length === 0) &&\n                        fetchPolicy !== 'cache-only') {\n                        Object.assign(result, {\n                            loading: true,\n                            networkStatus: NetworkStatus.loading\n                        });\n                        result.refetch();\n                        return result;\n                    }\n                }\n            }\n            result.client = _this.client;\n            _this.setOptions(options, true);\n            _this.previousData.loading =\n                _this.previousData.result && _this.previousData.result.loading || false;\n            _this.previousData.result = result;\n            _this.currentObservable && _this.currentObservable.resetQueryStoreErrors();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            var _a;\n            (_a = _this.currentObservable) === null || _a === void 0 ? void 0 : _a.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            var _a;\n            (_a = _this.currentObservable) === null || _a === void 0 ? void 0 : _a.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined\n                }\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var _this = this;\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        return new Promise(function (resolve) { return _this.startQuerySubscription(resolve); });\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteResult = function () {\n        var result = this.getQueryResult();\n        this.startQuerySubscription();\n        return result;\n    };\n    ;\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = __assign({ loading: true, networkStatus: NetworkStatus.loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getQueryResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        if (this.ssrInitiated()) {\n            this.currentObservable = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                this.context.renderPromises.registerSSRObservable(this.currentObservable, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function (onNewData) {\n        var _this = this;\n        if (onNewData === void 0) { onNewData = this.onNewData; }\n        if (this.currentSubscription || this.getOptions().skip)\n            return;\n        this.currentSubscription = this.currentObservable.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    onNewData();\n                }\n            }\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var currentObservable = this.currentObservable;\n        if (currentObservable) {\n            var lastError = currentObservable.getLastError();\n            var lastResult = currentObservable.getLastResult();\n            currentObservable.resetLastResults();\n            this.startQuerySubscription();\n            Object.assign(currentObservable, {\n                lastError: lastError,\n                lastResult: lastResult\n            });\n        }\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        if (!this.currentObservable || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError, skip = _b.skip;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error && !skip) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentSubscription) {\n            this.currentSubscription.unsubscribe();\n            delete this.currentSubscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var _a;\n        return {\n            variables: (_a = this.currentObservable) === null || _a === void 0 ? void 0 : _a.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore\n        };\n    };\n    return QueryData;\n}(OperationData));\nexport { QueryData };\n//# sourceMappingURL=QueryData.js.map","import { __assign } from \"tslib\";\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { QueryData } from '../../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\nimport { getApolloContext } from '../../context/ApolloContext';\nexport function useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    var queryData = queryDataRef.current ||\n        new QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            }\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n//# sourceMappingURL=useBaseQuery.js.map","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\nexport function useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n//# sourceMappingURL=useDeepMemo.js.map","import { useBaseQuery } from './utils/useBaseQuery';\nexport function useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n//# sourceMappingURL=useQuery.js.map","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);\n","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n// @internal\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n","export var Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n//# sourceMappingURL=Cache.js.map","export { ApolloClient } from '../ApolloClient';\nexport { ObservableQuery, } from './ObservableQuery';\nexport { NetworkStatus } from './networkStatus';\nexport * from './types';\nexport { isApolloError, ApolloError } from '../errors/ApolloError';\nexport * from '../cache';\nexport * from '../link/core';\nexport * from '../link/http';\nexport * from '../link/utils';\nexport { Observable } from '../utilities/observables/Observable';\nimport gql from 'graphql-tag';\nexport var resetCaches = gql.resetCaches, disableFragmentWarnings = gql.disableFragmentWarnings, enableExperimentalFragmentVariables = gql.enableExperimentalFragmentVariables, disableExperimentalFragmentVariables = gql.disableExperimentalFragmentVariables;\nexport { gql };\n//# sourceMappingURL=index.js.map","function makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\nexport { RenderPromises };\n//# sourceMappingURL=RenderPromises.js.map","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { invariant } from 'ts-invariant';\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\");\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'query';\n    });\n    var mutations = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n    });\n    var subscriptions = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n    });\n    invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\");\n    invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n        (\"subscriptions and \" + mutations.length + \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" +\n        (definitions.length + \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n//# sourceMappingURL=parser.js.map","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}