{"version":3,"sources":["pages/login/LoginPage.tsx"],"names":["LoginPage","theme","useTheme","client","useApolloClient","history","useHistory","useState","username","setUsername","password","setPassword","useMutation","gql","login","style","margin","padding","spacing","maxWidth","width","align","variant","gutterBottom","height","fullWidth","label","autoComplete","value","onChange","e","target","autoFocus","type","disabled","color","size","onClick","variables","then","data","localStorage","setItem","push","resetStore"],"mappings":"6bAOe,SAASA,IACtB,IAAMC,EAAQC,cACRC,EAASC,4BACTC,EAAUC,cAHkB,EAIFC,mBAAS,IAJP,mBAI3BC,EAJ2B,KAIjBC,EAJiB,OAKFF,mBAAS,IALP,mBAK3BG,EAL2B,KAKjBC,EALiB,OAMlBC,sBACdC,cADyB,MAApBC,EAN2B,oBAalC,OACE,qBAAKC,MAAO,CAAEC,OAAQ,QAAtB,SACE,eAAC,IAAD,CACED,MAAO,CACLE,QAAShB,EAAMiB,QAAQ,GACvBF,OAAQ,OACRG,SAAU,IACVC,MAAO,QALX,UAQE,cAAC,IAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,cAAY,EAApD,oBAGA,qBAAKR,MAAO,CAAES,OAAQvB,EAAMiB,QAAQ,MACpC,cAAC,IAAD,CACEI,QAAQ,WACRN,OAAO,SACPS,WAAS,EACTC,MAAM,oBACNC,aAAa,WACbC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOH,QACtCI,WAAS,IAEX,cAAC,IAAD,CACEV,QAAQ,WACRN,OAAO,SACPS,WAAS,EACTC,MAAM,WACNO,KAAK,WACLN,aAAa,yBACbC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOH,UAExC,qBAAKb,MAAO,CAAES,OAAQvB,EAAMiB,QAAQ,MACpC,cAAC,IAAD,CACEO,WAAS,EACTH,QAAQ,YACRY,SAAuB,KAAbxB,EACVyB,MAAM,UACNC,KAAK,QACLC,QAAS,WACPvB,EAAM,CAAEwB,UAAW,CAAE9B,WAAUE,cAAc6B,MAAK,YAAe,IAAD,EAAXC,EAAW,EAAXA,KACnDC,aAAaC,QAAQ,QAArB,iBAA8BF,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAM1B,aAApC,QAA6C,IAC7CT,EAAQsC,KAAK,oBACbxC,EAAOyC,iBAVb","file":"static/js/11.2428dc8e.chunk.js","sourcesContent":["import { Button, Paper, TextField, Typography, useTheme } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\n\nimport { useHistory } from \"react-router-dom\";\n\ntype LongiResponse = { login: string };\nexport default function LoginPage() {\n  const theme = useTheme();\n  const client = useApolloClient();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login] = useMutation<LongiResponse>(\n    gql`\n      mutation Login($username: String!, $password: String!) {\n        login(username: $username, password: $password)\n      }\n    `,\n  );\n  return (\n    <div style={{ margin: \"auto\" }}>\n      <Paper\n        style={{\n          padding: theme.spacing(4),\n          margin: \"auto\",\n          maxWidth: 480,\n          width: \"100%\",\n        }}\n      >\n        <Typography align=\"center\" variant=\"h3\" gutterBottom>\n          Minder\n        </Typography>\n        <div style={{ height: theme.spacing(4) }} />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label=\"Username or email\"\n          autoComplete=\"username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-encryption-key\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <div style={{ height: theme.spacing(1) }} />\n        <Button\n          fullWidth\n          variant=\"contained\"\n          disabled={password === \"\"}\n          color=\"primary\"\n          size=\"large\"\n          onClick={() => {\n            login({ variables: { username, password } }).then(({ data }) => {\n              localStorage.setItem(\"token\", data?.login ?? \"\");\n              history.push(\"/minder/memories\");\n              client.resetStore();\n            });\n          }}\n        >\n          Log in\n        </Button>\n      </Paper>\n    </div>\n  );\n}\n"],"sourceRoot":""}