{"version":3,"sources":["../MutationData.js","../useMutation.js","Standard.tsx","icons/SVGWrapper.tsx","icons/CreateIcon.tsx","components/Button.tsx","components/ButtonIcon.tsx","icons/RemoveIcon.tsx","row-items/StringRowItem.tsx","row-items/BooleanRowItem.tsx","row-items/NumberRowItem.tsx","row-items/DateRowItem.tsx","row-items/NullRowItem.tsx","row-items/RowItemName.tsx","icons/AddIcon.tsx","row-items/DataAsList.tsx"],"names":["_super","MutationData","_a","options","context","result","setResult","_this","call","this","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","catch","error","onMutationError","getOptions","onError","verifyDocumentType","mutation","Mutation","mostRecentMutationId","prototype","execute","isMounted","client","refreshClient","afterExecute","unmount","bind","cleanup","loading","ignoreResults","updateResult","undefined","data","called","onCompleted","errors","length","ApolloError","graphQLErrors","isMostRecentMutation","previousResult","useMutation","updatedOptions","mutationDataRef","mutationData","current","setOptions","ADD_PROPOSAL","gql","QUERY","SUGGESTED_PROPOSAL","type","description","Standard","history","useHistory","addProposal","useState","proposalData","setProposalData","useQuery","latestStandard","proposals","version","node","JSON","parse","setParentValue","str","onClick","variables","proposal","stringify","map","uuid","key","push","SVGWrapper","fontSize","children","style","fill","width","height","display","transition","flexShrink","focusable","viewBox","aria-hidden","role","CreateIcon","size","d","buttonStyle","border","padding","minWidth","boxSizing","boxShadow","borderRadius","alignItems","color","fontWeight","lineHeight","textTransform","letterSpacing","backgroundColor","cursor","disableButtonStyle","Button","props","disabled","ButtonIcon","background","margin","RemoveIcon","StringRowItem","name","value","setValue","isEditing","setIsEditing","onChange","e","target","onBlur","ref","input","focus","onKeyDown","onMouseDown","BooleanRowItem","checked","NumberRowItem","isNaN","Number","date2value","date","year","getFullYear","toString","month","getMonth","padStart","day","getDate","DateRowItem","split","Date","value2date","date2HumanValue","NullRowItem","isSelectingType","setIsSelectingType","commonStyle","marginRight","RowItemName","setName","isValid","temporaryName","setTemporaryName","saveName","AddIcon","listStyle","paddingLeft","borderLeft","listItemStyle","DataAsList","Object","keys","index","Array","newNode","reduce","accumulator","currentKey","newValue","assign","nodeAsArray","values","filter","v","RegExp","test","isDate","lastField","reverse","find"],"mappings":"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","file":"static/js/5.9f605fa7.chunk.js","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { DocumentType } from '../parser/parser';\nimport { ApolloError } from '../../errors/ApolloError';\nimport { OperationData } from './OperationData';\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        return [\n            this.runMutation,\n            __assign(__assign({}, result), { client: this.refreshClient().client })\n        ];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        return this.refreshClient().client.mutate(__assign(__assign({}, (this.getOptions() || {})), (mutationFunctionOptions || {})));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\nexport { MutationData };\n//# sourceMappingURL=MutationData.js.map","import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { MutationData } from '../data/MutationData';\nimport { getApolloContext } from '../context/ApolloContext';\nexport function useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n//# sourceMappingURL=useMutation.js.map","import React, { useState, FunctionComponent } from \"react\";\nimport DataAsList from \"./row-items/DataAsList\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport Button from \"./components/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ADD_PROPOSAL = gql`\n  mutation Adding($proposal: String!) {\n    addProposal(proposal: $proposal) {\n      uuid\n    }\n  }\n`;\ntype StandardPageResponse = {\n  latestStandard: {\n    version: string;\n    data: string;\n  };\n  proposals: Array<{ uuid: string }>;\n};\nconst QUERY = gql`\n  query StandardPage {\n    latestStandard {\n      version\n      data\n    }\n    proposals {\n      uuid\n    }\n  }\n`;\nconst SUGGESTED_PROPOSAL = {\n  \"?Parent field\": {\n    \"Proposed Field\": {\n      type: \"text\",\n      description: \"# in markdown\",\n      \"?subfields\": [\"more fields\"],\n    },\n  },\n};\nconst Standard: FunctionComponent<{}> = () => {\n  const history = useHistory();\n  const [addProposal] = useMutation(ADD_PROPOSAL);\n  const [proposalData, setProposalData] = useState(SUGGESTED_PROPOSAL);\n  const { data } = useQuery<StandardPageResponse>(QUERY);\n  if (data == null) {\n    return null;\n  }\n  const { latestStandard, proposals } = data;\n  return (\n    <div>\n      <h2> Proposed API {latestStandard.version}</h2>\n      <DataAsList\n        node={JSON.parse(latestStandard.data)}\n        // @ts-ignore workaround\n        setParentValue={(str: Object) => null}\n      />\n      <h2> Make a Proposal </h2>\n      <DataAsList\n        // @ts-ignore workaround\n        node={proposalData}\n        // @ts-ignore workaround\n        setParentValue={setProposalData}\n      />\n      <Button\n        onClick={() => {\n          addProposal({\n            variables: { proposal: JSON.stringify(proposalData) },\n          });\n        }}\n      >\n        Send\n      </Button>\n      <h2> All Proposals </h2>\n      <ul>\n        {proposals.map(({ uuid }) => (\n          <li key={uuid}>\n            Proposal {uuid}:\n            <Button onClick={() => history.push(`/minder/proposal/${uuid}`)}>\n              Check it out\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Standard;\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  fontSize: number;\n  children: ReactNode;\n};\nconst SVGWrapper: FunctionComponent<Props> = ({ fontSize, children }) => (\n  <svg\n    style={{\n      fill: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\",\n      display: \"inline-block\",\n      transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n      flexShrink: 0,\n      fontSize: fontSize ?? \"1.5rem\",\n    }}\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n  >\n    {children}\n  </svg>\n);\n\nexport default SVGWrapper;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst CreateIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n  </SVGWrapper>\n);\n\nexport default CreateIcon;\n","import React, { ReactNode, FunctionComponent, CSSProperties } from \"react\";\n\nexport const buttonStyle: CSSProperties = {\n  border: 0,\n  padding: \"6px 16px\",\n  minWidth: 64,\n  boxSizing: \"border-box\",\n  boxShadow: `\n    0px 3px 1px -2px rgba(0,0,0,0.2),\n    0px 2px 2px 0px rgba(0,0,0,0.14),\n    0px 1px 5px 0px rgba(0,0,0,0.12)\n  `,\n  borderRadius: 4,\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  color: \"#fff\",\n  fontWeight: 500,\n  lineHeight: 1.75,\n  textTransform: \"uppercase\",\n  fontSize: \"0.875rem\",\n  letterSpacing: \"0.02857em\",\n  backgroundColor: \"#1976d2\",\n  cursor: \"pointer\",\n};\nconst disableButtonStyle: CSSProperties = {\n  ...buttonStyle,\n  backgroundColor: \"#e0e0e0\",\n  cursor: \"not-allowed\",\n  color: \"rgba(0, 0, 0, 0.4)\",\n};\ntype Props = {\n  onClick?: () => void;\n  children: ReactNode;\n  disabled?: boolean;\n};\nconst Button: FunctionComponent<Props> = (props) => {\n  if (props.disabled === true) {\n    return (\n      <button style={disableButtonStyle} disabled>\n        {props.children}\n      </button>\n    );\n  }\n  return (\n    <button onClick={props.onClick} style={buttonStyle}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick?(): void;\n  onMouseDown?(): void;\n};\nconst ButtonIcon: FunctionComponent<Props> = (props) => (\n  <button\n    {...props}\n    style={{\n      background: \"none\",\n      border: 0,\n      padding: 0,\n      margin: 0,\n      cursor: \"pointer\",\n    }}\n  />\n);\n\nexport default ButtonIcon;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst RemoveIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n  </SVGWrapper>\n);\nexport default RemoveIcon;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: string;\n  setValue(value: string | undefined): void;\n};\nconst StringRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{ minWidth: 40, display: \"inline-block\", cursor: \"pointer\" }}\n      >\n        {value === \"\" ? \"?\" : value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"text\"\n        name={name}\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default StringRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: boolean;\n  setValue(value: boolean | undefined): void;\n};\nconst BooleanRowItem: FunctionComponent<Props> = ({\n  name,\n  value,\n  setValue,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value ? \"yes\" : \"no\"}\n      </span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"checkbox\"\n        checked={value}\n        name={name}\n        onChange={(e) => setValue(!value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onBlur={() => setIsEditing(false)}\n        style={{ cursor: \"pointer\" }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default BooleanRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: number;\n  setValue(value: number | undefined): void;\n};\nconst NumberRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"number\"\n        name={name}\n        onChange={(e) =>\n          !isNaN(Number(e.target.value)) && setValue(Number(e.target.value))\n        }\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NumberRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: Date;\n  setValue(value: Date | undefined): void;\n};\nconst DateRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)}>{date2HumanValue(value)}</span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"date\"\n        name={name}\n        onBlur={() => setIsEditing(false)}\n        onChange={(e) => setValue(value2date(e.target.value))}\n        value={date2value(value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nfunction date2value(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\n\nfunction date2HumanValue(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${month}-${day}-${year}`;\n}\n\nfunction value2date(value: string): Date {\n  const [year, month, day] = value.split(\"-\");\n  return new Date(Number(year), Number(month) - 1, Number(day));\n}\n\nexport default DateRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport CreateIcon from \"../icons/CreateIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport { Value } from \"../row-items/DataAsList\";\n\ntype Props = {\n  name: string;\n  setValue(value: Value): void;\n};\nconst NullRowItem: FunctionComponent<Props> = (props) => {\n  const [isSelectingType, setIsSelectingType] = useState(false);\n  if (isSelectingType) {\n    return (\n      <>\n        <button onClick={() => props.setValue(false)}>checkbox</button>\n        <button onClick={() => props.setValue(0)}>number</button>\n        <button onClick={() => props.setValue(\"\")}>text</button>\n        <button onClick={() => props.setValue(new Date())}>date</button>\n        <button onClick={() => props.setValue([])}>list</button>\n        <button onClick={() => props.setValue({})}>object</button>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <ButtonIcon onClick={() => setIsSelectingType(true)}>\n        <CreateIcon size={20} />\n      </ButtonIcon>\n      <ButtonIcon onMouseDown={() => props.setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NullRowItem;\n","import React, { useState, FunctionComponent, CSSProperties } from \"react\";\n\ntype Props = {\n  name: string;\n  setName(temporaryName: string): void;\n  isValid(temporaryName: string): boolean;\n};\nconst commonStyle: CSSProperties = {\n  marginRight: 12,\n  width: 120,\n  boxSizing: \"border-box\",\n};\nconst RowItemName: FunctionComponent<Props> = ({ name, setName, isValid }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [temporaryName, setTemporaryName] = useState(name);\n  const saveName = () => {\n    if (isValid(temporaryName)) {\n      setName(temporaryName);\n      setIsEditing(false);\n    }\n  };\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{\n          fontWeight: \"bold\",\n          cursor: \"pointer\",\n          lineHeight: \"28px\",\n          ...commonStyle,\n        }}\n      >\n        {temporaryName === \"\" ? \"?\" : temporaryName}\n      </span>\n    );\n  }\n\n  return (\n    <input\n      type=\"text\"\n      name={temporaryName}\n      style={commonStyle}\n      onChange={(e) => setTemporaryName(e.target.value)}\n      value={temporaryName}\n      onBlur={saveName}\n      ref={(input) => {\n        input && input.focus();\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          saveName();\n        }\n      }}\n    />\n  );\n};\n\nexport default RowItemName;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst AddIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n  </SVGWrapper>\n);\nexport default AddIcon;\n","import React, { ReactNode, CSSProperties } from \"react\";\nimport StringRowItem from \"./StringRowItem\";\nimport BooleanRowItem from \"./BooleanRowItem\";\nimport NumberRowItem from \"./NumberRowItem\";\nimport DateRowItem from \"./DateRowItem\";\nimport NullRowItem from \"./NullRowItem\";\nimport RowItemName from \"./RowItemName\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport AddIcon from \"../icons/AddIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\nexport type Value =\n  | number\n  | boolean\n  | string\n  | Date\n  | void\n  | TreeNode[]\n  | TreeNode;\ntype TreeNode = {\n  [key: string]: Value;\n};\n\nconst listStyle: CSSProperties = {\n  listStyle: \"none\",\n  paddingLeft: 12,\n  borderLeft: \"1px solid #00000030\",\n  margin: \"4px 0 8px 0\",\n};\nconst listItemStyle: CSSProperties = {\n  padding: 4,\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\ntype Props<T> = {\n  node: T;\n  setParentValue: (newNode: T | undefined) => void;\n};\nconst DataAsList: <T extends TreeNode>(props: Props<T>) => ReactNode = (\n  props,\n) => {\n  const { node, setParentValue } = props;\n  return (\n    <ul style={listStyle}>\n      {Object.keys(node).map((key: string, index) => (\n        <li style={listItemStyle} key={key}>\n          {!(node instanceof Array) && (\n            <RowItemName\n              name={key}\n              setName={(name) => {\n                const newNode = Object.keys(node).reduce(\n                  (accumulator: TreeNode, currentKey) => {\n                    const isKeyBeingRenamed = currentKey === key;\n                    if (isKeyBeingRenamed) {\n                      accumulator[name] = node[currentKey];\n                    } else {\n                      accumulator[currentKey] = node[currentKey];\n                    }\n                    return accumulator;\n                  },\n                  {},\n                );\n                // @ts-ignore missing support for renames\n                setParentValue(newNode);\n              }}\n              isValid={(name) => name === key || node[name] === undefined}\n            />\n          )}\n          {(function () {\n            const value = node[key];\n            const setValue: (newValue: typeof value) => void = (newValue) => {\n              const newNode = Object.assign({}, node, { [key]: newValue });\n              if (node instanceof Array) {\n                const nodeAsArray = Object.values(newNode);\n                return setParentValue(\n                  // @ts-ignore losing array<T> type\n                  nodeAsArray.filter((v) => v !== undefined),\n                );\n              }\n              return setParentValue(newNode);\n            };\n\n            switch (typeof value) {\n              case \"string\":\n                if (isDate(value)) {\n                  return (\n                    <DateRowItem\n                      name={key}\n                      value={new Date(value)}\n                      setValue={setValue}\n                    />\n                  );\n                }\n                return (\n                  <StringRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"number\":\n                return (\n                  <NumberRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"boolean\":\n                return (\n                  <BooleanRowItem\n                    name={key}\n                    value={value}\n                    setValue={setValue}\n                  />\n                );\n              case \"object\":\n              default:\n                if (value instanceof Date) {\n                  return null;\n                }\n                if (value == null) {\n                  return <NullRowItem name={key} setValue={setValue} />;\n                }\n                // @ts-ignore DataAsList should take array\n                return <DataAsList node={value} setParentValue={setValue} />;\n            }\n          })()}\n        </li>\n      ))}\n      <li style={listItemStyle}>\n        <ButtonIcon\n          onClick={() => {\n            if (node instanceof Array) {\n              // @ts-ignore losing array<T> type\n              return setParentValue([...node, null]);\n            }\n            const lastField = Object.keys(node)\n              .reverse()\n              .find((key) => RegExp(/field:[0-9]+/).test(key));\n            const index = lastField ? Number(lastField.split(\":\")[1]) : 0;\n            return setParentValue({ ...node, [`field:${index + 1}`]: null });\n          }}\n        >\n          <AddIcon size={20} />\n        </ButtonIcon>\n        {Object.keys(node).length === 0 && (\n          <ButtonIcon onClick={() => setParentValue(undefined)}>\n            <RemoveIcon size={20} />\n          </ButtonIcon>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nfunction isDate(value: string): boolean {\n  const regex = RegExp(\n    /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,\n  );\n  return regex.test(value);\n}\n\nexport default DataAsList;\n"],"sourceRoot":""}