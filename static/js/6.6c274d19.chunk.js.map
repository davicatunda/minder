{"version":3,"sources":["Proposal.tsx","icons/SVGWrapper.tsx","icons/CreateIcon.tsx","components/ButtonIcon.tsx","icons/RemoveIcon.tsx","row-items/StringRowItem.tsx","row-items/BooleanRowItem.tsx","row-items/NumberRowItem.tsx","row-items/DateRowItem.tsx","row-items/NullRowItem.tsx","row-items/RowItemName.tsx","icons/AddIcon.tsx","row-items/DataAsList.tsx"],"names":["PROPOSAL","gql","Proposal","text","proposalId","useParams","data","useQuery","variables","uuid","proposal","test","replace","node","JSON","parse","setParentValue","str","SVGWrapper","fontSize","children","style","fill","width","height","display","transition","flexShrink","focusable","viewBox","aria-hidden","role","CreateIcon","size","d","ButtonIcon","props","background","border","padding","margin","cursor","RemoveIcon","StringRowItem","name","value","setValue","useState","isEditing","setIsEditing","alignItems","type","onChange","e","target","onBlur","ref","input","focus","onKeyDown","key","onMouseDown","undefined","onClick","minWidth","BooleanRowItem","checked","NumberRowItem","isNaN","Number","date2value","date","year","getFullYear","toString","month","getMonth","padStart","day","getDate","DateRowItem","split","Date","value2date","date2HumanValue","NullRowItem","isSelectingType","setIsSelectingType","commonStyle","marginRight","boxSizing","RowItemName","setName","isValid","temporaryName","setTemporaryName","saveName","fontWeight","lineHeight","AddIcon","listStyle","paddingLeft","borderLeft","listItemStyle","DataAsList","Object","keys","map","index","Array","newNode","reduce","accumulator","currentKey","newValue","assign","nodeAsArray","values","filter","v","RegExp","isDate","lastField","reverse","find","length"],"mappings":"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","file":"static/js/6.6c274d19.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport DataAsList from \"./row-items/DataAsList\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\ntype ProposalResponse = {\n  proposal: {\n    data: string;\n  };\n};\nconst PROPOSAL = gql`\n  query Proposal($uuid: String!) {\n    proposal(uuid: $uuid) {\n      data\n    }\n  }\n`;\nconst Proposal: FunctionComponent<{}> = () => {\n  let { proposalId } = useParams();\n  const { data } = useQuery<ProposalResponse>(PROPOSAL, {\n    variables: { uuid: proposalId },\n  });\n  if (data == null) {\n    return null;\n  }\n  return (\n    <div>\n      <h3> Proposals {proposalId} </h3>\n      {isJSON(data.proposal.data) ? (\n        <DataAsList\n          node={JSON.parse(data.proposal.data)}\n          // @ts-ignore workaround\n          setParentValue={(str: Object) => null}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nfunction isJSON(text: String) {\n  return /^[\\],:{}\\s]*$/.test(\n    text\n      .replace(/\\\\[\"\\\\/bfnrtu]/g, \"@\")\n      .replace(\n        /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g,\n        \"]\",\n      )\n      .replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\"),\n  );\n}\nexport default Proposal;\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  fontSize: number;\n  children: ReactNode;\n};\nconst SVGWrapper: FunctionComponent<Props> = ({ fontSize, children }) => (\n  <svg\n    style={{\n      fill: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\",\n      display: \"inline-block\",\n      transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n      flexShrink: 0,\n      fontSize: fontSize ?? \"1.5rem\",\n    }}\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n  >\n    {children}\n  </svg>\n);\n\nexport default SVGWrapper;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst CreateIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n  </SVGWrapper>\n);\n\nexport default CreateIcon;\n","import React, { FunctionComponent, ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick?(): void;\n  onMouseDown?(): void;\n};\nconst ButtonIcon: FunctionComponent<Props> = (props) => (\n  <button\n    {...props}\n    style={{\n      background: \"none\",\n      border: 0,\n      padding: 0,\n      margin: 0,\n      cursor: \"pointer\",\n    }}\n  />\n);\n\nexport default ButtonIcon;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst RemoveIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n  </SVGWrapper>\n);\nexport default RemoveIcon;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: string;\n  setValue(value: string | undefined): void;\n};\nconst StringRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{ minWidth: 40, display: \"inline-block\", cursor: \"pointer\" }}\n      >\n        {value === \"\" ? \"?\" : value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"text\"\n        name={name}\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default StringRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: boolean;\n  setValue(value: boolean | undefined): void;\n};\nconst BooleanRowItem: FunctionComponent<Props> = ({\n  name,\n  value,\n  setValue,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value ? \"yes\" : \"no\"}\n      </span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"checkbox\"\n        checked={value}\n        name={name}\n        onChange={(e) => setValue(!value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onBlur={() => setIsEditing(false)}\n        style={{ cursor: \"pointer\" }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default BooleanRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: number;\n  setValue(value: number | undefined): void;\n};\nconst NumberRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)} style={{ cursor: \"pointer\" }}>\n        {value}\n      </span>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"number\"\n        name={name}\n        onChange={(e) =>\n          !isNaN(Number(e.target.value)) && setValue(Number(e.target.value))\n        }\n        value={value}\n        onBlur={() => setIsEditing(false)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NumberRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\ntype Props = {\n  name: string;\n  value: Date;\n  setValue(value: Date | undefined): void;\n};\nconst DateRowItem: FunctionComponent<Props> = ({ name, value, setValue }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  if (!isEditing) {\n    return (\n      <span onClick={() => setIsEditing(true)}>{date2HumanValue(value)}</span>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        type=\"date\"\n        name={name}\n        onBlur={() => setIsEditing(false)}\n        onChange={(e) => setValue(value2date(e.target.value))}\n        value={date2value(value)}\n        ref={(input) => {\n          input && input.focus();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            setIsEditing(false);\n          }\n        }}\n      />\n      <ButtonIcon onMouseDown={() => setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nfunction date2value(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\n\nfunction date2HumanValue(date: Date): string {\n  const year = date.getFullYear().toString();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${month}-${day}-${year}`;\n}\n\nfunction value2date(value: string): Date {\n  const [year, month, day] = value.split(\"-\");\n  return new Date(Number(year), Number(month) - 1, Number(day));\n}\n\nexport default DateRowItem;\n","import React, { useState, FunctionComponent } from \"react\";\nimport CreateIcon from \"../icons/CreateIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport { Value } from \"../row-items/DataAsList\";\n\ntype Props = {\n  name: string;\n  setValue(value: Value): void;\n};\nconst NullRowItem: FunctionComponent<Props> = (props) => {\n  const [isSelectingType, setIsSelectingType] = useState(false);\n  if (isSelectingType) {\n    return (\n      <>\n        <button onClick={() => props.setValue(false)}>checkbox</button>\n        <button onClick={() => props.setValue(0)}>number</button>\n        <button onClick={() => props.setValue(\"\")}>text</button>\n        <button onClick={() => props.setValue(new Date())}>date</button>\n        <button onClick={() => props.setValue([])}>list</button>\n        <button onClick={() => props.setValue({})}>object</button>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <ButtonIcon onClick={() => setIsSelectingType(true)}>\n        <CreateIcon size={20} />\n      </ButtonIcon>\n      <ButtonIcon onMouseDown={() => props.setValue(undefined)}>\n        <RemoveIcon size={20} />\n      </ButtonIcon>\n    </div>\n  );\n};\n\nexport default NullRowItem;\n","import React, { useState, FunctionComponent, CSSProperties } from \"react\";\n\ntype Props = {\n  name: string;\n  setName(temporaryName: string): void;\n  isValid(temporaryName: string): boolean;\n};\nconst commonStyle: CSSProperties = {\n  marginRight: 12,\n  width: 120,\n  boxSizing: \"border-box\",\n};\nconst RowItemName: FunctionComponent<Props> = ({ name, setName, isValid }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [temporaryName, setTemporaryName] = useState(name);\n  const saveName = () => {\n    if (isValid(temporaryName)) {\n      setName(temporaryName);\n      setIsEditing(false);\n    }\n  };\n  if (!isEditing) {\n    return (\n      <span\n        onClick={() => setIsEditing(true)}\n        style={{\n          fontWeight: \"bold\",\n          cursor: \"pointer\",\n          lineHeight: \"28px\",\n          ...commonStyle,\n        }}\n      >\n        {temporaryName === \"\" ? \"?\" : temporaryName}\n      </span>\n    );\n  }\n\n  return (\n    <input\n      type=\"text\"\n      name={temporaryName}\n      style={commonStyle}\n      onChange={(e) => setTemporaryName(e.target.value)}\n      value={temporaryName}\n      onBlur={saveName}\n      ref={(input) => {\n        input && input.focus();\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          saveName();\n        }\n      }}\n    />\n  );\n};\n\nexport default RowItemName;\n","import React, { FunctionComponent } from \"react\";\nimport SVGWrapper from \"./SVGWrapper\";\n\ntype Props = {\n  size: number;\n};\nconst AddIcon: FunctionComponent<Props> = ({ size }) => (\n  <SVGWrapper fontSize={size}>\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n  </SVGWrapper>\n);\nexport default AddIcon;\n","import React, { ReactNode, CSSProperties } from \"react\";\nimport StringRowItem from \"./StringRowItem\";\nimport BooleanRowItem from \"./BooleanRowItem\";\nimport NumberRowItem from \"./NumberRowItem\";\nimport DateRowItem from \"./DateRowItem\";\nimport NullRowItem from \"./NullRowItem\";\nimport RowItemName from \"./RowItemName\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport AddIcon from \"../icons/AddIcon\";\nimport RemoveIcon from \"../icons/RemoveIcon\";\n\nexport type Value =\n  | number\n  | boolean\n  | string\n  | Date\n  | void\n  | TreeNode[]\n  | TreeNode;\ntype TreeNode = {\n  [key: string]: Value;\n};\n\nconst listStyle: CSSProperties = {\n  listStyle: \"none\",\n  paddingLeft: 12,\n  borderLeft: \"1px solid #00000030\",\n  margin: \"4px 0 8px 0\",\n};\nconst listItemStyle: CSSProperties = {\n  padding: 4,\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\ntype Props<T> = {\n  node: T;\n  setParentValue: (newNode: T | undefined) => void;\n};\nconst DataAsList: <T extends TreeNode>(props: Props<T>) => ReactNode = (\n  props,\n) => {\n  const { node, setParentValue } = props;\n  return (\n    <ul style={listStyle}>\n      {Object.keys(node).map((key: string, index) => (\n        <li style={listItemStyle} key={key}>\n          {!(node instanceof Array) && (\n            <RowItemName\n              name={key}\n              setName={(name) => {\n                const newNode = Object.keys(node).reduce(\n                  (accumulator: TreeNode, currentKey) => {\n                    const isKeyBeingRenamed = currentKey === key;\n                    if (isKeyBeingRenamed) {\n                      accumulator[name] = node[currentKey];\n                    } else {\n                      accumulator[currentKey] = node[currentKey];\n                    }\n                    return accumulator;\n                  },\n                  {},\n                );\n                // @ts-ignore missing support for renames\n                setParentValue(newNode);\n              }}\n              isValid={(name) => name === key || node[name] === undefined}\n            />\n          )}\n          {(function () {\n            const value = node[key];\n            const setValue: (newValue: typeof value) => void = (newValue) => {\n              const newNode = Object.assign({}, node, { [key]: newValue });\n              if (node instanceof Array) {\n                const nodeAsArray = Object.values(newNode);\n                return setParentValue(\n                  // @ts-ignore losing array<T> type\n                  nodeAsArray.filter((v) => v !== undefined),\n                );\n              }\n              return setParentValue(newNode);\n            };\n\n            switch (typeof value) {\n              case \"string\":\n                if (isDate(value)) {\n                  return (\n                    <DateRowItem\n                      name={key}\n                      value={new Date(value)}\n                      setValue={setValue}\n                    />\n                  );\n                }\n                return (\n                  <StringRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"number\":\n                return (\n                  <NumberRowItem name={key} value={value} setValue={setValue} />\n                );\n              case \"boolean\":\n                return (\n                  <BooleanRowItem\n                    name={key}\n                    value={value}\n                    setValue={setValue}\n                  />\n                );\n              case \"object\":\n              default:\n                if (value instanceof Date) {\n                  return null;\n                }\n                if (value == null) {\n                  return <NullRowItem name={key} setValue={setValue} />;\n                }\n                // @ts-ignore DataAsList should take array\n                return <DataAsList node={value} setParentValue={setValue} />;\n            }\n          })()}\n        </li>\n      ))}\n      <li style={listItemStyle}>\n        <ButtonIcon\n          onClick={() => {\n            if (node instanceof Array) {\n              // @ts-ignore losing array<T> type\n              return setParentValue([...node, null]);\n            }\n            const lastField = Object.keys(node)\n              .reverse()\n              .find((key) => RegExp(/field:[0-9]+/).test(key));\n            const index = lastField ? Number(lastField.split(\":\")[1]) : 0;\n            return setParentValue({ ...node, [`field:${index + 1}`]: null });\n          }}\n        >\n          <AddIcon size={20} />\n        </ButtonIcon>\n        {Object.keys(node).length === 0 && (\n          <ButtonIcon onClick={() => setParentValue(undefined)}>\n            <RemoveIcon size={20} />\n          </ButtonIcon>\n        )}\n      </li>\n    </ul>\n  );\n};\n\nfunction isDate(value: string): boolean {\n  const regex = RegExp(\n    /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,\n  );\n  return regex.test(value);\n}\n\nexport default DataAsList;\n"],"sourceRoot":""}