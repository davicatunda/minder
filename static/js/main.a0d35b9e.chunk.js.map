{"version":3,"sources":["serviceWorker.ts","pages/shared-layout/Logo.tsx","pages/shared-layout/useTogglePaletteContext.tsx","pages/shared-layout/NavBar.tsx","pages/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Logo","size","fill","width","height","viewBox","xmlns","d","DEFAULT_THEME","palette","type","primary","main","blue","secondary","orange","red","warning","info","success","green","CustomThemeProvider","children","devicePalette","useMediaQuery","useState","localStorage","getItem","setPalette","togglePalette","useCallback","current","opposite","setItem","usePreferredPaletteType","paletteType","theme","useMemo","createMuiTheme","ThemeProvider","TogglePaletteContext","Provider","value","createContext","QUERY","gql","NavBar","useTheme","context","useContext","Error","useTogglePaletteContext","useQuery","data","loading","AppBar","position","color","Toolbar","NavBarButton","icon","route","label","style","flexGrow","IconButton","onClick","Brightness4","spacing","user","LoggedInButton","username","history","useHistory","client","useApolloClient","anchorRef","useRef","isShowingPopover","setIsShowingPopover","useMutation","logout","Button","startIcon","AccountCircle","ref","Typography","variant","Menu","anchorEl","open","onClose","MenuItem","resetStore","push","ListItemIcon","minWidth","MeetingRoom","fontSize","useLocation","hasSelectedStyle","pathname","textTransform","disableRipple","left","right","bottom","backgroundColor","common","white","Home","loadable","Offline","Standard","Proposal","Login","App","exact","path","Container","maxWidth","display","flexDirection","flex","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","createHttpLink","uri","cache","InMemoryCache","Root","utils","DateFnsUtils","CssBaseline","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4HAYMA,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DA2CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,uKCrGlD,SAASC,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,KAC7B,OACE,qBACEC,KAAK,eACLC,MAAK,OAAEF,QAAF,IAAEA,IAAQ,OACfG,OAAO,OACPC,QAAQ,cACRC,MAAM,6BALR,SAOE,sBAAMC,EAAE,w0E,+DCERC,EAAgB,CACpBC,QAAS,CACPC,KAAM,QACNC,QAAS,CAAEC,KAAMC,IAAK,MACtBC,UAAW,CAAEF,KAAMG,IAAM,MACzBhB,MAAO,CAAEa,KAAMI,IAAI,MACnBC,QAAS,CAAEL,KAAMG,IAAO,MACxBG,KAAM,CAAEN,KAAMC,IAAK,MACnBM,QAAS,CAAEP,KAAMQ,IAAM,QAIpB,SAASC,EAAT,GAAsE,IAAvCC,EAAsC,EAAtCA,SAAsC,EA6B5E,WACE,IAAMC,EAAgBC,YAAc,gCAChC,OACA,QAH6D,EAKnCC,mBAASC,aAAaC,QAAQ,YALK,mBAK1DlB,EAL0D,KAKjDmB,EALiD,KAO3DC,EAAgBC,uBAAY,WAChCF,GAAW,SAACG,GACV,IAAMC,EAAuB,SAAZD,EAAqB,QAAU,OAEhD,OADAL,aAAaO,QAAQ,UAAWD,GACzBA,OAER,IACH,OAAQvB,GACN,IAAK,OACH,MAAO,CAAC,OAAQoB,GAClB,IAAK,QACH,MAAO,CAAC,QAASA,GACnB,QACE,MAAO,CAACN,EAAeM,IAhDUK,GADqC,mBACnEC,EADmE,KACtDN,EADsD,KAEpEO,EAAQC,mBACZ,kBACEC,YAAe,2BACV9B,GADS,IAEZC,QAAQ,2BAAMD,EAAcC,SAArB,IAA8BC,KAAMyB,SAE/C,CAACA,IAEH,OACE,cAACI,EAAA,EAAD,CAAeH,MAAOA,EAAtB,SACE,cAACI,EAAqBC,SAAtB,CAA+BC,MAAO,CAAEb,iBAAxC,SACGP,MAOT,IAAMkB,EAAuBG,wBAA4C,M,sQCxBzE,IAAMC,EAAQC,cAAH,KAcI,SAASC,IACtB,IAAMV,EAAQW,cACNlB,EDSH,WACL,IAAMmB,EAAUC,qBAAWT,GAC3B,GAAe,MAAXQ,EACF,MAAM,IAAIE,MAAM,yCAElB,OAAOF,ECdmBG,GAAlBtB,cAFuB,EAGLuB,mBAAiCR,GAAnDS,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,QACd,OACE,cAACC,EAAA,EAAD,CACEC,SAAS,SACTC,MAA8B,UAAvBrB,EAAM3B,QAAQC,KAAmB,UAAY,UAFtD,SAIE,eAACgD,EAAA,EAAD,WACE,cAACC,EAAD,CAAcC,KAAM,cAAC5D,EAAD,CAAMC,KAAM,KAAQ4D,MAAM,UAAUC,MAAM,WAC9D,cAACH,EAAD,CAAcE,MAAM,mBAAmBC,MAAM,aAC7C,cAACH,EAAD,CAAcE,MAAM,mBAAmBC,MAAM,aAC7C,qBAAKC,MAAO,CAAEC,SAAU,KACxB,cAACC,EAAA,EAAD,CAAYC,QAASrC,EAArB,SACE,cAACsC,EAAA,EAAD,MAEF,qBAAKJ,MAAO,CAAE5D,MAAOiC,EAAMgC,QAAQ,MAClCd,EAAU,KAAqB,OAAV,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,MACtB,cAACC,EAAD,CAAgBC,SAAUlB,EAAKgB,KAAKE,WAEpC,cAACZ,EAAD,CAAcE,MAAM,gBAAgBC,MAAM,gBAOpD,SAASQ,EAAT,GAA6D,IAAnCC,EAAkC,EAAlCA,SAClBC,EAAUC,cACVC,EAASC,4BACTC,EAAYC,iBAAO,MAHiC,EAIVpD,oBAAS,GAJC,mBAInDqD,EAJmD,KAIjCC,EAJiC,OAKzCC,sBACfnC,cAD2B,MAAtBoC,EALmD,oBAY1D,OACE,qCACE,cAACC,EAAA,EAAD,CACEzB,MAAM,UACN0B,UAAW,cAACC,EAAA,EAAD,IACXlB,QAAS,kBAAMa,GAAoB,IACnCM,IAAKT,EAJP,SAME,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BhB,MAE5B,cAACiB,EAAA,EAAD,CACEC,SAAUb,EAAU7C,QACpB2D,KAAMZ,EACNa,QAAS,kBAAMZ,GAAoB,IAHrC,SAKE,eAACa,EAAA,EAAD,CACE1B,QAAS,WACPe,IAAS/F,MAAK,WACZ6F,GAAoB,GACpBrD,aAAaO,QAAQ,QAAS,IAC9ByC,EAAOmB,aAAa3G,MAAK,WACvBsF,EAAQsB,KAAK,mBANrB,UAWE,cAACC,EAAA,EAAD,CAAchC,MAAO,CAAEiC,SAAU,IAAjC,SACE,cAACC,EAAA,EAAD,CAAaC,SAAS,QAAQzC,MAAM,aAEtC,cAAC6B,EAAA,EAAD,6BAYV,SAAS3B,EAAT,GAAkE,IAA1CE,EAAyC,EAAzCA,MAAOD,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,MAC7B1B,EAAQW,cACRtE,EAAW0H,cACX3B,EAAUC,cACV2B,EAAmB3H,EAAS4H,WAAaxC,GAAmB,YAAVA,EACxD,OACE,eAACqB,EAAA,EAAD,CACEzB,MAAM,UACNS,QAAS,kBAAMM,EAAQsB,KAAKjC,IAC5BsB,UAAWvB,EACXG,MAAO,CAAEuC,cAAe,QACxBC,eAAa,EALf,UAOGH,GACC,sBACErC,MAAO,CACLP,SAAU,WACVgD,KAAMpE,EAAMgC,QAAQ,GACpBqC,MAAOrE,EAAMgC,QAAQ,GACrBsC,QAAStE,EAAMgC,QAAQ,GACvBhE,OAAQ,EACRuG,gBAAiBvE,EAAM3B,QAAQmG,OAAOC,SAI5C,cAACvB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BzB,O,YCpI1BgD,EAAOC,aAAS,kBAAM,iCACtBC,EAAUD,aAAS,kBAAM,4EACzBE,EAAWF,aAAS,kBAAM,6EAC1BG,EAAWH,aAAS,kBAAM,sEAC1BI,EAAQJ,aAAS,kBAAM,wDAmCdK,MAjCf,WACE,IAAMhF,EAAQW,cACd,OACE,eAAC,IAAD,WACE,cAACD,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,WAAlB,SACE,cAACR,EAAD,MAEF,eAACS,EAAA,EAAD,CACEC,SAAS,KACTzD,MAAO,CAAE0D,QAAS,OAAQC,cAAe,SAAUC,KAAM,GAF3D,UAIE,qBAAK5D,MAAO,CAAE3D,OAAQgC,EAAMgC,QAAQ,MACpC,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,mBAAlB,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,mBAAZ,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,+BAAZ,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,gBAAZ,SACE,cAACH,EAAD,YAIN,qBAAKpD,MAAO,CAAE3D,OAAQgC,EAAMgC,QAAQ,U,uDCrBpCwD,GAAWC,cAAW,SAACC,EAAD,SAAMC,EAAN,EAAMA,QAAN,MAAqB,CAC/CA,QAAQ,2BACHA,GADE,IAELC,cAAa,UAAEtG,aAAaC,QAAQ,gBAAvB,QAAmC,SAI9C+C,GAAS,IAAIuD,eAAa,CAC9BC,KAAMN,GAASO,OACbC,yBAAe,CACbC,IAAK,0DAGTC,MAAO,IAAIC,kBAGb,SAASC,KACP,OACE,cAAC,iBAAD,CAAgB9D,OAAQA,GAAxB,SACE,cAAC,IAAD,CAAyB+D,MAAOC,IAAhC,SACE,eAACrH,EAAD,WACE,cAACsH,EAAA,EAAD,IACA,cAAC,EAAD,WAOVC,KAASC,OAAO,cAACL,GAAD,IAAUM,SAASC,eAAe,SLtB3C,SAAkBjK,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiK,IAAIC,UAAwBzK,OAAOC,SAASyK,MACpDC,SAAW3K,OAAOC,SAAS0K,OAIvC,OAGF3K,OAAO4K,iBAAiB,QAAQ,WAC9B,IAAMvK,EAAK,UAAMoK,UAAN,sBAEP3K,IAgEV,SAAiCO,EAAeC,GAE9CuK,MAAMxK,EAAO,CACXkJ,QAAS,CAAE,iBAAkB,YAE5B7I,MAAK,SAACoK,GAEL,IAAMC,EAAcD,EAASvB,QAAQyB,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C3K,UAAUC,cAAc2K,MAAMzK,MAAK,SAACC,GAClCA,EAAayK,aAAa1K,MAAK,WAC7BV,OAAOC,SAASoL,eAKpBjL,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAmK,CAAwBjL,EAAOC,GAI/BC,UAAUC,cAAc2K,MAAMzK,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OKJ/BE,CAAuB,M","file":"static/js/main.a0d35b9e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function Logo({ size }: { size?: number }) {\n  return (\n    <svg\n      fill=\"currentColor\"\n      width={size ?? \"100%\"}\n      height=\"100%\"\n      viewBox=\"0 0 100 100\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M 64.984 8.73 C 76.744 12.943 84.985 22.628 87.624 35.396 C 90.644 50.175 82.029 64.451 67.562 68.665 C 65.55 69.23 62.909 69.607 61.589 69.483 C 59.513 69.293 59.198 69.105 59.198 67.721 C 59.198 66.274 59.513 66.086 62.909 65.709 C 76.682 63.947 86.178 51.244 84.103 37.471 C 82.405 26.779 76.243 18.289 66.746 13.572 C 52.281 6.466 33.225 12.755 26.243 26.968 C 24.42 30.679 23.854 33.068 21.779 45.835 C 21.339 48.854 20.584 50.237 17.376 54.451 C 15.239 57.218 13.665 59.734 13.918 60.111 C 14.105 60.489 15.363 61.369 16.684 62.06 C 19.262 63.319 20.017 64.954 19.451 67.783 C 19.201 69.168 19.451 69.859 20.584 70.803 C 21.904 71.872 21.967 72.186 21.274 73.382 C 20.584 74.513 20.646 74.954 21.842 76.399 C 22.973 77.846 23.099 78.602 22.785 81.683 C 22.281 85.96 22.973 86.589 28.004 86.589 C 32.471 86.589 34.168 84.953 34.985 79.985 C 35.363 77.909 35.613 67.532 35.613 56.967 C 35.613 33.76 36.065 31.921 41.41 26.512 C 45.561 22.363 48.948 21.811 54.796 21.811 C 61.84 21.811 68.631 26.34 71.714 33.068 C 73.538 37.093 73.474 43.822 71.651 47.345 C 67.627 54.892 58.695 57.847 50.897 54.262 C 45.3 51.621 42.155 46.024 42.658 39.357 C 43.098 33.006 47.815 28.728 54.356 28.728 C 58.633 28.728 62.153 30.489 64.292 33.697 C 69.513 41.684 63.915 51.119 55.299 48.728 C 50.834 47.47 47.815 41.874 49.703 38.225 C 52.155 33.509 60.015 35.332 59.387 40.489 C 59.136 42.628 57.186 42.943 56.117 40.992 C 55.739 40.301 55.173 39.546 54.796 39.294 C 53.852 38.603 52.721 39.987 53.035 41.496 C 53.664 43.886 55.173 45.081 57.69 45.081 C 61.84 45.081 63.853 40.992 61.714 36.905 C 60.142 33.887 57.204 32.501 53.684 32.501 C 50.916 32.501 46.132 35.544 46.132 40.301 C 46.132 49.798 56.053 55.206 63.978 50.175 C 67.627 47.911 69.26 44.703 69.198 40.048 C 68.996 28.296 55.633 19.3 43.954 29.168 C 41.421 31.307 39.752 35.747 39.498 41.292 L 39.387 58.853 C 39.073 80.802 39.011 81.998 37.689 84.828 C 35.992 88.6 32.785 90.362 27.69 90.362 C 20.961 90.362 18.069 87.531 18.948 81.872 C 19.262 79.355 19.137 78.854 17.942 77.846 C 16.432 76.652 16.056 74.954 15.93 68.79 C 15.866 66.588 15.552 65.709 14.734 65.457 C 14.169 65.269 12.785 64.325 11.778 63.319 C 8.823 60.615 9.2 58.98 13.854 52.69 C 17.879 47.281 17.942 47.156 18.634 41.621 C 20.143 29.043 22.47 23.51 28.948 17.031 C 33.728 12.315 39.199 9.107 45.236 7.596 C 50.394 6.278 59.576 6.78 64.984 8.73 Z\" />\n    </svg>\n  );\n}\n","import React, {\n  ReactNode,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\nimport { ThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { blue, green, orange, red } from \"@material-ui/core/colors\";\n\nconst DEFAULT_THEME = {\n  palette: {\n    type: \"light\",\n    primary: { main: blue[500] },\n    secondary: { main: orange[\"A100\"] },\n    error: { main: red[500] },\n    warning: { main: orange[500] },\n    info: { main: blue[500] },\n    success: { main: green[500] },\n  },\n};\n\nexport function CustomThemeProvider({ children }: { children?: ReactNode }) {\n  const [paletteType, togglePalette] = usePreferredPaletteType();\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        ...DEFAULT_THEME,\n        palette: { ...DEFAULT_THEME.palette, type: paletteType },\n      }),\n    [paletteType],\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <TogglePaletteContext.Provider value={{ togglePalette }}>\n        {children}\n      </TogglePaletteContext.Provider>\n    </ThemeProvider>\n  );\n}\n\ntype TTogglePaletteContext = { togglePalette(): void };\nconst TogglePaletteContext = createContext<TTogglePaletteContext | null>(null);\nexport function useTogglePaletteContext() {\n  const context = useContext(TogglePaletteContext);\n  if (context == null) {\n    throw new Error(\"missing TogglePaletteContext.Provider\");\n  }\n  return context;\n}\n\nfunction usePreferredPaletteType(): [\"dark\" | \"light\", () => void] {\n  const devicePalette = useMediaQuery(\"(prefers-color-scheme: dark)\")\n    ? \"dark\"\n    : \"light\";\n\n  const [palette, setPalette] = useState(localStorage.getItem(\"palette\"));\n\n  const togglePalette = useCallback(() => {\n    setPalette((current) => {\n      const opposite = current === \"dark\" ? \"light\" : \"dark\";\n      localStorage.setItem(\"palette\", opposite);\n      return opposite;\n    });\n  }, []);\n  switch (palette) {\n    case \"dark\":\n      return [\"dark\", togglePalette];\n    case \"light\":\n      return [\"light\", togglePalette];\n    default:\n      return [devicePalette, togglePalette];\n  }\n}\n","import { AccountCircle, Brightness4, MeetingRoom } from \"@material-ui/icons\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { ReactNode, useRef, useState } from \"react\";\nimport { gql, useApolloClient, useMutation, useQuery } from \"@apollo/client\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Logo from \"./Logo\";\nimport { useTogglePaletteContext } from \"./useTogglePaletteContext\";\n\nconst QUERY = gql`\n  query NavBarLoggedIn {\n    user {\n      username\n    }\n  }\n`;\n\ntype NavBarLoggedInResponse = {\n  user?: {\n    username: string;\n  };\n};\n\nexport default function NavBar() {\n  const theme = useTheme();\n  const { togglePalette } = useTogglePaletteContext();\n  const { data, loading } = useQuery<NavBarLoggedInResponse>(QUERY);\n  return (\n    <AppBar\n      position=\"static\"\n      color={theme.palette.type === \"light\" ? \"primary\" : \"default\"}\n    >\n      <Toolbar>\n        <NavBarButton icon={<Logo size={36} />} route=\"/minder\" label=\"Minder\" />\n        <NavBarButton route=\"/minder/memories\" label=\"Memories\" />\n        <NavBarButton route=\"/minder/standard\" label=\"Standard\" />\n        <div style={{ flexGrow: 1 }} />\n        <IconButton onClick={togglePalette}>\n          <Brightness4 />\n        </IconButton>\n        <div style={{ width: theme.spacing(2) }} />\n        {loading ? null : data?.user != null ? (\n          <LoggedInButton username={data.user.username} />\n        ) : (\n          <NavBarButton route=\"/minder/login\" label=\"Log in\" />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction LoggedInButton({ username }: { username: string }) {\n  const history = useHistory();\n  const client = useApolloClient();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  const [logout] = useMutation(\n    gql`\n      mutation Logout {\n        logout\n      }\n    `,\n  );\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        startIcon={<AccountCircle />}\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        <Typography variant=\"h6\">{username}</Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        open={isShowingPopover}\n        onClose={() => setIsShowingPopover(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            logout().then(() => {\n              setIsShowingPopover(false);\n              localStorage.setItem(\"token\", \"\");\n              client.resetStore().then(() => {\n                history.push(\"/minder/\");\n              });\n            });\n          }}\n        >\n          <ListItemIcon style={{ minWidth: 36 }}>\n            <MeetingRoom fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Logout</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\ntype NavBarButtonProps = {\n  route: string;\n  icon?: ReactNode;\n  label: string;\n};\nfunction NavBarButton({ route, icon, label }: NavBarButtonProps) {\n  const theme = useTheme();\n  const location = useLocation();\n  const history = useHistory();\n  const hasSelectedStyle = location.pathname === route && route !== \"/minder\";\n  return (\n    <Button\n      color=\"inherit\"\n      onClick={() => history.push(route)}\n      startIcon={icon}\n      style={{ textTransform: \"none\" }}\n      disableRipple\n    >\n      {hasSelectedStyle && (\n        <span\n          style={{\n            position: \"absolute\",\n            left: theme.spacing(1),\n            right: theme.spacing(1),\n            bottom: -theme.spacing(1),\n            height: 2,\n            backgroundColor: theme.palette.common.white,\n          }}\n        />\n      )}\n      <Typography variant=\"h6\">{label}</Typography>\n    </Button>\n  );\n}\n","import { Container, useTheme } from \"@material-ui/core\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport NavBar from \"./shared-layout/NavBar\";\nimport React from \"react\";\nimport loadable from \"@loadable/component\";\n\nconst Home = loadable(() => import(\"./home/HomePage\"));\nconst Offline = loadable(() => import(\"./memory/MemoryPage\"));\nconst Standard = loadable(() => import(\"./standard/StandardPage\"));\nconst Proposal = loadable(() => import(\"./proposal/ProposalPage\"));\nconst Login = loadable(() => import(\"./login/LoginPage\"));\n\nfunction App() {\n  const theme = useTheme();\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/minder/\">\n          <Home />\n        </Route>\n        <Container\n          maxWidth=\"md\"\n          style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}\n        >\n          <div style={{ height: theme.spacing(2) }} />\n          <Route exact path=\"/minder/memories\">\n            <Offline />\n          </Route>\n          <Route path=\"/minder/standard\">\n            <Standard />\n          </Route>\n          <Route path=\"/minder/proposal/:proposalId\">\n            <Proposal />\n          </Route>\n          <Route path=\"/minder/login\">\n            <Login />\n          </Route>\n        </Container>\n      </Switch>\n      <div style={{ height: theme.spacing(4) }} />\n    </Router>\n  );\n}\n\nexport default App;\n","import \"fontsource-roboto\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport App from \"./pages/App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { CustomThemeProvider } from \"./pages/shared-layout/useTogglePaletteContext\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst authLink = setContext((_, { headers }) => ({\n  headers: {\n    ...headers,\n    authorization: localStorage.getItem(\"token\") ?? \"\",\n  },\n}));\n\nconst client = new ApolloClient({\n  link: authLink.concat(\n    createHttpLink({\n      uri: \"https://thawing-wildwood-69808.herokuapp.com/graphql\",\n    }),\n  ),\n  cache: new InMemoryCache(),\n});\n\nfunction Root() {\n  return (\n    <ApolloProvider client={client}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <CustomThemeProvider>\n          <CssBaseline />\n          <App />\n        </CustomThemeProvider>\n      </MuiPickersUtilsProvider>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\nserviceWorker.register({});\n"],"sourceRoot":""}