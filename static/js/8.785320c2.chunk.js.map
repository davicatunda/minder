{"version":3,"sources":["utils/data-manipulation.ts","utils/encryption.ts","pages/memory/vault/MemoryVaultSettingsMenu.tsx","pages/memory/vault/MemoryVault.tsx","pages/memory/vault/info/MemoryVaultInfo.tsx","pages/memory/vault/MemoryVaultLayout.tsx","pages/memory/vault/MemoryVaultLockEditModeButton.tsx","pages/memory/google-vault/useGoogleCardContext.ts","google-integration/uploadFile.ts","pages/memory/vault/info/MemoryVaultSaveDataMenu.tsx","google-integration/updateFileContent.ts","pages/memory/vault/info/MemoryVaultSaveDataButton.tsx","pages/memory/vault/info/MemoryVaultSaveKeyMenu.tsx","pages/memory/vault/info/MemoryVaultSaveKeyButton.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","pages/standard/StandardPageAllProposalsSection.tsx","pages/standard/StandardPageCreateProposalSection.tsx","pages/standard/StandardPageProposedAPISection.tsx","pages/standard/StandardPage.tsx"],"names":["arraybuffer2stringUTF16","buf","String","fromCharCode","apply","Uint16Array","string2arraybufferUTF16","str","bufffer","ArrayBuffer","length","bufView","i","strLen","charCodeAt","arraybuffer2stringUTF8","Uint8Array","arraybuffer2base64UTF8","aUTF8CodeUnits","Array","prototype","forEach","call","_","idx","arr","btoa","buffer","btoaUTF8","base642arraybufferUTF8","str64","string2arraybufferUTF8","sBinaryString","atob","aBinaryView","atobUTF8","arraybuffer2base64UTF16","aUTF16CodeUnits","btoaUTF16","base642arraybufferUTF16","atobUTF16","plainText","key","a","iv","window","crypto","getRandomValues","subtle","importKey","name","cryptoKey","encrypt","cypher","data","split","encryptedMessage","decrypt","decryptedData","createKey","generateKey","exportKey","exportedKey","isKeyValid","test","useDataAsStore","decodedData","overrides","useState","store","setStore","title","useEffect","normalizeRoot","updateNodes","nodes","newNodes","node","newStore","rootNode","updated","Date","useDataDecryption","initialData","encryptionKey","setDecryptedData","hasFailed","setHasFailed","then","catch","encryptData","onComplete","denormalizeRoot","MemoryVaultSettingsMenu","onDelete","ref","useRef","isOpen","setIsOpen","onClick","anchorEl","current","open","onClose","DeleteItem","React","classes","root","css","minWidth","fontSize","color","aria-labelledby","aria-describedby","id","autoFocus","MemoryVault","vaultData","children","isReadOnly","draggableData","useDraggableItemsProvider","Provider","value","header","body","nodeKey","bodyButton","info","menuButton","cardButtons","MemoryVaultInfo","useDecodedDataContext","variant","display","date2HumanValue","created","MemoryVaultLayout","theme","useTheme","className","padding","spacing","minHeight","flexGrow","container","item","xs","lg","alignItems","s1","grow","flexDirection","gutterBottom","s2","MemoryVaultLockEditModeButton","useEditingContext","isEditing","setIsEditing","setBreadcrumbs","useBreadcrumbsContext","enterDelay","GoogleCardContext","createContext","useGoogleCardContext","context","useContext","googleResourceId","uploadFile","config","encryptedData","form","FormData","append","Blob","JSON","stringify","mimeType","parents","appProperties","withKey","undefined","type","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","setRequestHeader","gapi","auth","getToken","access_token","responseType","send","listItemIconStyle","MemoryVaultSaveDataMenu","menuProps","useGoogleAuthContext","Menu","LoggedOutActions","onItemPress","currentUser","get","isSignedIn","LoggedInActions","MenuItem","e","element","document","createElement","setAttribute","encodeURIComponent","style","appendChild","click","removeChild","ListItemIcon","CloudDownload","Typography","Divider","navigator","clipboard","writeText","FileCopy","icon","googleDrive","width","height","Tooltip","placement","HelpOutline","fileId","updateFileContent","MemoryVaultSaveDataButton","anchorRef","isShowingPopover","setIsShowingPopover","Button","fullWidth","size","MemoryVaultSaveKeyMenu","MeetingRoom","MemoryVaultSaveKeyButton","Container","props","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","concat","capitalize","withStyles","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","maxWidthXl","xl","StandardPageAllProposalsSection","proposals","history","useHistory","Paper","List","map","uuid","ListItem","button","push","ListItemText","primary","SUGGESTED_PROPOSAL","description","ADD_PROPOSAL","gql","StandardPageCreateProposalSection","isCreating","setIsCreating","setTitle","useMutation","addProposal","variables","proposal","align","TextField","margin","label","onChange","target","StandardPageProposedAPISection","standardProposal","version","BreadcrumbsProvider","BreadcrumbPaths","CardView","QUERY","StandardPage","useQuery","user"],"mappings":"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","file":"static/js/8.785320c2.chunk.js","sourcesContent":["/**\n * ArrayBuffer to String UTF 16 and 8 helpers\n */\nexport function arraybuffer2stringUTF16(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}\n\nexport function string2arraybufferUTF16(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\nexport function arraybuffer2stringUTF8(buf: ArrayBuffer): string {\n  return String.fromCharCode.apply(null, new Uint8Array(buf) as any);\n}\n\nexport function string2arraybufferUTF8(str: string): ArrayBuffer {\n  const bufffer = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(bufffer);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufffer;\n}\n\n/**\n * Base 64 <-> array buffer UTF 16 and 8\n */\nexport function arraybuffer2base64UTF8(buf: ArrayBuffer): string {\n  return btoaUTF8(arraybuffer2stringUTF8(buf));\n}\n\nexport function base642arraybufferUTF8(str64: string): ArrayBuffer {\n  return string2arraybufferUTF8(atobUTF8(str64));\n}\n\nexport function arraybuffer2base64UTF16(buf: ArrayBuffer): string {\n  return btoaUTF16(arraybuffer2stringUTF16(buf));\n}\n\nexport function base642arraybufferUTF16(str64: string): ArrayBuffer {\n  return string2arraybufferUTF16(atobUTF16(str64));\n}\n\n/**\n * Base 64  <-> String UTF 16 and 8\n */\n\nfunction btoaUTF16(str: string): string {\n  const aUTF16CodeUnits = new Uint16Array(str.length);\n  Array.prototype.forEach.call(aUTF16CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF16CodeUnits.buffer));\n}\n\nfunction atobUTF16(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF16(aBinaryView.buffer);\n}\n\nfunction btoaUTF8(str: string): string {\n  const aUTF8CodeUnits = new Uint8Array(str.length);\n  Array.prototype.forEach.call(aUTF8CodeUnits, (_, idx, arr) => {\n    arr[idx] = str.charCodeAt(idx);\n  });\n  return btoa(arraybuffer2stringUTF8(aUTF8CodeUnits.buffer));\n}\n\nfunction atobUTF8(str64: string): string {\n  const sBinaryString = atob(str64);\n  const aBinaryView = new Uint8Array(sBinaryString.length);\n  Array.prototype.forEach.call(aBinaryView, (_, idx, arr) => {\n    arr[idx] = sBinaryString.charCodeAt(idx);\n  });\n  return arraybuffer2stringUTF8(aBinaryView.buffer);\n}\n","/**\n * Set of methods used to encrypt and decrypt the data, all operating on base 64\n * TODO: remove redundant conversions for more direct mappings.\n */\n\nimport { Store, TNode, denormalizeRoot, normalizeRoot } from \"./normalization\";\nimport {\n  arraybuffer2base64UTF16,\n  arraybuffer2base64UTF8,\n  arraybuffer2stringUTF16,\n  base642arraybufferUTF16,\n  base642arraybufferUTF8,\n  string2arraybufferUTF16,\n} from \"./data-manipulation\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * Encrypts the data together with iv on base 64 format\n * @param {string} plainText: plain UTF 16 text\n * @param {string} key: encrypted on base 64 format\n */\nexport async function encrypt(plainText: string, key: string): Promise<string> {\n  const iv = window.crypto.getRandomValues(new Uint8Array(12));\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const cypher = await window.crypto.subtle.encrypt(\n    { name: \"AES-GCM\", iv: iv },\n    cryptoKey,\n    string2arraybufferUTF16(plainText),\n  );\n\n  // join iv and message\n  return `${arraybuffer2base64UTF8(iv)}!${arraybuffer2base64UTF16(cypher)}`;\n}\n\n/**\n * Decrypts the data to plain text\n * @param {string} data: encrypted on base 64 format\n * @param {string} key: encrypted on base 64 format\n */\nexport async function decrypt(data: string, key: string): Promise<string> {\n  // split iv from message\n  const [iv, encryptedMessage] = data.split(\"!\");\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    base642arraybufferUTF16(key),\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const decryptedData = await window.crypto.subtle.decrypt(\n    { name: \"AES-GCM\", iv: base642arraybufferUTF8(iv) },\n    cryptoKey,\n    base642arraybufferUTF16(encryptedMessage),\n  );\n  return arraybuffer2stringUTF16(decryptedData);\n}\n\n/**\n * Creates an unique base 64 key for all encryptions\n */\nexport async function createKey(): Promise<string> {\n  const key = await window.crypto.subtle.generateKey(\n    { name: \"AES-GCM\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n  const exportedKey = await window.crypto.subtle.exportKey(\"raw\", key);\n  return arraybuffer2base64UTF16(exportedKey);\n}\n\nexport function isKeyValid(key: string): boolean {\n  const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  return base64regex.test(key) && key.length === 44;\n}\n\nexport function useDataAsStore(\n  decodedData: string | null,\n  overrides: {\n    title?: string;\n  },\n): {\n  store: Store;\n  updateNodes: (nodes: TNode[]) => void;\n} | null {\n  const [store, setStore] = useState<Store | null>(null);\n  const { title } = overrides;\n  useEffect(() => {\n    if (decodedData === null) {\n      return;\n    }\n    setStore(normalizeRoot(decodedData, { title }));\n  }, [decodedData, title]);\n\n  if (store === null) {\n    return null;\n  }\n\n  return {\n    store,\n    updateNodes: (nodes: TNode[]) => {\n      const newNodes = { ...store.nodes };\n      nodes.forEach((node) => (newNodes[node.key] = node));\n      const newStore = {\n        rootNode: {\n          ...store.rootNode,\n          updated: new Date(),\n        },\n        nodes: newNodes,\n      };\n      setStore(newStore);\n    },\n  };\n}\n\nexport function useDataDecryption(initialData: string, encryptionKey: string) {\n  const [decryptedData, setDecryptedData] = useState<string | null>(null);\n  const [hasFailed, setHasFailed] = useState<boolean>(false);\n  useEffect(() => {\n    const isDecryptedAlready = initialData[0] === \"{\";\n    if (isDecryptedAlready) {\n      setDecryptedData(initialData);\n      setHasFailed(false);\n    } else {\n      decrypt(initialData, encryptionKey)\n        .then((data) => {\n          setDecryptedData(data);\n          setHasFailed(false);\n        })\n        .catch(() => {\n          setHasFailed(true);\n          setDecryptedData(\"{}\");\n        });\n    }\n  }, [initialData, encryptionKey]);\n  return { decryptedData, hasFailed };\n}\n\nexport function useDataEncryption(store: Store, encryptionKey: string) {\n  const [encryptedData, setEncryptedData] = useState<string | null>(null);\n  useEffect(() => {\n    encryptData(store, encryptionKey, setEncryptedData);\n  }, [store, encryptionKey]);\n  return encryptedData;\n}\n\nexport function encryptData(\n  store: Store,\n  encryptionKey: string,\n  onComplete: (encryptedData: string) => void,\n) {\n  const plainText = denormalizeRoot(store);\n  encrypt(plainText, encryptionKey).then(onComplete);\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { Delete, MoreHoriz } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\n\nimport { css } from \"@emotion/css\";\n\ntype Props = {\n  onDelete: () => void;\n};\nexport default function MemoryVaultSettingsMenu({ onDelete }: Props) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton onClick={() => setIsOpen(true)} ref={ref}>\n        <MoreHoriz />\n      </IconButton>\n      <Menu anchorEl={ref.current} open={isOpen} onClose={() => setIsOpen(false)}>\n        <DeleteItem\n          onDelete={() => {\n            onDelete();\n            setIsOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n\nfunction DeleteItem({ onDelete }: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <>\n      <MenuItem onClick={() => setIsOpen(true)}>\n        <ListItemIcon classes={{ root: css({ minWidth: 36 }) }}>\n          <Delete fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Delete</Typography>\n      </MenuItem>\n      <Dialog\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete this item?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This action can not be undone, are you sure you want to procced?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsOpen(false)} color=\"primary\">\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              onDelete();\n              setIsOpen(false);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { useDataAsStore, useDataDecryption } from \"../../../utils/encryption\";\nimport useDraggableItemsProvider, {\n  DraggableItemsContext,\n} from \"../useDraggableItemsContext\";\n\nimport BreadcrumbPaths from \"./BreadcrumbPaths\";\nimport BreadcrumbsProvider from \"./BreadcrumbsProvider\";\nimport CardView from \"./cards/CardView\";\nimport { DecodedDataContext } from \"../useDecodedDataContext\";\nimport EditingProvider from \"./EditingProvider\";\nimport MemoryVaultInfo from \"./info/MemoryVaultInfo\";\nimport MemoryVaultLayout from \"./MemoryVaultLayout\";\nimport MemoryVaultLockEditModeButton from \"./MemoryVaultLockEditModeButton\";\nimport MemoryVaultSaveDataButton from \"./info/MemoryVaultSaveDataButton\";\nimport MemoryVaultSaveKeyButton from \"./info/MemoryVaultSaveKeyButton\";\nimport MemoryVaultSettingsMenu from \"./MemoryVaultSettingsMenu\";\nimport React from \"react\";\nimport { Store } from \"../../../utils/normalization\";\n\nexport type VaultData = {\n  title: string;\n  encryptionKey: string;\n  initialData: string;\n};\n\ntype Props = {\n  vaultData: VaultData;\n  children?(store: Store): void;\n  isReadOnly?: boolean;\n  onDelete: () => void;\n};\n\nexport default function MemoryVault({\n  vaultData: { title, encryptionKey, initialData },\n  children,\n  isReadOnly = false,\n  onDelete,\n}: Props) {\n  const draggableData = useDraggableItemsProvider();\n  const { decryptedData } = useDataDecryption(initialData, encryptionKey);\n  const data = useDataAsStore(decryptedData, { title });\n  if (!data) {\n    return null;\n  }\n  const { store, updateNodes } = data;\n  return (\n    <EditingProvider>\n      <BreadcrumbsProvider>\n        <DraggableItemsContext.Provider value={draggableData}>\n          <DecodedDataContext.Provider\n            value={{\n              store,\n              encryptionKey,\n              updateNodes: isReadOnly ? null : updateNodes,\n            }}\n          >\n            <MemoryVaultLayout\n              header={<BreadcrumbPaths />}\n              body={<CardView nodeKey={store.rootNode.value} />}\n              bodyButton={<MemoryVaultLockEditModeButton />}\n              info={<MemoryVaultInfo />}\n              menuButton={<MemoryVaultSettingsMenu onDelete={onDelete} />}\n              cardButtons={[\n                <MemoryVaultSaveKeyButton />,\n                <MemoryVaultSaveDataButton />,\n              ]}\n            />\n            {children && children(store)}\n          </DecodedDataContext.Provider>\n        </DraggableItemsContext.Provider>\n      </BreadcrumbsProvider>\n    </EditingProvider>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { date2HumanValue } from \"../cards/textValueFromNode\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultInfo() {\n  const { store } = useDecodedDataContext();\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"textSecondary\" display=\"block\">\n        Created: {date2HumanValue(store.rootNode.created)}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" display=\"block\">\n        Last Updated: {date2HumanValue(store.rootNode.updated)}\n      </Typography>\n    </>\n  );\n}\n","import { Grid, Paper, Typography, useTheme } from \"@material-ui/core\";\nimport { HorizontalSpace, VerticalSpace } from \"../../core/Spacing\";\nimport React, { ReactNode } from \"react\";\n\nimport { css } from \"@emotion/css\";\n\ntype Props = {\n  header: ReactNode;\n  body: ReactNode;\n  bodyButton: ReactNode;\n  info: ReactNode;\n  menuButton: ReactNode;\n  cardButtons: ReactNode[];\n};\nexport default function MemoryVaultLayout({\n  header,\n  body,\n  bodyButton,\n  info,\n  menuButton,\n  cardButtons,\n}: Props) {\n  const theme = useTheme();\n  return (\n    <Paper\n      className={css({\n        padding: `${theme.spacing(3)}px ${theme.spacing(2)}px`,\n        minHeight: 300,\n        display: \"flex\",\n        flexGrow: 1,\n      })}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} lg={9}>\n          <div className={css({ display: \"flex\", alignItems: \"center\" })}>\n            {header}\n            <HorizontalSpace s1 grow />\n            {bodyButton}\n          </div>\n          <VerticalSpace s1 />\n          {body}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          lg={3}\n          classes={{\n            root: css({ display: \"flex\", flexDirection: \"column\" }),\n          }}\n        >\n          <Typography variant=\"h6\" gutterBottom display=\"block\">\n            <div className={css({ display: \"flex\", alignItems: \"center\" })}>\n              Details\n              <HorizontalSpace s1 grow />\n              {menuButton}\n            </div>\n          </Typography>\n          {info}\n          <VerticalSpace s2 grow />\n          <div className={css({ display: \"flex\" })}>\n            {cardButtons[0]}\n            <HorizontalSpace s1 />\n            {cardButtons[1]}\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import { Lock, LockOpen } from \"@material-ui/icons\";\n\nimport { Tooltip } from \"@material-ui/core\";\nimport { useBreadcrumbsContext } from \"./BreadcrumbsProvider\";\nimport { useEditingContext } from \"./EditingProvider\";\n\nexport default function MemoryVaultLockEditModeButton() {\n  const { isEditing, setIsEditing } = useEditingContext();\n  const { setBreadcrumbs } = useBreadcrumbsContext();\n\n  return isEditing ? (\n    <Tooltip title=\"Unlocked\" enterDelay={200}>\n      <LockOpen\n        onClick={() => {\n          setIsEditing(false);\n          setBreadcrumbs([]);\n        }}\n      />\n    </Tooltip>\n  ) : (\n    <Tooltip title=\"Locked, unlock to edit and move items\" enterDelay={1000}>\n      <Lock\n        onClick={() => {\n          setIsEditing(true);\n          setBreadcrumbs([]);\n        }}\n      />\n    </Tooltip>\n  );\n}\n","import { createContext, useContext } from \"react\";\n\ntype TGoogleCardContext = {\n  googleResourceId: string;\n};\n\nexport const GoogleCardContext = createContext<TGoogleCardContext | null>(null);\n\nexport default function useGoogleCardContext() {\n  const context = useContext(GoogleCardContext);\n  return context?.googleResourceId;\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function uploadFile(\n  store: Store,\n  encryptionKey: string,\n  config: { withKey: boolean },\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const form = new FormData();\n    form.append(\n      \"metadata\",\n      new Blob(\n        [\n          JSON.stringify({\n            name: store.rootNode.title,\n            mimeType: \"text/plain;charset=base64\",\n            parents: [\"appDataFolder\"],\n            appProperties: {\n              title: store.rootNode.title,\n              encryptionKey: config.withKey ? encryptionKey : undefined,\n            },\n          }),\n        ],\n        { type: \"application/json\" },\n      ),\n    );\n    form.append(\"file\", new Blob([encryptedData], { type: \"text/plain\" }));\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"POST\",\n      \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\",\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.responseType = \"json\";\n    xhr.send(form);\n  });\n}\n","import { CloudDownload, FileCopy, HelpOutline } from \"@material-ui/icons\";\nimport {\n  Divider,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  MenuProps,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { HorizontalSpace } from \"../../../core/Spacing\";\nimport { Icon } from \"@iconify/react\";\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport { denormalizeRoot } from \"../../../../utils/normalization\";\nimport { encryptData } from \"../../../../utils/encryption\";\nimport googleDrive from \"@iconify-icons/mdi/google-drive\";\nimport updateFileContent from \"../../../../google-integration/updateFileContent\";\nimport uploadFile from \"../../../../google-integration/uploadFile\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\nimport { useGoogleAuthContext } from \"../../../../google-integration/useGoogleAuthProvider\";\nimport useGoogleCardContext from \"../../google-vault/useGoogleCardContext\";\n\nconst listItemIconStyle = css({ minWidth: 36 });\n\ntype Props = {\n  onClose: () => void;\n  menuProps: MenuProps;\n};\nexport default function MemoryVaultSaveDataMenu({ onClose, menuProps }: Props) {\n  const auth = useGoogleAuthContext();\n  return (\n    <Menu {...menuProps}>\n      <LoggedOutActions onItemPress={onClose} />\n      {auth?.currentUser.get()?.isSignedIn() === true && (\n        <LoggedInActions onItemPress={onClose} />\n      )}\n    </Menu>\n  );\n}\n\nfunction LoggedOutActions({ onItemPress }: { onItemPress: () => void }) {\n  const { store, encryptionKey } = useDecodedDataContext();\n  return (\n    <>\n      {encryptionKey && (\n        <MenuItem\n          onClick={(e) => {\n            onItemPress();\n            encryptData(store, encryptionKey, (data) => {\n              const element = document.createElement(\"a\");\n              element.setAttribute(\n                \"href\",\n                \"data:text/plain;charset=base64,\" + encodeURIComponent(data),\n              );\n              element.setAttribute(\"download\", \"data.ish\");\n              element.style.display = \"none\";\n              document.body.appendChild(element);\n              element.click();\n              document.body.removeChild(element);\n            });\n          }}\n        >\n          <ListItemIcon className={listItemIconStyle}>\n            <CloudDownload fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Download</Typography>\n        </MenuItem>\n      )}\n      <Divider />\n      {encryptionKey && (\n        <MenuItem\n          onClick={(e) => {\n            encryptData(store, encryptionKey, (data) => {\n              navigator.clipboard.writeText(data).then(() => {\n                onItemPress();\n              });\n            });\n          }}\n        >\n          <ListItemIcon className={listItemIconStyle}>\n            <FileCopy fontSize=\"small\" color=\"action\" />\n          </ListItemIcon>\n          <Typography>Copy</Typography>\n        </MenuItem>\n      )}\n      <MenuItem\n        onClick={(e) => {\n          navigator.clipboard.writeText(denormalizeRoot(store)).then(() => {\n            onItemPress();\n          });\n        }}\n      >\n        <ListItemIcon className={listItemIconStyle}>\n          <FileCopy fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Copy as JSON</Typography>\n      </MenuItem>\n    </>\n  );\n}\n\nfunction LoggedInActions({ onItemPress }: { onItemPress: () => void }) {\n  const googleResourceId = useGoogleCardContext();\n  const { store, encryptionKey } = useDecodedDataContext();\n  return (\n    <>\n      <Divider />\n      {encryptionKey && (\n        <MenuItem\n          onClick={(e) => {\n            onItemPress();\n            uploadFile(store, encryptionKey, { withKey: false });\n          }}\n        >\n          <ListItemIcon className={listItemIconStyle}>\n            <Icon icon={googleDrive} width={20} height={20} />\n          </ListItemIcon>\n          <Typography>{googleResourceId ? \"Save as copy\" : \"Save\"}</Typography>\n        </MenuItem>\n      )}\n      {encryptionKey && (\n        <MenuItem\n          onClick={(e) => {\n            onItemPress();\n            uploadFile(store, encryptionKey, { withKey: true });\n          }}\n        >\n          <ListItemIcon className={listItemIconStyle}>\n            <Icon icon={googleDrive} width={20} height={20} />\n          </ListItemIcon>\n          <Typography>\n            {googleResourceId ? \"Save with key as copy\" : \"Save with key\"}\n          </Typography>\n          <HorizontalSpace s1 />\n          <Tooltip\n            title=\"This option is not recommended as it relies on your Google account not being compromised, prefer saving your key offline for extra safety\"\n            placement=\"bottom\"\n          >\n            <HelpOutline fontSize=\"inherit\" />\n          </Tooltip>\n        </MenuItem>\n      )}\n      {googleResourceId && encryptionKey && (\n        <MenuItem\n          onClick={(e) => {\n            onItemPress();\n            updateFileContent(store, encryptionKey, googleResourceId);\n          }}\n        >\n          <ListItemIcon className={listItemIconStyle}>\n            <Icon icon={googleDrive} width={20} height={20} />\n          </ListItemIcon>\n          <Typography>Update</Typography>\n          <HorizontalSpace s1 />\n        </MenuItem>\n      )}\n    </>\n  );\n}\n","import { Store } from \"../utils/normalization\";\nimport { encryptData } from \"../utils/encryption\";\n\nexport default function updateFileContent(\n  store: Store,\n  encryptionKey: string,\n  fileId: string,\n  onComplete?: () => void,\n) {\n  encryptData(store, encryptionKey, (encryptedData) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"json\";\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      onComplete && onComplete();\n    };\n\n    xhr.open(\n      \"PATCH\",\n      `https://www.googleapis.com/upload/drive/v3/files/${fileId}?uploadType=media`,\n    );\n    xhr.setRequestHeader(\n      \"Authorization\",\n      \"Bearer \" + gapi.auth.getToken().access_token,\n    );\n    xhr.send(encryptedData);\n  });\n}\n","import React, { useRef, useState } from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport MemoryVaultSaveDataMenu from \"./MemoryVaultSaveDataMenu\";\n\nexport default function MemoryVaultSaveDataButton() {\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Data\n      </Button>\n      <MemoryVaultSaveDataMenu\n        onClose={() => setIsShowingPopover(false)}\n        menuProps={{\n          onClose: () => setIsShowingPopover(false),\n          open: isShowingPopover,\n          anchorEl: anchorRef.current,\n        }}\n      />\n    </>\n  );\n}\n","import { CloudDownload, MeetingRoom } from \"@material-ui/icons\";\nimport {\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  MenuProps,\n  Typography,\n} from \"@material-ui/core\";\n\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nconst listItemIconStyle = css({ minWidth: 36 });\n\ntype Props = {\n  onClose: () => void;\n  menuProps: MenuProps;\n};\nexport default function MemoryVaultSaveKeyMenu({ onClose, menuProps }: Props) {\n  const { encryptionKey } = useDecodedDataContext();\n  if (!encryptionKey) {\n    return null;\n  }\n  return (\n    <Menu {...menuProps}>\n      <MenuItem\n        onClick={() => {\n          onClose();\n          const element = document.createElement(\"a\");\n          element.setAttribute(\n            \"href\",\n            `data:text/plain;charset=base64,${encryptionKey}`,\n          );\n          element.setAttribute(\"download\", \"key.ish\");\n          element.style.display = \"none\";\n          document.body.appendChild(element);\n          element.click();\n          document.body.removeChild(element);\n        }}\n      >\n        <ListItemIcon className={listItemIconStyle}>\n          <CloudDownload fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Download</Typography>\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          navigator.clipboard.writeText(encryptionKey).then(() => {\n            onClose();\n          });\n        }}\n      >\n        <ListItemIcon className={listItemIconStyle}>\n          <MeetingRoom fontSize=\"small\" color=\"action\" />\n        </ListItemIcon>\n        <Typography>Copy</Typography>\n      </MenuItem>\n    </Menu>\n  );\n}\n","import React, { useRef, useState } from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport MemoryVaultSaveKeyMenu from \"./MemoryVaultSaveKeyMenu\";\nimport useDecodedDataContext from \"../../useDecodedDataContext\";\n\nexport default function MemoryVaultSaveKeyButton() {\n  const { encryptionKey } = useDecodedDataContext();\n  const anchorRef = useRef(null);\n  const [isShowingPopover, setIsShowingPopover] = useState(false);\n  if (!encryptionKey) {\n    return null;\n  }\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        fullWidth\n        color=\"primary\"\n        onClick={() => setIsShowingPopover(true)}\n        ref={anchorRef}\n      >\n        Save Key\n      </Button>\n      <MemoryVaultSaveKeyMenu\n        onClose={() => setIsShowingPopover(false)}\n        menuProps={{\n          onClose: () => setIsShowingPopover(false),\n          open: isShowingPopover,\n          anchorEl: anchorRef.current,\n        }}\n      />\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {\n  proposals: Array<{ uuid: string }>;\n};\nexport default function StandardPageAllProposalsSection({ proposals }: Props) {\n  const theme = useTheme();\n  const history = useHistory();\n  return (\n    <Paper className={css({ padding: theme.spacing(3), width: \"100%\" })}>\n      <Typography variant=\"h6\">All Proposals</Typography>\n      <List>\n        {proposals.map(({ uuid }) => (\n          <ListItem\n            button\n            onClick={() => history.push(`/minder/proposal/${uuid}`)}\n            key={uuid}\n          >\n            <ListItemText primary={`Proposal ${uuid}`} />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n","import { Button, Paper, TextField, Typography, useTheme } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport MemoryVault from \"../memory/vault/MemoryVault\";\nimport { VerticalSpace } from \"../core/Spacing\";\nimport { css } from \"@emotion/css\";\nimport { denormalizeRoot } from \"../../utils/normalization\";\n\nconst SUGGESTED_PROPOSAL = {\n  \"?Parent field\": {\n    \"Proposed Field\": {\n      type: \"text\",\n      description: \"# in markdown\",\n      \"?subfields\": [\"more fields\"],\n    },\n  },\n};\nconst ADD_PROPOSAL = gql`\n  mutation Adding($proposal: String!) {\n    addProposal(proposal: $proposal) {\n      uuid\n    }\n  }\n`;\nconst DUMMY_KEY = \"1Qd1fIUBT6KuzgM9mQOIkk8k77mkXz/4BGMnttcdY1c=\";\nexport default function StandardPageCreateProposalSection() {\n  const theme = useTheme();\n  const [isCreating, setIsCreating] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [addProposal] = useMutation(ADD_PROPOSAL);\n  if (!isCreating) {\n    return (\n      <Paper\n        className={css({\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: theme.spacing(2),\n          maxWidth: 380,\n          width: \"100%\",\n        })}\n      >\n        <Typography variant=\"h6\" align=\"center\">\n          Start\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          label=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <VerticalSpace s2 grow />\n        <Button\n          size=\"large\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setIsCreating(true)}\n        >\n          Make new proposal\n        </Button>\n      </Paper>\n    );\n  }\n  return (\n    <MemoryVault\n      vaultData={{\n        title,\n        encryptionKey: DUMMY_KEY,\n        initialData: JSON.stringify(SUGGESTED_PROPOSAL),\n      }}\n      onDelete={() => setIsCreating(false)}\n    >\n      {(store) => (\n        <>\n          <VerticalSpace s2 />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              addProposal({ variables: { proposal: denormalizeRoot(store) } });\n              setIsCreating(false);\n              setTitle(\"\");\n            }}\n          >\n            Make new proposal\n          </Button>\n        </>\n      )}\n    </MemoryVault>\n  );\n}\n","import { Paper, useTheme } from \"@material-ui/core\";\n\nimport BreadcrumbPaths from \"../memory/vault/BreadcrumbPaths\";\nimport BreadcrumbsProvider from \"../memory/vault/BreadcrumbsProvider\";\nimport CardView from \"../memory/vault/cards/CardView\";\nimport { DecodedDataContext } from \"../memory/useDecodedDataContext\";\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport { normalizeRoot } from \"../../utils/normalization\";\n\ntype Props = {\n  standardProposal: {\n    version: string;\n    data: string;\n  };\n};\nexport default function StandardPageProposedAPISection({ standardProposal }: Props) {\n  const theme = useTheme();\n  const title = `Proposed API ${standardProposal.version}`;\n  const store = normalizeRoot(standardProposal.data, { title });\n  return (\n    <BreadcrumbsProvider>\n      <DecodedDataContext.Provider value={{ store, updateNodes: null }}>\n        <Paper className={css({ padding: theme.spacing(3) })}>\n          <BreadcrumbPaths />\n          <CardView nodeKey={store.rootNode.value} />\n        </Paper>\n      </DecodedDataContext.Provider>\n    </BreadcrumbsProvider>\n  );\n}\n","import React, { FunctionComponent } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport { Container } from \"@material-ui/core\";\nimport StandardPageAllProposalsSection from \"./StandardPageAllProposalsSection\";\nimport StandardPageCreateProposalSection from \"./StandardPageCreateProposalSection\";\nimport StandardPageProposedAPISection from \"./StandardPageProposedAPISection\";\nimport { VerticalSpace } from \"../core/Spacing\";\n\ntype StandardPageResponse = {\n  user?: {\n    uuid: string;\n  };\n  standardProposal: {\n    version: string;\n    data: string;\n  };\n  proposals: Array<{ uuid: string }>;\n};\nconst QUERY = gql`\n  query StandardPage {\n    user {\n      uuid\n    }\n    standardProposal {\n      version\n      data\n    }\n    proposals {\n      uuid\n    }\n  }\n`;\n\nconst StandardPage: FunctionComponent<{}> = () => {\n  const { data } = useQuery<StandardPageResponse>(QUERY);\n  if (data == null) {\n    return null;\n  }\n  const { standardProposal, proposals } = data;\n  return (\n    <Container maxWidth=\"md\">\n      <VerticalSpace s2 />\n      <StandardPageProposedAPISection standardProposal={standardProposal} />\n      <VerticalSpace s2 />\n      {data.user?.uuid != null && (\n        <>\n          <StandardPageCreateProposalSection />\n          <VerticalSpace s2 />\n        </>\n      )}\n      <StandardPageAllProposalsSection proposals={proposals} />\n    </Container>\n  );\n};\n\nexport default StandardPage;\n"],"sourceRoot":""}